{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#home","text":"For full documentation visit mkdocs.org .","title":"Home"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"about/","text":"About Hi, My name is Xiangao2018, Welcome to my webSite","title":"About"},{"location":"about/#about","text":"Hi, My name is Xiangao2018, Welcome to my webSite","title":"About"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/","text":"\u547d\u4ee4\u6a21\u5f0f \u6807\u7b7e\uff08\u7a7a\u683c\u5206\u9694\uff09\uff1a \u8bbe\u8ba1\u6a21\u5f0f Swift \u547d\u4ee4\u6a21\u5f0f \u6848\u4f8b\u4e00\uff1a\u9910\u5385\u987e\u5ba2\u70b9\u9910 \u6848\u4f8b\u4e8c\uff1a\u9065\u63a7\u5668\u63d2\u69fd\u6848\u4f8b \u7b80\u5316\u5904\u7406\uff1a\u4e00\u4e2a\u63d2\u69fd \u4e03\u4e2a\u63d2\u69fd Undo \u64a4\u9500\u64cd\u4f5c Undo - SimpleRemoteControl \u4e2d\u7b80\u5355\u53d6\u53cd\u5904\u7406 Undo - Command \u534f\u8bae\u4e2d\u5b9a\u4e49 \u5ef6\u4f38 - \u5b8f\u547d\u4ee4 \u5ef6\u4f38-\u975e\u8981\u7528 Command \u6a21\u5f0f\u5417\uff1f \u603b\u7ed3 \u547d\u4ee4\u884c\u6a21\u5f0f\u662f\u5c06\u8bf7\u6c42\uff08\u6216\u79f0\u4e3a\u65b9\u6cd5\u8c03\u7528\uff09\u5c01\u88c5\u6210\u5bf9\u8c61 \uff0c\u8ba9\u52a8\u4f5c\u7684\u8bf7\u6c42\u8005\u4e0e\u52a8\u4f5c\u6267\u884c\u8005\u89e3\u8026\uff0c\u52a8\u4f5c\u7684\u8bf7\u6c42\u8005\u65e0\u9700\u77e5\u9053\u5177\u4f53\u7684\u52a8\u4f5c\u6267\u884c\u8005\uff0c\u52a8\u4f5c\u8bf7\u6c42\u8005\u53ea\u8981\u77e5\u9053\u5982\u4f55\u53d1\u8d77\u8bf7\u6c42\u5373\u53ef\u3002 \u547d\u4ee4\u884c\u6a21\u5f0f\u6d89\u53ca\u5982\u4e0b\u5bf9\u8c61\uff1a Command \uff1a\u58f0\u660e\u6267\u884c\u64cd\u4f5c\u7684 \u63a5\u53e3 \uff1b ConcreateCommand : \u5177\u4f53\u7684 Command\uff0c\u8fd9\u91cc\u9700\u8981\u5c06\u52a8\u4f5c\u63a5\u53d7\u8005\uff08Receiver\uff09\u7ed1\u5b9a\u5230\u8be5\u5bf9\u8c61\u4e2d\uff0c\u5e76\u5b9e\u73b0 Command \u63a5\u53e3\u5b9a\u4e49\u7684 excute \u65b9\u6cd5; Receiver \uff1a\u52a8\u4f5c\u6700\u7ec8\u6267\u884c\u8005; Invoker \uff1a\u6267\u884c\u547d\u4ee4\u7684\u7684\u5bf9\u8c61\u6216\u8005\u52a8\u4f5c; Client \uff1a\u521b\u5efa\u547d\u4ee4\u5bf9\u8c61\uff08Command\uff09\u5e76\u4e14\u8bbe\u5b9a\u547d\u4ee4\u5bf9\u8c61\u7684\u63a5\u6536\u8005\uff08Receiver\uff09\uff0c\u5e76\u5c06 Invoker \u4e0e\u547d\u4ee4\u5173\u8054\u8d77\u6765\u3002 PS: \u6709\u4e9b\u6559\u7a0b\u4e0d\u4f1a\u63d0\u5230 Client \u5bf9\u8c61\uff0c\u4f46\u5e76\u4e0d\u59a8\u788d\u6211\u4eec\u7406\u89e3\u547d\u4ee4\u6a21\u5f0f\u3002 \u6848\u4f8b\u4e00\uff1a\u9910\u5385\u987e\u5ba2\u70b9\u9910 \u8fd9\u4e2a\u6848\u4f8b\u6765\u81ea\u4e8e \u300aHead First \u8bbe\u8ba1\u6a21\u5f0f\u300b \u7b2c\u516d\u7ae0\uff0c\u4e3b\u8981\u76ee\u7684\u5e2e\u52a9\u7406\u89e3\u4e66\u4e2d\u5404\u79cd\u5bf9\u8c61\u3002 \u987e\u5ba2\u51c6\u5907\u5728\u9910\u9986\u7528\u9910\uff0c\u987e\u5ba2\u70b9\u597d\u83dc( CreateOrder )\u540e\u4ea4\u7ed9\u670d\u52a1\u5458\uff0c\u670d\u52a1\u5458\u4ea4\u7ed9\uff08takeCommand\uff09\u53a8\u623f\uff0c\u5e76\u901a\u77e5\uff08orderUp\uff09\uff0c\u53a8\u623f\u7684\u53a8\u5e08\uff08Cook\uff09\u6309\u7167\u5ba2\u6237\u4e0b\u7684\u8ba2\u5355\u8fdb\u884c\u70f9\u996a\u3002 class Cook { func makeCake() { debugPrint( \"make cake\" ) } func makeTurkey() { debugPrint( \"make turkey\" ) } } protocol Command { func excute() } class CakeCommand: Command { let cook: Cook init(cook: Cook) { self.cook = cook } func excute() { cook.makeCake() } } class TurkeyCommand: Command { let cook: Cook init(cook: Cook) { self.cook = cook } func excute() { cook.makeTurkey() } } /// client class Customer { func createOrder() { /// Invoker let waitress = Waitress() // Receiver let cook = Cook() /// Command: CakeCommand /// Receiver Cook let cakeCommand = CakeCommand(cook: cook) /// Command: TurkeyCommand /// Receiver: cook let turkeyCommand = TurkeyCommand(cook: cook) /// setCommand waitress.takeCommand(command: cakeCommand) waitress.takeCommand(command: turkeyCommand) /// trigger waitress.orderUp() } } class Waitress { var commands: [Command] = [] func takeCommand(command: Command) { self.commands.append(command) } func orderUp() { self.commands.forEach( { $0.excute() } ) } } \u5728\u4e0a\u9762\u4f8b\u5b50\u4e2d\uff0c Customer \u521b\u5efa\u4e86\u547d\u4ee4\uff08 CakeCommand \u3001 TurkeyCommand \uff09\uff0c\u5e76\u5c06\u547d\u4ee4\u6700\u7ec8\u7684\u6267\u884c\u8005\uff08 Cook \uff09\u7ed1\u5b9a\u5230\u547d\u4ee4\u4e2d\uff0c\u518d\u901a\u8fc7\u8c03\u7528 takeCommand \u5c06\u547d\u4ee4\u7ed1\u5b9a\u5230 Invoker(Waitress) \u4e2d\u3002\u5f53 Invoker(Waitress) \u89e6\u53d1 orderUp \u540e\uff0c\u8ba9 commands \u4f9d\u6b21\u6267\u884c excute \u65b9\u6cd5\uff0c\u6700\u7ec8\u4f7f\u5f97 \u547d\u4ee4\u6700\u7ec8\u7684\u6267\u884c\u8005\uff08 Cook \uff09\u53bb\u6267\u884c\u54cd\u5e94\u7684\u52a8\u4f5c\uff08 cook.makeCake() \u548c cook.makeTurkey() \uff09\u3002 \u901a\u8fc7\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u4f60\u5e94\u8be5\u5927\u6982\u4e86\u89e3\u547d\u4ee4\u6a21\u5f0f\u7684\u5927\u4f53\u6d41\u7a0b\uff1a \u5c06\u65b9\u6cd5\u5c01\u88c5\u6210\u5bf9\u8c61\uff0c\u89e3\u8026\u547d\u4ee4\u6700\u7ec8\u6267\u884c\u8005\u4e0e\u547d\u4ee4\u8bf7\u6c42\u8005 \u3002\u4f46\u4e0a\u9762\u7684\u4f8b\u5b50\u53ef\u80fd\u4f1a\u7ed9\u4f60\u9020\u6210\u4e00\u5b9a\u7684\u56f0\u60d1\uff0c\u56e0\u4e3a\u4e0a\u9762\u7684\u6700\u7ec8\u6267\u884c\u8005\uff08Cook\uff09\u662f\u660e\u786e\u7684\uff0c\u770b\u8d77\u6765\u597d\u50cf\u662f\u4e3a\u4e86\u4f7f\u7528\u8bbe\u8ba1\u6a21\u5f0f\u800c\u4f7f\u7528\u8bbe\u8ba1\u6a21\u5f0f\u3002\u63a5\u4e0b\u91cc\u8bf7\u770b\u6848\u4f8b\u4e8c \u6848\u4f8b\u4e8c\uff1a\u9065\u63a7\u5668\u63d2\u69fd\u6848\u4f8b \u8fd9\u4e2a\u6848\u4f8b\u6765\u81ea\u4e8e \u300aHead First \u8bbe\u8ba1\u6a21\u5f0f\u300b\u7b2c\u516d\u7ae0\u547d\u4ee4\u6a21\u5f0f \u9700\u6c42: \u73b0\u5728\u6709\u4e2a\u9065\u63a7\u5668\u6709 7 \u4e2a\u63d2\u69fd\uff0c\u6bcf\u4e2a\u63d2\u69fd\u4e0a\u53ef\u4ee5\u63a7\u5236\u6253\u5f00\uff08on\uff09 \u548c\u5173\u95ed\uff08off\uff09\u4e24\u79cd\u72b6\u6001\uff0c\u63d2\u69fd\u7684\u5e95\u90e8\u8fd8\u6709\u4e2a\uff08undo\uff09\u72b6\u6001\uff0c\u53ef\u4ee5\u4e00\u952e undo \u6240\u6709\u7684\u63d2\u69fd\u4e0a\u7684\u8bbe\u5907\u3002 \u5206\u6790\uff1a \u9065\u63a7\u5668\u4e0d\u77e5\u9053\u63d2\u69fd\u4e0a\u6700\u7ec8\u662f\u54ea\u4e2a\u6765\u6267\u884c\uff0c\u8fd9\u53ea\u4e00\u79cd\u5178\u578b\u547d\u4ee4\u8bf7\u6c42\u8005\uff08\u9065\u63a7\u5668\uff09\u4e0e\u6700\u7ec8\u6267\u884c\u8005\uff08\u63d2\u69fd\u4e0a\u7684\u8bbe\u5907\uff09\u5206\u79bb\u7684\u72b6\u6001\u3002 \u7b80\u5316\u5904\u7406\uff1a\u4e00\u4e2a\u63d2\u69fd \u8fd9\u4e00\u7bc7\uff0c\u6211\u4eec\u8ba8\u8bba\u7684\u662f\u547d\u4ee4\u6a21\u5f0f\uff0c\u8fd9\u91cc\u4e3a\u4e86\u7b80\u5316\u5904\u7406\uff0c\u5148\u5904\u7406\u4e00\u4e2a\u63d2\u69fd\u60c5\u51b5 class Light { func on() { debugPrint( \"Light on\") } func off() { debugPrint( \"Light off\") } } protocol Command { func excute() } class LightOnCommand: Command { let light: Light init(light: Light) { self.light = light } func excute() { self.light.on() } } class LightOffCommand: Command { let light: Light init(light: Light) { self.light = light } func excute() { self.light.off() } } class SimpleRemoteControl { var slot: Command? init() {} func setCommand(command: Command) { self.slot = command } func buttonWasPressed() { self.slot?.excute() } } \u8c03\u7528\u5730\u65b9\uff1a /// Receiver let light = Light() /// Command let lightOnCommand = LightOnCommand(light: light) /// Invoker let simpleRemoteControl = SimpleRemoteControl() /// \u8bb2 Invoker \u4e0e Command \u5173\u8054\u8d77\u6765 simpleRemoteControl.setCommand(command: lightOnCommand) /// Invoker\u89e6\u53d1\u4e8b\u4ef6 simpleRemoteControl.buttonWasPressed() \u5728\u4e0a\u9762\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5c01\u88c5\u4e86 LightOnCommand \u7684\u547d\u4ee4\uff0c\u7136\u540e Invoker \u5728\u89e6\u53d1\u4e8b\u4ef6\u7684\u65f6\u5019\uff0c\u53ea\u8981\u8c03\u7528\u547d\u4ee4\u7684 excute() \u65b9\u6cd5\uff0c\u800c\u4e0d\u7528\u6700\u7ec8\u5173\u5fc3\u662f\u8c01\u8fdb\u884c\u6700\u7ec8\u7684\u6267\u884c\uff08\u8fd9\u91cc\u6700\u7ec8\u662f Light.on() \uff09\uff0c\u4ece\u800c\u8fbe\u5230\u6700\u7ec8\u6267\u884c\u8005\u4e0e\u8bf7\u6c42\u8005\u5206\u79bb\u7684\u60c5\u51b5\u3002 \u4e03\u4e2a\u63d2\u69fd \u4e0a\u9762\u7684\u4e00\u4e2a\u63d2\u69fd\u7b80\u5316\u5904\u7406\u8fd8\u4e0d\u9519\uff0c\u8fd9\u91cc\u9700\u8981\u8003\u8651\u6240\u6709\u7684\u63d2\u69fd\uff0c\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u9065\u63a7\u5668\u5b58\u50a8\u4e03\u5bf9\u547d\u4ee4\uff08on \u548c off \u4e3a\u4e00\u5bf9\uff09\uff0c\u5f53\u6309\u94ae\u6309 on \u6216\u8005 off \u65f6\uff0c\u8c03\u7528\u5bf9\u5e94\u63d2\u69fd\u547d\u4ee4\u7684 excute \u5373\u53ef\uff0c\u56e0\u4e3a\u547d\u4ee4\u4e2d\u4fdd\u5b58\u7740\u6700\u7ec8\u7684\u6267\u884c\u8005\u3002 class NoCommand: Command { func excute() { } } class SimpleRemoteControl { var onCommands: [Command] = Array(repeating: NoCommand(), count: 7) var offCommands: [Command] = Array(repeating: NoCommand(), count: 7) func setCommand(slot: Int, onCommand: Command, offCommand: Command) { self.onCommands[slot] = onCommand self.offCommands[slot] = offCommand } func onButtonWasPressed(at slot: Int) { self.onCommands[slot].excute() } func offButtonWasPressed(at slot: Int) { self.offCommands[slot].excute() } } \u4e0a\u9762\u7684\u5b9e\u4f8b\u4e2d\uff0c onCommands \u4e0e offCommands \u9ed8\u8ba4\u4f7f\u7528 NoCommand \u8fdb\u884c\u521d\u59cb\u5316\uff0c\u8fd9\u662f\u4e3a\u4e86\u5728\u8c03\u7528\u7684\u65f6\u5019\u91cd\u590d\u5199\u5224\u7a7a\u4ee3\u7801\u3002 Undo \u64a4\u9500\u64cd\u4f5c \u8fdb\u884c Undo \u7684\u65f6\u5019\uff0c\u9700\u8981\u8003\u8651 Undo \u547d\u4ee4\u653e\u5728\u54ea\u91cc\uff1f Undo - SimpleRemoteControl \u4e2d\u7b80\u5355\u53d6\u53cd\u5904\u7406 \u7b2c\u4e00\u53cd\u5e94\u662f\u5c06 Undo \u653e\u5230 SimpleRemoteControl \u4e2d\uff0c\u70b9\u51fb onButtonWasPressed \u65f6\u5019\uff0c\u8bb0\u4e0b offCommand , \u70b9\u51fb offButtonWasPressed \u65f6\u5019\uff0c\u8bb0\u4e0b onCommand : class SimpleRemoteControl { var undoCommand: Command? func onButtonWasPressed(at slot: Int) { self.onCommands[slot].excute() /// On \u8bb0\u4e0b Off \u72b6\u6001 self.undoCommand = self.offCommands[slot] } func offButtonWasPressed(at slot: Int) { self.offCommands[slot].excute() /// Off \u8bb0\u4e0b On \u72b6\u6001 self.undoCommand = self.onCommands[slot] } func undoButtonWasPressed() { self.undoCommand?.excute() } } \u5206\u6790\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u8fd9\u91cc\u5b58\u5728\u4e24\u4e2a\u95ee\u9898\uff1a \u5b9e\u9645\u9879\u76ee\u4e2d\uff0c\u53ef\u80fd\u5e76\u4e0d\u662f on/off \u4e24\u79cd\u72b6\u6001\uff0c\u5982\u679c\u6709\u7b2c\u4e09\u79cd\u72b6\u6001\uff0c\u90a3\u4e48\u5c31\u65e0\u6cd5\u8bbe\u7f6e undo \u72b6\u6001\uff1b \u65e0\u6cd5\u5904\u7406\u8fde\u7eed\u7684 Undo \u64cd\u4f5c\u3002 \u9488\u5bf9\u7b2c\u4e00\u4e2a\u95ee\u9898: \u5047\u8bbe\u98ce\u6247\u98ce\u901f\u6709\u4e09\u79cd\u72b6\u6001: \u9ad8\u3001\u4e2d\u3001\u4f4e\uff0c\u90a3\u4e48\u5728\u8fdb\u884c Undo \u7684\u65f6\u5019\uff0c\u9700\u8981\u8bb0\u5f55\u4e0a\u6b21\u7684\u72b6\u6001\u3002 Command \u6a21\u5f0f\u4e2d\u89e3\u8026\u4e86 Invoker \uff08SimpleRemoteControl\uff09 \u4ee5\u53ca\u6700\u7ec8\u6267\u884c\u8005\uff08CeilingFan\uff09\uff0c\u56e0\u6b64\u65e0\u6cd5\u5728 SimpleRemoteControl \u4e2d\u83b7\u53d6 CeilingFan \u72b6\u6001\u3002 \u7b2c\u4e8c\u4e2a\u95ee\u9898\u66f4\u52a0\u660e\u663e\uff0con \u7684\u65f6\u5019\uff0cundoCommand \u4e3a off, \u5f53\u591a\u6b21\u6267\u884c\u7684\u65f6\u5019\uff0c\u8fd8\u662f\u6267\u884c offCommand, \u8fd9\u663e\u7136\u4e0d\u5408\u9002\u3002 Undo - Command \u534f\u8bae\u4e2d\u5b9a\u4e49 \u4e3a\u4e86\u5904\u7406\u4e0a\u9762\u7b2c\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u5c06 Undo \u64cd\u4f5c\u8bbe\u7f6e\u5728 Command \u4e2d\uff08\u56e0\u4e3a\u53ea\u6709 Command \u80fd\u83b7\u53d6\u5230 Receiver \u72b6\u6001\uff09\u3002\u62ff\u4e0a\u9762\u98ce\u6247\u7684\u4f8b\u5b50\u6765\u8bf4\uff0c\u53ef\u4ee5\u5982\u4e0b\u8bbe\u7f6e class CeilingFan { enum Speed { case off case high case medium case low } var speed: Speed = .off } class CeilingFanHighCommand: Command { let ceilingFan: CeilingFan var previewSpeed: CeilingFan.Speed = .off init(ceilingFan: CeilingFan) { self.ceilingFan = ceilingFan } func excute() { self.previewSpeed = self.ceilingFan.speed self.ceilingFan.speed = .high debugPrint( \"CeilingFanHighCommand, preview speed is \\(self.previewSpeed)\" ) } func undo() { let speed = self.ceilingFan.speed self.ceilingFan.speed = previewSpeed self.previewSpeed = speed debugPrint( \"CeilingFanHighCommand, undo to \\(self.previewSpeed)\" ) } } class CeilingFanMediumCommand: Command { } class CeilingFanOffCommand: Command { } class CeilingFanLowCommand: Command { } \u5728 Ceiling \u7684\u547d\u4ee4\u4e2d\uff0c\u6bcf\u6b21\u6267\u884c excute \u524d\u4f1a\u8bb0\u5f55 CeilingFan \u4e0a\u6b21\u7684\u72b6\u6001\uff0c\u5728\u6267\u884c undo \u7684\u65f6\u5019\uff0c\u5c06\u72b6\u6001\u7f6e\u56de\u53bb\u3002 \u8c03\u7528 let ceilingFan = CeilingFan() let high = CeilingFanHighCommand(ceilingFan: ceilingFan) let medium = CeilingFanMediumCommand(ceilingFan: ceilingFan) let low = CeilingFanLowCommand(ceilingFan: ceilingFan) let off = CeilingFanOffCommand(ceilingFan: ceilingFan) let simpleRemoteControl = SimpleRemoteControl() simpleRemoteControl.setCommand(slot: 0, onCommand: high, offCommand: off) simpleRemoteControl.setCommand(slot: 1, onCommand: medium, offCommand: off) simpleRemoteControl.setCommand(slot: 2, onCommand: low, offCommand: off) simpleRemoteControl.onButtonWasPressed(at: 0) simpleRemoteControl.undoButtonWasPressed() simpleRemoteControl.onButtonWasPressed(at: 0) simpleRemoteControl.offButtonWasPressed(at: 0) simpleRemoteControl.undoButtonWasPressed() simpleRemoteControl.undoButtonWasPressed() \u8fd9\u4e2a\u5b9e\u4f8b\u4e2d\uff0c\u89e3\u51b3\u4e86\u4e0a\u9762\u7684\u7b2c\u4e00\u4e2a undo \u72b6\u6001\u95ee\u9898\uff0c\u9488\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u95ee\u9898\uff0c\u4e5f\u89e3\u51b3\u4e86\u90e8\u5206\u3002\u73b0\u5728\u72b6\u6001\u53ef\u4ee5\u6765\u56de\u5207\u6362\u4e86 \"CeilingFanHighCommand, preview speed is off\" \"CeilingFanHighCommand, undo to high\" \"CeilingFanHighCommand, undo to off\" \"CeilingFanHighCommand, undo to high\" \"CeilingFanHighCommand, undo to off\" \"CeilingFanHighCommand, undo to high\" \"CeilingFanHighCommand, undo to off\" \"CeilingFanHighCommand, undo to high\" \u663e\u7136\u4e0a\u9762\u7684 Undo \u663e\u7136\u4e0e\u90e8\u5206\u4eba\u8bbe\u60f3\u7684\u4e0d\u4e00\u6837\uff0c\u6709\u65f6\u5019\u5e0c\u671b Undo \u4e00\u76f4 undo \u5230\u6700\u5f00\u59cb\u72b6\u6001\uff0c\u800c\u4e0d\u4ec5\u4ec5\u5728\u4e24\u4e2a\u72b6\u6001\u4e2d\u5207\u6362\uff0c\u5982\u679c\u4f60\u9700\u8981\u8fd9\u6837\uff0c\u4f60\u53ef\u80fd\u6700\u7ec8\u8bbe\u7f6e\u6808\u6765\u64cd\u4f5c\u4e86\uff0c\u8fd9\u4e0d\u662f\u672c\u7bc7\u7684\u5185\u5bb9\u4e86\u3002 \u5ef6\u4f38 - \u5b8f\u547d\u4ee4 \u5728\u547d\u4ee4\u6a21\u5f0f\u4e2d\uff0c\u5c06 Receiver \u7ed1\u5b9a\u5230\u547d\u4ee4\u4e2d\uff0c\u7136\u540e\u6267\u884c excute \u6216\u8005 undo , \u5982\u679c Command \u4e2d\u5b58\u5728\u591a\u4e2aReceiver\uff0c\u7136\u540e\u6267\u884c excute \u6216 undo \u65f6\uff0c\u904d\u5386 Receiver \u4f9d\u6b21\u6267\u884c\uff0c\u8fd9\u5c31\u662f\u5b8f\u547d\u4ee4\u3002 \u4f8b\u5982\uff1a\u4e00\u952e\u5f00\u542f\u5bb6\u5ead\u7684\u7535\u89c6\u3001\u97f3\u54cd\u3001\u70ed\u6c34\u5668\u3001\u7a7a\u8c03\u7b49\u7b49 \u5ef6\u4f38-\u975e\u8981\u7528 Command \u6a21\u5f0f\u5417\uff1f \u672c\u6587\u8bb2\u8ff0\u7684\u662f Command \u547d\u4ee4\u884c\u6a21\u5f0f\uff0c\u5df2\u7ecf\u53ef\u4ee5\u7ed3\u675f\u4e86\u3002\u4f46\u662f\u5bf9\u4e0a\u9762\u7684\u6848\u4f8b\u6765\u8bf4\uff0c\u6709\u6ca1\u6709\u6bd4\u5b83\u66f4\u597d\u7684\u65b9\u6848\u6765\u5b9e\u73b0\u5462\uff1f \u73b0\u5728\u6765\u63a2\u7d22\u4e0b\u3002 \u8bbe\u60f31\uff1a\u63d2\u69fd\u4e0a\u7684\u8bbe\u5907\u6709\u4e24\u79cd\u72b6\u6001\uff0con/off, \u662f\u5426\u53ef\u4ee5\u5b9a\u4e49\u8bbe\u7f6e\u7684\u63a5\u53e3 protocol SlotDevice { func on() func off() } class Light: SlotDevice { func on() { debugPrint( \"Light on\") } func off() { debugPrint( \"Light off\") } } \u7136\u540e\u5728\u8c03\u7528\u5730\u65b9 class SimpleRemoteControl { var slots: [SlotDevice?] = Array(repeating: nil, count: 7) func setDevice(slot: Int, device: SlotDevice) { self.slots[slot] = device } func onButtonWasPressed(at slot: Int) { self.slots[slot]?.on() } func offButtonWasPressed(at slot: Int) { self.slots[slot]?.off() } } \u770b\u8d77\u6765\u7b80\u4ecb\u5f88\u591a\uff0c\u4f46\u662f\u5bf9\u4e8e CeilingFan \u600e\u4e48\u8bbe\u7f6e\u5462? CeilingFan \u5e76\u4e0d\u662f\u5355\u7eaf\u7684 on/off \u72b6\u6001\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528 \u9002\u914d\u5668\u6a21\u5f0f \u6765\u8fdb\u884c\u9002\u914d. class CeilingFan { enum Speed { case off case high case medium case low } var speed: Speed = .off { didSet { debugPrint(\"set speed to \\(self.speed)\") } } } class CeilingFanAdapter: SlotDevice { let ceilingFan: CeilingFan let onSpeed: CeilingFan.Speed let offSpeed: CeilingFan.Speed init(ceilingFan: CeilingFan, onSpeed: CeilingFan.Speed, offSpeed: CeilingFan.Speed = .off) { self.ceilingFan = ceilingFan self.onSpeed = onSpeed self.offSpeed = offSpeed } func on() { self.ceilingFan.speed = self.onSpeed } func off() { self.ceilingFan.speed = self.offSpeed } } \u5728\u8c03\u7528\u7684\u5730\u65b9\uff1a let light = Light() let ceilingFan = CeilingFan() let high = CeilingFanAdapter(ceilingFan: ceilingFan, onSpeed: .high, offSpeed: .off) let medium = CeilingFanAdapter(ceilingFan: ceilingFan, onSpeed: .medium, offSpeed: .off) let low = CeilingFanAdapter(ceilingFan: ceilingFan, onSpeed: .low, offSpeed: .off) let simpleRemoteControl = SimpleRemoteControl() simpleRemoteControl.setDevice(slot: 0, device: light) simpleRemoteControl.setDevice(slot: 1, device: high) simpleRemoteControl.setDevice(slot: 2, device: medium) simpleRemoteControl.setDevice(slot: 3, device: low) simpleRemoteControl.onButtonWasPressed(at: 0) simpleRemoteControl.offButtonWasPressed(at: 0) simpleRemoteControl.onButtonWasPressed(at: 1) simpleRemoteControl.onButtonWasPressed(at: 2) simpleRemoteControl.onButtonWasPressed(at: 3) \u4f46\u662f\u5bf9\u4e8e Undo \u5462\uff1f protocol SlotDevice { func on() func off() func undo() } class Light: SlotDevice { // \u8bb0\u4f4f\u72b6\u6001 var ison: Bool = false func on() { debugPrint( \"Light on\") } func off() { debugPrint( \"Light off\") } func undo() { self.ison ? self.off() : self.on() } } class CeilingFan { enum Speed { case off case high case medium case low } var speed: Speed = .off { didSet { debugPrint(\"set speed to \\(self.speed)\") } } } class CeilingFanAdapter: SlotDevice { let ceilingFan: CeilingFan let onSpeed: CeilingFan.Speed let offSpeed: CeilingFan.Speed // \u8bb0\u4f4f\u72b6\u6001 var previewSpeed: CeilingFan.Speed = .off init(ceilingFan: CeilingFan, onSpeed: CeilingFan.Speed, offSpeed: CeilingFan.Speed = .off) { self.ceilingFan = ceilingFan self.onSpeed = onSpeed self.offSpeed = offSpeed } func on() { self.ceilingFan.speed = self.onSpeed self.previewSpeed = self.ceilingFan.speed } func off() { self.ceilingFan.speed = self.offSpeed self.previewSpeed = self.ceilingFan.speed } func undo() { let speed = self.ceilingFan.speed self.ceilingFan.speed = self.previewSpeed self.previewSpeed = speed } } class SimpleRemoteControl { var slots: [SlotDevice?] = Array(repeating: nil, count: 7) func setDevice(slot: Int, device: SlotDevice) { self.slots[slot] = device } func onButtonWasPressed(at slot: Int) { self.slots[slot]?.on() } func offButtonWasPressed(at slot: Int) { self.slots[slot]?.off() } func undoButtonWasPressed() { for slot in self.self.slots { slot?.undo() } } } \u4f3c\u4e4e\u4e5f\u80fd\u8fbe\u5230\u4e0a\u9762\u7684\u6548\u679c, \u5b8c\u4e86\uff1f \u584c\u623f\u4e86\uff1f \u603b\u7ed3 \u901a\u8fc7\u4e0a\u9762\u7684\u5b9e\u4f8b\uff0c\u4f60\u53ef\u4ee5\u4e86\u89e3\u5230 Command \u6a21\u5f0f\u7684\u4f18\u7f3a\u70b9\uff0c\u4f18\u70b9\u5f88\u660e\u663e\uff1a \u89e3\u8026\u4e86\u547d\u4ee4\u8bf7\u6c42\u8005\u4e0e\u6267\u884c\u8005\u3002 \u4f46\u662f\u7f3a\u70b9\u4e5f\u5f88\u660e\u663e\uff1a \u6bcf\u4e2a\u52a8\u4f5c\u90fd\u9700\u8981\u5f62\u6210\u4e00\u4e2a\u7c7b\uff0c\u7c7b\u578b\u6700\u540e\u7206\u70b8\u3002 \u8fd9\u4e2a\u7f3a\u70b9\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u4f1a\u9650\u5236\u5728\u5b9e\u9645\u9879\u76ee\u4e2d\u7684\u4f7f\u7528\u3002\u5f97\u76ca\u4e8e\u73b0\u4ee3\u8bed\u8a00\u7684\u9ad8\u7ea7\u7279\u6027\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u5176\u4ed6\u7684\u65b9\u5f0f\u6765\u8fdb\u884c\u5b9e\u73b0\u7c7b\u4f3c\u7684\u529f\u80fd\u3002 \u5c3d\u7ba1\u5982\u6b64\uff0c\u8fd9\u4e5f\u4e0d\u59a8\u788d\u6211\u4eec\u5b66\u4e60\u547d\u4ee4\u884c\u6a21\u5f0f--Over","title":"\u884c\u4e3a\u578b-\u547d\u4ee4\u6a21\u5f0f"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/#_1","text":"\u6807\u7b7e\uff08\u7a7a\u683c\u5206\u9694\uff09\uff1a \u8bbe\u8ba1\u6a21\u5f0f Swift \u547d\u4ee4\u6a21\u5f0f \u6848\u4f8b\u4e00\uff1a\u9910\u5385\u987e\u5ba2\u70b9\u9910 \u6848\u4f8b\u4e8c\uff1a\u9065\u63a7\u5668\u63d2\u69fd\u6848\u4f8b \u7b80\u5316\u5904\u7406\uff1a\u4e00\u4e2a\u63d2\u69fd \u4e03\u4e2a\u63d2\u69fd Undo \u64a4\u9500\u64cd\u4f5c Undo - SimpleRemoteControl \u4e2d\u7b80\u5355\u53d6\u53cd\u5904\u7406 Undo - Command \u534f\u8bae\u4e2d\u5b9a\u4e49 \u5ef6\u4f38 - \u5b8f\u547d\u4ee4 \u5ef6\u4f38-\u975e\u8981\u7528 Command \u6a21\u5f0f\u5417\uff1f \u603b\u7ed3 \u547d\u4ee4\u884c\u6a21\u5f0f\u662f\u5c06\u8bf7\u6c42\uff08\u6216\u79f0\u4e3a\u65b9\u6cd5\u8c03\u7528\uff09\u5c01\u88c5\u6210\u5bf9\u8c61 \uff0c\u8ba9\u52a8\u4f5c\u7684\u8bf7\u6c42\u8005\u4e0e\u52a8\u4f5c\u6267\u884c\u8005\u89e3\u8026\uff0c\u52a8\u4f5c\u7684\u8bf7\u6c42\u8005\u65e0\u9700\u77e5\u9053\u5177\u4f53\u7684\u52a8\u4f5c\u6267\u884c\u8005\uff0c\u52a8\u4f5c\u8bf7\u6c42\u8005\u53ea\u8981\u77e5\u9053\u5982\u4f55\u53d1\u8d77\u8bf7\u6c42\u5373\u53ef\u3002 \u547d\u4ee4\u884c\u6a21\u5f0f\u6d89\u53ca\u5982\u4e0b\u5bf9\u8c61\uff1a Command \uff1a\u58f0\u660e\u6267\u884c\u64cd\u4f5c\u7684 \u63a5\u53e3 \uff1b ConcreateCommand : \u5177\u4f53\u7684 Command\uff0c\u8fd9\u91cc\u9700\u8981\u5c06\u52a8\u4f5c\u63a5\u53d7\u8005\uff08Receiver\uff09\u7ed1\u5b9a\u5230\u8be5\u5bf9\u8c61\u4e2d\uff0c\u5e76\u5b9e\u73b0 Command \u63a5\u53e3\u5b9a\u4e49\u7684 excute \u65b9\u6cd5; Receiver \uff1a\u52a8\u4f5c\u6700\u7ec8\u6267\u884c\u8005; Invoker \uff1a\u6267\u884c\u547d\u4ee4\u7684\u7684\u5bf9\u8c61\u6216\u8005\u52a8\u4f5c; Client \uff1a\u521b\u5efa\u547d\u4ee4\u5bf9\u8c61\uff08Command\uff09\u5e76\u4e14\u8bbe\u5b9a\u547d\u4ee4\u5bf9\u8c61\u7684\u63a5\u6536\u8005\uff08Receiver\uff09\uff0c\u5e76\u5c06 Invoker \u4e0e\u547d\u4ee4\u5173\u8054\u8d77\u6765\u3002 PS: \u6709\u4e9b\u6559\u7a0b\u4e0d\u4f1a\u63d0\u5230 Client \u5bf9\u8c61\uff0c\u4f46\u5e76\u4e0d\u59a8\u788d\u6211\u4eec\u7406\u89e3\u547d\u4ee4\u6a21\u5f0f\u3002","title":"\u547d\u4ee4\u6a21\u5f0f"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/#_2","text":"\u8fd9\u4e2a\u6848\u4f8b\u6765\u81ea\u4e8e \u300aHead First \u8bbe\u8ba1\u6a21\u5f0f\u300b \u7b2c\u516d\u7ae0\uff0c\u4e3b\u8981\u76ee\u7684\u5e2e\u52a9\u7406\u89e3\u4e66\u4e2d\u5404\u79cd\u5bf9\u8c61\u3002 \u987e\u5ba2\u51c6\u5907\u5728\u9910\u9986\u7528\u9910\uff0c\u987e\u5ba2\u70b9\u597d\u83dc( CreateOrder )\u540e\u4ea4\u7ed9\u670d\u52a1\u5458\uff0c\u670d\u52a1\u5458\u4ea4\u7ed9\uff08takeCommand\uff09\u53a8\u623f\uff0c\u5e76\u901a\u77e5\uff08orderUp\uff09\uff0c\u53a8\u623f\u7684\u53a8\u5e08\uff08Cook\uff09\u6309\u7167\u5ba2\u6237\u4e0b\u7684\u8ba2\u5355\u8fdb\u884c\u70f9\u996a\u3002 class Cook { func makeCake() { debugPrint( \"make cake\" ) } func makeTurkey() { debugPrint( \"make turkey\" ) } } protocol Command { func excute() } class CakeCommand: Command { let cook: Cook init(cook: Cook) { self.cook = cook } func excute() { cook.makeCake() } } class TurkeyCommand: Command { let cook: Cook init(cook: Cook) { self.cook = cook } func excute() { cook.makeTurkey() } } /// client class Customer { func createOrder() { /// Invoker let waitress = Waitress() // Receiver let cook = Cook() /// Command: CakeCommand /// Receiver Cook let cakeCommand = CakeCommand(cook: cook) /// Command: TurkeyCommand /// Receiver: cook let turkeyCommand = TurkeyCommand(cook: cook) /// setCommand waitress.takeCommand(command: cakeCommand) waitress.takeCommand(command: turkeyCommand) /// trigger waitress.orderUp() } } class Waitress { var commands: [Command] = [] func takeCommand(command: Command) { self.commands.append(command) } func orderUp() { self.commands.forEach( { $0.excute() } ) } } \u5728\u4e0a\u9762\u4f8b\u5b50\u4e2d\uff0c Customer \u521b\u5efa\u4e86\u547d\u4ee4\uff08 CakeCommand \u3001 TurkeyCommand \uff09\uff0c\u5e76\u5c06\u547d\u4ee4\u6700\u7ec8\u7684\u6267\u884c\u8005\uff08 Cook \uff09\u7ed1\u5b9a\u5230\u547d\u4ee4\u4e2d\uff0c\u518d\u901a\u8fc7\u8c03\u7528 takeCommand \u5c06\u547d\u4ee4\u7ed1\u5b9a\u5230 Invoker(Waitress) \u4e2d\u3002\u5f53 Invoker(Waitress) \u89e6\u53d1 orderUp \u540e\uff0c\u8ba9 commands \u4f9d\u6b21\u6267\u884c excute \u65b9\u6cd5\uff0c\u6700\u7ec8\u4f7f\u5f97 \u547d\u4ee4\u6700\u7ec8\u7684\u6267\u884c\u8005\uff08 Cook \uff09\u53bb\u6267\u884c\u54cd\u5e94\u7684\u52a8\u4f5c\uff08 cook.makeCake() \u548c cook.makeTurkey() \uff09\u3002 \u901a\u8fc7\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u4f60\u5e94\u8be5\u5927\u6982\u4e86\u89e3\u547d\u4ee4\u6a21\u5f0f\u7684\u5927\u4f53\u6d41\u7a0b\uff1a \u5c06\u65b9\u6cd5\u5c01\u88c5\u6210\u5bf9\u8c61\uff0c\u89e3\u8026\u547d\u4ee4\u6700\u7ec8\u6267\u884c\u8005\u4e0e\u547d\u4ee4\u8bf7\u6c42\u8005 \u3002\u4f46\u4e0a\u9762\u7684\u4f8b\u5b50\u53ef\u80fd\u4f1a\u7ed9\u4f60\u9020\u6210\u4e00\u5b9a\u7684\u56f0\u60d1\uff0c\u56e0\u4e3a\u4e0a\u9762\u7684\u6700\u7ec8\u6267\u884c\u8005\uff08Cook\uff09\u662f\u660e\u786e\u7684\uff0c\u770b\u8d77\u6765\u597d\u50cf\u662f\u4e3a\u4e86\u4f7f\u7528\u8bbe\u8ba1\u6a21\u5f0f\u800c\u4f7f\u7528\u8bbe\u8ba1\u6a21\u5f0f\u3002\u63a5\u4e0b\u91cc\u8bf7\u770b\u6848\u4f8b\u4e8c","title":"\u6848\u4f8b\u4e00\uff1a\u9910\u5385\u987e\u5ba2\u70b9\u9910"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/#_3","text":"\u8fd9\u4e2a\u6848\u4f8b\u6765\u81ea\u4e8e \u300aHead First \u8bbe\u8ba1\u6a21\u5f0f\u300b\u7b2c\u516d\u7ae0\u547d\u4ee4\u6a21\u5f0f \u9700\u6c42: \u73b0\u5728\u6709\u4e2a\u9065\u63a7\u5668\u6709 7 \u4e2a\u63d2\u69fd\uff0c\u6bcf\u4e2a\u63d2\u69fd\u4e0a\u53ef\u4ee5\u63a7\u5236\u6253\u5f00\uff08on\uff09 \u548c\u5173\u95ed\uff08off\uff09\u4e24\u79cd\u72b6\u6001\uff0c\u63d2\u69fd\u7684\u5e95\u90e8\u8fd8\u6709\u4e2a\uff08undo\uff09\u72b6\u6001\uff0c\u53ef\u4ee5\u4e00\u952e undo \u6240\u6709\u7684\u63d2\u69fd\u4e0a\u7684\u8bbe\u5907\u3002 \u5206\u6790\uff1a \u9065\u63a7\u5668\u4e0d\u77e5\u9053\u63d2\u69fd\u4e0a\u6700\u7ec8\u662f\u54ea\u4e2a\u6765\u6267\u884c\uff0c\u8fd9\u53ea\u4e00\u79cd\u5178\u578b\u547d\u4ee4\u8bf7\u6c42\u8005\uff08\u9065\u63a7\u5668\uff09\u4e0e\u6700\u7ec8\u6267\u884c\u8005\uff08\u63d2\u69fd\u4e0a\u7684\u8bbe\u5907\uff09\u5206\u79bb\u7684\u72b6\u6001\u3002","title":"\u6848\u4f8b\u4e8c\uff1a\u9065\u63a7\u5668\u63d2\u69fd\u6848\u4f8b"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/#_4","text":"\u8fd9\u4e00\u7bc7\uff0c\u6211\u4eec\u8ba8\u8bba\u7684\u662f\u547d\u4ee4\u6a21\u5f0f\uff0c\u8fd9\u91cc\u4e3a\u4e86\u7b80\u5316\u5904\u7406\uff0c\u5148\u5904\u7406\u4e00\u4e2a\u63d2\u69fd\u60c5\u51b5 class Light { func on() { debugPrint( \"Light on\") } func off() { debugPrint( \"Light off\") } } protocol Command { func excute() } class LightOnCommand: Command { let light: Light init(light: Light) { self.light = light } func excute() { self.light.on() } } class LightOffCommand: Command { let light: Light init(light: Light) { self.light = light } func excute() { self.light.off() } } class SimpleRemoteControl { var slot: Command? init() {} func setCommand(command: Command) { self.slot = command } func buttonWasPressed() { self.slot?.excute() } } \u8c03\u7528\u5730\u65b9\uff1a /// Receiver let light = Light() /// Command let lightOnCommand = LightOnCommand(light: light) /// Invoker let simpleRemoteControl = SimpleRemoteControl() /// \u8bb2 Invoker \u4e0e Command \u5173\u8054\u8d77\u6765 simpleRemoteControl.setCommand(command: lightOnCommand) /// Invoker\u89e6\u53d1\u4e8b\u4ef6 simpleRemoteControl.buttonWasPressed() \u5728\u4e0a\u9762\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5c01\u88c5\u4e86 LightOnCommand \u7684\u547d\u4ee4\uff0c\u7136\u540e Invoker \u5728\u89e6\u53d1\u4e8b\u4ef6\u7684\u65f6\u5019\uff0c\u53ea\u8981\u8c03\u7528\u547d\u4ee4\u7684 excute() \u65b9\u6cd5\uff0c\u800c\u4e0d\u7528\u6700\u7ec8\u5173\u5fc3\u662f\u8c01\u8fdb\u884c\u6700\u7ec8\u7684\u6267\u884c\uff08\u8fd9\u91cc\u6700\u7ec8\u662f Light.on() \uff09\uff0c\u4ece\u800c\u8fbe\u5230\u6700\u7ec8\u6267\u884c\u8005\u4e0e\u8bf7\u6c42\u8005\u5206\u79bb\u7684\u60c5\u51b5\u3002","title":"\u7b80\u5316\u5904\u7406\uff1a\u4e00\u4e2a\u63d2\u69fd"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/#_5","text":"\u4e0a\u9762\u7684\u4e00\u4e2a\u63d2\u69fd\u7b80\u5316\u5904\u7406\u8fd8\u4e0d\u9519\uff0c\u8fd9\u91cc\u9700\u8981\u8003\u8651\u6240\u6709\u7684\u63d2\u69fd\uff0c\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u9065\u63a7\u5668\u5b58\u50a8\u4e03\u5bf9\u547d\u4ee4\uff08on \u548c off \u4e3a\u4e00\u5bf9\uff09\uff0c\u5f53\u6309\u94ae\u6309 on \u6216\u8005 off \u65f6\uff0c\u8c03\u7528\u5bf9\u5e94\u63d2\u69fd\u547d\u4ee4\u7684 excute \u5373\u53ef\uff0c\u56e0\u4e3a\u547d\u4ee4\u4e2d\u4fdd\u5b58\u7740\u6700\u7ec8\u7684\u6267\u884c\u8005\u3002 class NoCommand: Command { func excute() { } } class SimpleRemoteControl { var onCommands: [Command] = Array(repeating: NoCommand(), count: 7) var offCommands: [Command] = Array(repeating: NoCommand(), count: 7) func setCommand(slot: Int, onCommand: Command, offCommand: Command) { self.onCommands[slot] = onCommand self.offCommands[slot] = offCommand } func onButtonWasPressed(at slot: Int) { self.onCommands[slot].excute() } func offButtonWasPressed(at slot: Int) { self.offCommands[slot].excute() } } \u4e0a\u9762\u7684\u5b9e\u4f8b\u4e2d\uff0c onCommands \u4e0e offCommands \u9ed8\u8ba4\u4f7f\u7528 NoCommand \u8fdb\u884c\u521d\u59cb\u5316\uff0c\u8fd9\u662f\u4e3a\u4e86\u5728\u8c03\u7528\u7684\u65f6\u5019\u91cd\u590d\u5199\u5224\u7a7a\u4ee3\u7801\u3002","title":"\u4e03\u4e2a\u63d2\u69fd"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/#undo","text":"\u8fdb\u884c Undo \u7684\u65f6\u5019\uff0c\u9700\u8981\u8003\u8651 Undo \u547d\u4ee4\u653e\u5728\u54ea\u91cc\uff1f","title":"Undo \u64a4\u9500\u64cd\u4f5c"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/#undo-simpleremotecontrol","text":"\u7b2c\u4e00\u53cd\u5e94\u662f\u5c06 Undo \u653e\u5230 SimpleRemoteControl \u4e2d\uff0c\u70b9\u51fb onButtonWasPressed \u65f6\u5019\uff0c\u8bb0\u4e0b offCommand , \u70b9\u51fb offButtonWasPressed \u65f6\u5019\uff0c\u8bb0\u4e0b onCommand : class SimpleRemoteControl { var undoCommand: Command? func onButtonWasPressed(at slot: Int) { self.onCommands[slot].excute() /// On \u8bb0\u4e0b Off \u72b6\u6001 self.undoCommand = self.offCommands[slot] } func offButtonWasPressed(at slot: Int) { self.offCommands[slot].excute() /// Off \u8bb0\u4e0b On \u72b6\u6001 self.undoCommand = self.onCommands[slot] } func undoButtonWasPressed() { self.undoCommand?.excute() } } \u5206\u6790\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u8fd9\u91cc\u5b58\u5728\u4e24\u4e2a\u95ee\u9898\uff1a \u5b9e\u9645\u9879\u76ee\u4e2d\uff0c\u53ef\u80fd\u5e76\u4e0d\u662f on/off \u4e24\u79cd\u72b6\u6001\uff0c\u5982\u679c\u6709\u7b2c\u4e09\u79cd\u72b6\u6001\uff0c\u90a3\u4e48\u5c31\u65e0\u6cd5\u8bbe\u7f6e undo \u72b6\u6001\uff1b \u65e0\u6cd5\u5904\u7406\u8fde\u7eed\u7684 Undo \u64cd\u4f5c\u3002 \u9488\u5bf9\u7b2c\u4e00\u4e2a\u95ee\u9898: \u5047\u8bbe\u98ce\u6247\u98ce\u901f\u6709\u4e09\u79cd\u72b6\u6001: \u9ad8\u3001\u4e2d\u3001\u4f4e\uff0c\u90a3\u4e48\u5728\u8fdb\u884c Undo \u7684\u65f6\u5019\uff0c\u9700\u8981\u8bb0\u5f55\u4e0a\u6b21\u7684\u72b6\u6001\u3002 Command \u6a21\u5f0f\u4e2d\u89e3\u8026\u4e86 Invoker \uff08SimpleRemoteControl\uff09 \u4ee5\u53ca\u6700\u7ec8\u6267\u884c\u8005\uff08CeilingFan\uff09\uff0c\u56e0\u6b64\u65e0\u6cd5\u5728 SimpleRemoteControl \u4e2d\u83b7\u53d6 CeilingFan \u72b6\u6001\u3002 \u7b2c\u4e8c\u4e2a\u95ee\u9898\u66f4\u52a0\u660e\u663e\uff0con \u7684\u65f6\u5019\uff0cundoCommand \u4e3a off, \u5f53\u591a\u6b21\u6267\u884c\u7684\u65f6\u5019\uff0c\u8fd8\u662f\u6267\u884c offCommand, \u8fd9\u663e\u7136\u4e0d\u5408\u9002\u3002","title":"Undo - SimpleRemoteControl \u4e2d\u7b80\u5355\u53d6\u53cd\u5904\u7406"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/#undo-command","text":"\u4e3a\u4e86\u5904\u7406\u4e0a\u9762\u7b2c\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u5c06 Undo \u64cd\u4f5c\u8bbe\u7f6e\u5728 Command \u4e2d\uff08\u56e0\u4e3a\u53ea\u6709 Command \u80fd\u83b7\u53d6\u5230 Receiver \u72b6\u6001\uff09\u3002\u62ff\u4e0a\u9762\u98ce\u6247\u7684\u4f8b\u5b50\u6765\u8bf4\uff0c\u53ef\u4ee5\u5982\u4e0b\u8bbe\u7f6e class CeilingFan { enum Speed { case off case high case medium case low } var speed: Speed = .off } class CeilingFanHighCommand: Command { let ceilingFan: CeilingFan var previewSpeed: CeilingFan.Speed = .off init(ceilingFan: CeilingFan) { self.ceilingFan = ceilingFan } func excute() { self.previewSpeed = self.ceilingFan.speed self.ceilingFan.speed = .high debugPrint( \"CeilingFanHighCommand, preview speed is \\(self.previewSpeed)\" ) } func undo() { let speed = self.ceilingFan.speed self.ceilingFan.speed = previewSpeed self.previewSpeed = speed debugPrint( \"CeilingFanHighCommand, undo to \\(self.previewSpeed)\" ) } } class CeilingFanMediumCommand: Command { } class CeilingFanOffCommand: Command { } class CeilingFanLowCommand: Command { } \u5728 Ceiling \u7684\u547d\u4ee4\u4e2d\uff0c\u6bcf\u6b21\u6267\u884c excute \u524d\u4f1a\u8bb0\u5f55 CeilingFan \u4e0a\u6b21\u7684\u72b6\u6001\uff0c\u5728\u6267\u884c undo \u7684\u65f6\u5019\uff0c\u5c06\u72b6\u6001\u7f6e\u56de\u53bb\u3002 \u8c03\u7528 let ceilingFan = CeilingFan() let high = CeilingFanHighCommand(ceilingFan: ceilingFan) let medium = CeilingFanMediumCommand(ceilingFan: ceilingFan) let low = CeilingFanLowCommand(ceilingFan: ceilingFan) let off = CeilingFanOffCommand(ceilingFan: ceilingFan) let simpleRemoteControl = SimpleRemoteControl() simpleRemoteControl.setCommand(slot: 0, onCommand: high, offCommand: off) simpleRemoteControl.setCommand(slot: 1, onCommand: medium, offCommand: off) simpleRemoteControl.setCommand(slot: 2, onCommand: low, offCommand: off) simpleRemoteControl.onButtonWasPressed(at: 0) simpleRemoteControl.undoButtonWasPressed() simpleRemoteControl.onButtonWasPressed(at: 0) simpleRemoteControl.offButtonWasPressed(at: 0) simpleRemoteControl.undoButtonWasPressed() simpleRemoteControl.undoButtonWasPressed() \u8fd9\u4e2a\u5b9e\u4f8b\u4e2d\uff0c\u89e3\u51b3\u4e86\u4e0a\u9762\u7684\u7b2c\u4e00\u4e2a undo \u72b6\u6001\u95ee\u9898\uff0c\u9488\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u95ee\u9898\uff0c\u4e5f\u89e3\u51b3\u4e86\u90e8\u5206\u3002\u73b0\u5728\u72b6\u6001\u53ef\u4ee5\u6765\u56de\u5207\u6362\u4e86 \"CeilingFanHighCommand, preview speed is off\" \"CeilingFanHighCommand, undo to high\" \"CeilingFanHighCommand, undo to off\" \"CeilingFanHighCommand, undo to high\" \"CeilingFanHighCommand, undo to off\" \"CeilingFanHighCommand, undo to high\" \"CeilingFanHighCommand, undo to off\" \"CeilingFanHighCommand, undo to high\" \u663e\u7136\u4e0a\u9762\u7684 Undo \u663e\u7136\u4e0e\u90e8\u5206\u4eba\u8bbe\u60f3\u7684\u4e0d\u4e00\u6837\uff0c\u6709\u65f6\u5019\u5e0c\u671b Undo \u4e00\u76f4 undo \u5230\u6700\u5f00\u59cb\u72b6\u6001\uff0c\u800c\u4e0d\u4ec5\u4ec5\u5728\u4e24\u4e2a\u72b6\u6001\u4e2d\u5207\u6362\uff0c\u5982\u679c\u4f60\u9700\u8981\u8fd9\u6837\uff0c\u4f60\u53ef\u80fd\u6700\u7ec8\u8bbe\u7f6e\u6808\u6765\u64cd\u4f5c\u4e86\uff0c\u8fd9\u4e0d\u662f\u672c\u7bc7\u7684\u5185\u5bb9\u4e86\u3002","title":"Undo - Command \u534f\u8bae\u4e2d\u5b9a\u4e49"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/#-","text":"\u5728\u547d\u4ee4\u6a21\u5f0f\u4e2d\uff0c\u5c06 Receiver \u7ed1\u5b9a\u5230\u547d\u4ee4\u4e2d\uff0c\u7136\u540e\u6267\u884c excute \u6216\u8005 undo , \u5982\u679c Command \u4e2d\u5b58\u5728\u591a\u4e2aReceiver\uff0c\u7136\u540e\u6267\u884c excute \u6216 undo \u65f6\uff0c\u904d\u5386 Receiver \u4f9d\u6b21\u6267\u884c\uff0c\u8fd9\u5c31\u662f\u5b8f\u547d\u4ee4\u3002 \u4f8b\u5982\uff1a\u4e00\u952e\u5f00\u542f\u5bb6\u5ead\u7684\u7535\u89c6\u3001\u97f3\u54cd\u3001\u70ed\u6c34\u5668\u3001\u7a7a\u8c03\u7b49\u7b49","title":"\u5ef6\u4f38 - \u5b8f\u547d\u4ee4"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/#-command","text":"\u672c\u6587\u8bb2\u8ff0\u7684\u662f Command \u547d\u4ee4\u884c\u6a21\u5f0f\uff0c\u5df2\u7ecf\u53ef\u4ee5\u7ed3\u675f\u4e86\u3002\u4f46\u662f\u5bf9\u4e0a\u9762\u7684\u6848\u4f8b\u6765\u8bf4\uff0c\u6709\u6ca1\u6709\u6bd4\u5b83\u66f4\u597d\u7684\u65b9\u6848\u6765\u5b9e\u73b0\u5462\uff1f \u73b0\u5728\u6765\u63a2\u7d22\u4e0b\u3002 \u8bbe\u60f31\uff1a\u63d2\u69fd\u4e0a\u7684\u8bbe\u5907\u6709\u4e24\u79cd\u72b6\u6001\uff0con/off, \u662f\u5426\u53ef\u4ee5\u5b9a\u4e49\u8bbe\u7f6e\u7684\u63a5\u53e3 protocol SlotDevice { func on() func off() } class Light: SlotDevice { func on() { debugPrint( \"Light on\") } func off() { debugPrint( \"Light off\") } } \u7136\u540e\u5728\u8c03\u7528\u5730\u65b9 class SimpleRemoteControl { var slots: [SlotDevice?] = Array(repeating: nil, count: 7) func setDevice(slot: Int, device: SlotDevice) { self.slots[slot] = device } func onButtonWasPressed(at slot: Int) { self.slots[slot]?.on() } func offButtonWasPressed(at slot: Int) { self.slots[slot]?.off() } } \u770b\u8d77\u6765\u7b80\u4ecb\u5f88\u591a\uff0c\u4f46\u662f\u5bf9\u4e8e CeilingFan \u600e\u4e48\u8bbe\u7f6e\u5462? CeilingFan \u5e76\u4e0d\u662f\u5355\u7eaf\u7684 on/off \u72b6\u6001\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528 \u9002\u914d\u5668\u6a21\u5f0f \u6765\u8fdb\u884c\u9002\u914d. class CeilingFan { enum Speed { case off case high case medium case low } var speed: Speed = .off { didSet { debugPrint(\"set speed to \\(self.speed)\") } } } class CeilingFanAdapter: SlotDevice { let ceilingFan: CeilingFan let onSpeed: CeilingFan.Speed let offSpeed: CeilingFan.Speed init(ceilingFan: CeilingFan, onSpeed: CeilingFan.Speed, offSpeed: CeilingFan.Speed = .off) { self.ceilingFan = ceilingFan self.onSpeed = onSpeed self.offSpeed = offSpeed } func on() { self.ceilingFan.speed = self.onSpeed } func off() { self.ceilingFan.speed = self.offSpeed } } \u5728\u8c03\u7528\u7684\u5730\u65b9\uff1a let light = Light() let ceilingFan = CeilingFan() let high = CeilingFanAdapter(ceilingFan: ceilingFan, onSpeed: .high, offSpeed: .off) let medium = CeilingFanAdapter(ceilingFan: ceilingFan, onSpeed: .medium, offSpeed: .off) let low = CeilingFanAdapter(ceilingFan: ceilingFan, onSpeed: .low, offSpeed: .off) let simpleRemoteControl = SimpleRemoteControl() simpleRemoteControl.setDevice(slot: 0, device: light) simpleRemoteControl.setDevice(slot: 1, device: high) simpleRemoteControl.setDevice(slot: 2, device: medium) simpleRemoteControl.setDevice(slot: 3, device: low) simpleRemoteControl.onButtonWasPressed(at: 0) simpleRemoteControl.offButtonWasPressed(at: 0) simpleRemoteControl.onButtonWasPressed(at: 1) simpleRemoteControl.onButtonWasPressed(at: 2) simpleRemoteControl.onButtonWasPressed(at: 3) \u4f46\u662f\u5bf9\u4e8e Undo \u5462\uff1f protocol SlotDevice { func on() func off() func undo() } class Light: SlotDevice { // \u8bb0\u4f4f\u72b6\u6001 var ison: Bool = false func on() { debugPrint( \"Light on\") } func off() { debugPrint( \"Light off\") } func undo() { self.ison ? self.off() : self.on() } } class CeilingFan { enum Speed { case off case high case medium case low } var speed: Speed = .off { didSet { debugPrint(\"set speed to \\(self.speed)\") } } } class CeilingFanAdapter: SlotDevice { let ceilingFan: CeilingFan let onSpeed: CeilingFan.Speed let offSpeed: CeilingFan.Speed // \u8bb0\u4f4f\u72b6\u6001 var previewSpeed: CeilingFan.Speed = .off init(ceilingFan: CeilingFan, onSpeed: CeilingFan.Speed, offSpeed: CeilingFan.Speed = .off) { self.ceilingFan = ceilingFan self.onSpeed = onSpeed self.offSpeed = offSpeed } func on() { self.ceilingFan.speed = self.onSpeed self.previewSpeed = self.ceilingFan.speed } func off() { self.ceilingFan.speed = self.offSpeed self.previewSpeed = self.ceilingFan.speed } func undo() { let speed = self.ceilingFan.speed self.ceilingFan.speed = self.previewSpeed self.previewSpeed = speed } } class SimpleRemoteControl { var slots: [SlotDevice?] = Array(repeating: nil, count: 7) func setDevice(slot: Int, device: SlotDevice) { self.slots[slot] = device } func onButtonWasPressed(at slot: Int) { self.slots[slot]?.on() } func offButtonWasPressed(at slot: Int) { self.slots[slot]?.off() } func undoButtonWasPressed() { for slot in self.self.slots { slot?.undo() } } } \u4f3c\u4e4e\u4e5f\u80fd\u8fbe\u5230\u4e0a\u9762\u7684\u6548\u679c, \u5b8c\u4e86\uff1f \u584c\u623f\u4e86\uff1f","title":"\u5ef6\u4f38-\u975e\u8981\u7528 Command \u6a21\u5f0f\u5417\uff1f"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/#_6","text":"\u901a\u8fc7\u4e0a\u9762\u7684\u5b9e\u4f8b\uff0c\u4f60\u53ef\u4ee5\u4e86\u89e3\u5230 Command \u6a21\u5f0f\u7684\u4f18\u7f3a\u70b9\uff0c\u4f18\u70b9\u5f88\u660e\u663e\uff1a \u89e3\u8026\u4e86\u547d\u4ee4\u8bf7\u6c42\u8005\u4e0e\u6267\u884c\u8005\u3002 \u4f46\u662f\u7f3a\u70b9\u4e5f\u5f88\u660e\u663e\uff1a \u6bcf\u4e2a\u52a8\u4f5c\u90fd\u9700\u8981\u5f62\u6210\u4e00\u4e2a\u7c7b\uff0c\u7c7b\u578b\u6700\u540e\u7206\u70b8\u3002 \u8fd9\u4e2a\u7f3a\u70b9\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u4f1a\u9650\u5236\u5728\u5b9e\u9645\u9879\u76ee\u4e2d\u7684\u4f7f\u7528\u3002\u5f97\u76ca\u4e8e\u73b0\u4ee3\u8bed\u8a00\u7684\u9ad8\u7ea7\u7279\u6027\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u5176\u4ed6\u7684\u65b9\u5f0f\u6765\u8fdb\u884c\u5b9e\u73b0\u7c7b\u4f3c\u7684\u529f\u80fd\u3002 \u5c3d\u7ba1\u5982\u6b64\uff0c\u8fd9\u4e5f\u4e0d\u59a8\u788d\u6211\u4eec\u5b66\u4e60\u547d\u4ee4\u884c\u6a21\u5f0f--Over","title":"\u603b\u7ed3"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/","text":"\u7b56\u7565\u6a21\u5f0f \u6807\u7b7e\uff08\u7a7a\u683c\u5206\u9694\uff09\uff1a \u8bbe\u8ba1\u6a21\u5f0f Swift \u7b56\u7565\u6a21\u5f0f \u9700\u6c42\u4e00\uff1a\u8bbe\u8ba1\u9e2d\u5b50\u6a21\u578b \u5ef6\u4f38\u601d\u8003\uff1a\u9e2d\u5b50\u7c7b\u578b\u80fd\u5426\u4f7f\u7528\u63a5\u53e3\u6216\u8005\u534f\u8bae\u6765\u8868\u793a? \u9700\u6c42\u4e8c\uff1a\u8ba9\u9e2d\u5b50\u80fd\u98de\u5427 \u5ef6\u4f38\u601d\u80031\uff1a\u80fd\u5426\u5c06 Fly \u548c Quack \u53d8\u5316\u90e8\u5206\u63a5\u53e3\u7f16\u7a0b \u5ef6\u4f38\u601d\u80032\uff1a\u7ee7\u627f VS \u7ec4\u5408 \u6574\u5408\u9e2d\u5b50\u884c\u4e3a \u7b56\u7565\u6a21\u5f0f \u9762\u5411\u5bf9\u8c61\u7684\u4e09\u5927\u7279\u6027\uff1a\u5c01\u88c5\u3001\u7ee7\u627f\u548c\u591a\u6001\uff0c\u8fd9\u4e09\u5927\u7279\u6027\u5176\u5b9e\u4e3a\u4e86\u65b9\u4fbf\u4ee3\u7801\u7684 \u590d\u7528 \u4e0e \u7ba1\u7406 \u3002 \u9700\u6c42\u4e00\uff1a\u8bbe\u8ba1\u9e2d\u5b50\u6a21\u578b \u9700\u6c42\uff1a \u8bbe\u8ba1\u4e00\u6b3e\u7b80\u5355\u7684\u9e2d\u5b50\u6e38\u620f\uff0c\u91cc\u9762\u9e2d\u5b50\u53ef\u4ee5\u8fdb\u884c\u560e\u560e\u53eb\uff08quack\uff09\u4ee5\u53ca\u6e38\u6cf3\uff08swim\uff09\uff0c\u8fd8\u9700\u8981\u4e00\u4e2a\u80fd\u5c55\u793a\u9e2d\u5b50\u5916\u89c2\uff08display\uff09\u7684\u65b9\u6cd5\u3002 \u4e3a\u4e86\u4ee3\u7801\u7684\u590d\u7528\uff08quack \u4ee5\u53ca swim\uff09\uff0c\u8bbe\u8ba1\u4e00\u4e2a\u8d85\u7c7b Duck\uff0c\u5b50\u7c7b\u7ee7\u627f\u4e8e Duck\uff0c\u4f46\u662f\u5b50\u7c7b\u5404\u81ea\u5b9e\u73b0\u4e0d\u540c\u7684\u90e8\u5206\uff08display\uff09,\u6807\u51c6\u7684 OO \u7f16\u7a0b\u3002 class Duck { func quack() { debugPrint(\"\u560e\u560e\") } func swim() { debugPrint(\"\u6e38\u6cf3\") } func display() { fatalError(\" subclass implement \") } } class MallarDuck: Duck { override func display() { debugPrint( \"Mallar Duck display\" ) } } class RedHeadDuck: Duck { override func display() { debugPrint( \"Red Head Duck display\" ) } } \u5ef6\u4f38\u601d\u8003\uff1a\u9e2d\u5b50\u7c7b\u578b\u80fd\u5426\u4f7f\u7528\u63a5\u53e3\u6216\u8005\u534f\u8bae\u6765\u8868\u793a? protocol DuckRepresentable { func quack() func swim() func display() } extension DuckRepresentable { func quack() { debugPrint(\"\u560e\u560e\") } func swim() { debugPrint(\"\u6e38\u6cf3\") } } class MallarDuck: DuckRepresentable { func display() { debugPrint( \"Mallar Duck display\" ) } } class RedHeadDuck: DuckRepresentable { func display() { debugPrint( \"Red Head Duck display\" ) } } \u5f97\u76ca\u4e8e Swift \u534f\u8bae\u6269\u5c55\u9ed8\u8ba4\u5b9e\u73b0\uff0c\u53ef\u4ee5\u590d\u7528 quack \u4ee5\u53ca swim \u4ee3\u7801\u3002\u4f46\u5728\u5176\u4ed6\u8bed\u8a00\u4e2d\uff08\u4f8b\u5982 Java\uff09\uff0c\u5c31\u9700\u8981\u4e3a\u6bcf\u4e2a\u9075\u5faa DuckRepresentable \u63a5\u53e3\u7684\u7c7b\u578b\u5b9e\u73b0 quack \u3001 swim \u4ee5\u53ca display \u65b9\u6cd5\uff0c\u4ee3\u7801\u5f97\u4e0d\u5230\u590d\u7528\u3002 \u9700\u6c42\u4e8c\uff1a\u8ba9\u9e2d\u5b50\u80fd\u98de\u5427 \u9700\u6c42\uff1a \u9879\u76ee\u8fed\u4ee3\uff0c\u9700\u8981\u7ed9\u9e2d\u5b50\u6dfb\u52a0\u98de\u884c\u7684\u80fd\u529b\u3002\u540c\u65f6\u9700\u8981\u589e\u52a0\u4e00\u79cd\u6a61\u76ae\u9e2d\uff08RubberDuck\uff09\uff0c\u8fd9\u79cd\u9e2d\u5b50\u53d1\u51fa\u5431\u5431\u53eb\u58f0\uff0c\u4f46\u662f\u4e0d\u80fd\u98de\u3002 \u9700\u6c42\u9700\u8981\u9e2d\u5b50\u4f1a\u98de\uff0c\u56e0\u6b64\u5728\u7236\u7c7b Duck \u4e2d fly() \u65b9\u6cd5\u5373\u53ef\u3002\u6a61\u76ae\u9e2d\u91cd\u5199 quack() \u4ee5\u53ca fly() class Duck { func quack() { debugPrint(\"\u560e\u560e\") } func swim() { debugPrint(\"\u6e38\u6cf3\") } func display() { fatalError(\" subclass implement \") } func fly() { debugPrint( \"\u98de\u884c\" ) } } class MallarDuck: Duck { override func display() { debugPrint( \"Mallar Duck display\" ) } } class RedHeadDuck: Duck { override func display() { debugPrint( \"Red Head Duck display\" ) } } class RubberDuck: Duck { override func quack() { debugPrint(\"\u5431\u5431\") } override func display() { debugPrint( \"Rubber Duck display\" ) } override func fly() { /* \u4e0d\u80fd\u98de\u884c */ } } Great\uff01\u5b8c\u6210\u4e86\u9700\u6c42\uff01\u4e0b\u9762\u6765\u5206\u6790\u4e0b\u8fd9\u91cc\u9762\u53ef\u80fd\u9762\u4e34\u7684\u95ee\u9898\uff1a \u6bcf\u589e\u52a0\u4e00\u79cd\u884c\u4e3a\u9700\u8981\u68c0\u67e5\u6240\u6709\u7684\u9e2d\u5b50\u662f\u5426\u7b26\u5408\u8be5\u884c\u4e3a; \u4e0e\u7236\u7c7b\u884c\u4e3a\u4e0d\u4e00\u81f4\u7684\u4ee3\u7801\u65e0\u6cd5\u8fdb\u884c\u590d\u7528; \u65e0\u6cd5\u5728\u8fd0\u884c\u65f6\u6539\u53d8\u5bf9\u5e94\u7684\u884c\u4e3a; \u91c7\u7528\u7ee7\u627f\u7684\u65b9\u5f0f\uff0c\u90fd\u9700\u8981\u5173\u6ce8\u5b50\u7c7b\u662f\u5426\u80fd\u591f\u7ee7\u627f\u7236\u7c7b\u6240\u6709\u7684\u884c\u4e3a\uff0c\u6bcf\u6dfb\u52a0\u4e00\u79cd\u884c\u4e3a\uff0c\u4e5f\u5fc5\u987b\u68c0\u67e5 \u6240\u6709 \u5b50\u7c7b\u662f\u5426\u7b26\u5408\u8fd9\u79cd\u884c\u4e3a\uff0c\u5982\u679c\u4e0d\u7b26\u5408\uff0c\u5927\u591a\u5c31\u662f\u91cd\u5199\u6539\u884c\u4e3a\uff08\u4f8b\u5982 fly \u5565\u4e5f\u4e0d\u505a\uff09\u3002\u4f46\u5728\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c \u6bcf\u4e00\u4e2a\u5b50\u7c7b\u5bf9\u8c61\u4ec5\u4ec5\u9700\u8981\u5173\u6ce8\u53ea\u80fd\u80fd\u652f\u6301\u7684\u884c\u4e3a\uff0c\u800c\u4e0d\u9700\u8981\u8003\u8651\u81ea\u5df1\u4e0d\u652f\u6301\u7684\u884c\u4e3a \u3002\u5f53\u7136\u53ef\u4ee5\u8ba9\u7cfb\u7edf\u9ed8\u8ba4\u5565\u90fd\u4e0d\u5e72\uff0c\u8ba9\u5b50\u7c7b\u8fdb\u884c\u5173\u6ce8\u81ea\u5df1\u7684\u884c\u4e3a\uff0c\u4f46\u8fd9\u540c\u6837\u5f15\u51fa\u4e86\u95ee\u9898 3\uff1b\u5982\u679c\u591a\u79cd\u9e2d\u5b50\u6709\u76f8\u540c\u7684\u884c\u4e3a\u4e14\u4e0e\u7236\u7c7b\u9ed8\u8ba4\u884c\u4e3a\u4e0d\u4e00\u81f4\uff0c\u6b64\u90e8\u5206\u7684\u4ee3\u7801\u5c31\u65e0\u6cd5\u590d\u7528\u4e86\u3002 \u95ee\u9898 4 \u5f88\u660e\u663e\uff0c\u76ee\u524d\u7684\u7c7b\u578b\u65e0\u6cd5\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u6539\u53d8\u3002 \u5ef6\u4f38\u601d\u80031\uff1a\u80fd\u5426\u5c06 Fly \u548c Quack \u53d8\u5316\u90e8\u5206\u63a5\u53e3\u7f16\u7a0b \u6bcf\u65b0\u589e\u4e00\u79cd\u884c\u4e3a(\u4f8b\u5982 fly), \u6211\u4eec\u9700\u8981\u68c0\u67e5\u6240\u6709\u7684\u5b50\u7c7b\u662f\u5426\u7b26\u5408\u8be5\u884c\u4e3a\uff0c\u90a3\u4e48\u80fd\u5426\u7528\u63a5\u53e3 flyable \u63a5\u53e3\uff0c\u8ba9\u62e5\u6709\u6539\u884c\u4e3a\u7684 Duck \u9075\u5faa\u63a5\u53e3\uff1f protocol Flyable { func fly() } protocol Quackable { func quack(); } class Duck { func swim() { debugPrint(\"\u6e38\u6cf3\") } func display() { fatalError(\" subclass implement \") } } class MallarDuck: Duck, Flyable, Quackable { override func display() { debugPrint( \"Mallar Duck display\" ) } func quack() { debugPrint(\"\u560e\u560e\") } func fly() { debugPrint( \"Mallar Duck fly\" ) } } class RedHeadDuck: Duck,Flyable, Quackable { override func display() { debugPrint( \"Red Head Duck display\" ) } func quack() { debugPrint(\"\u560e\u560e\") } func fly() { debugPrint( \"Red Head Duck fly\" ) } } class RubberDuck: Duck, Quackable{ override func display() { debugPrint( \"Rubber Duck display\" ) } func quack() { debugPrint(\"\u5431\u5431\") } } \u9762\u5411\u63a5\u53e3\u7f16\u7a0b\uff0c\u867d\u7136\u80fd\u89e3\u51b3\u6389\u95ee\u9898 1, \u4f46\u662f\u95ee\u9898 2 \u548c \u95ee\u9898 3 \u4f9d\u65e7\u5b58\u5728\u3002 \u5ef6\u4f38\u601d\u80032\uff1a\u7ee7\u627f VS \u7ec4\u5408 \u7ee7\u627f\u662f\u5728 \u7f16\u8bd1\u671f\u95f4 \u786e\u5b9a\u7684 \u5f3a\u8026\u5408 \u7684\u7ed3\u6784\u5173\u7cfb\uff1b \u7ec4\u5408\u662f\u5728 \u8fd0\u884c\u671f\u95f4 \u786e\u5b9a\u7684 \u677e\u8026\u5408\u5173\u7cfb \uff0c\u7ec4\u5408\u80fd\u591f\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u6539\u53d8\u8be5\u884c\u4e3a\u3002 \u540c\u65f6\u5728\u5927\u591a\u6570\u8bed\u8a00\u4e2d\u652f\u6301\u9075\u5faa\u591a\u63a5\u53e3\uff0c\u4f46\u4e0d\u652f\u6301\u9075\u5faa\u591a\u7ee7\u627f\uff08\u7b14\u8005\u76ee\u524d\u5c31\u77e5\u9053 C++\u652f\u6301\u591a\u7ee7\u627f\uff09\u3002 \u6574\u5408\u9e2d\u5b50\u884c\u4e3a \u4e3a\u4e86\u4ee3\u7801\u884c\u4e3a\u590d\u7528\uff0c\u6211\u4eec\u5c06\u53d8\u5316\u7684\u90e8\u5206\uff08fly \u4ee5\u53ca quack\uff09\u63d0\u53d6\u51fa\u6765\uff0c\u4e3a\u4e86\u52a8\u6001\u6539\u53d8\u5bf9\u5e94\u7684\u884c\u4e3a\uff0c\u91c7\u7528\u63a5\u53e3\u7f16\u7a0b\u52a8\u6001\u7684\u6539\u53d8\u884c\u4e3a\u3002 protocol FlyBehavior { func fly() } class FlyNoWay: FlyBehavior { func fly() { debugPrint( \"\u65e0\u6cd5\u98de\u884c\") } } class FlyWithWings: FlyBehavior { func fly() { debugPrint( \"\u53ef\u98de\u884c \") } } protocol QuackBehavior { func quack() } class MuteQuack: QuackBehavior { func quack() { debugPrint( \"\u65e0\u6cd5\u53eb\" ) } } class Squeak: QuackBehavior { func quack() { debugPrint( \"\u560e\u560e\" ) } } class Creak: QuackBehavior { func quack() { debugPrint( \"\u5431\u5431\" ) } } class Duck { var flyBehavior: FlyBehavior? var quackBehavior: QuackBehavior? func swim() { debugPrint(\"\u6e38\u6cf3\") } func display() { } func makeFly() { flyBehavior?.fly() } func makeQuack() { quackBehavior?.quack() } } class MallarDuck: Duck { override init() { super.init() self.flyBehavior = FlyWithWings() self.quackBehavior = Squeak() } override func display() { debugPrint( \"Mallar Duck display\" ) } } class RedHeadDuck: Duck { override init() { super.init() self.flyBehavior = FlyWithWings() self.quackBehavior = Squeak() } override func display() { debugPrint( \"Red Head Duck display\" ) } } class RubberDuck: Duck { override init() { super.init() self.flyBehavior = FlyNoWay() self.quackBehavior = Creak() } // \u52a8\u6001\u6539\u53d8\u884c\u4e3a func makeWing() { self.flyBehavior = FlyWithWings() } // \u52a8\u6001\u6539\u53d8\u884c\u4e3a func makeBroken() { self.quackBehavior = MuteQuack() } override func display() { debugPrint( \"Rubber Duck display\" ) } } \u8fd9\u91cc\u5c06 FlyBehavior \u548c QuackBehavior \u8bbe\u8ba1\u4e3a\u63a5\u53e3\uff0c\u5e76\u672a\u8bbe\u8ba1\u4e3a\u4e00\u4e2a\u7c7b\u3002\u8fd9\u662f\u56e0\u4e3a\u63a5\u53e3\u66f4\u52a0\u7075\u6d3b\uff0c\u8bbe\u8ba1\u4e3a\u5177\u4f53\u7c7b\u540e\uff0c\u4ee5\u540e\u60f3\u6539\u53d8\u8be5\u7c7b\u578b\u9700\u8981\u5f3a\u7ed1\u5b9a\u4e3a\u8be5\u7c7b\u7684\u5b50\u7c7b\uff0c\u7f3a\u5c11\u7075\u6d3b\u6027\u3002 \u5c3d\u91cf\u9488\u5bf9\u63a5\u53e3\u7f16\u7a0b\uff0c\u800c\u4e0d\u662f\u9488\u5bf9\u5b9e\u73b0\u7f16\u7a0b \u91c7\u7528\u7ec4\u5408\u7684\u65b9\u5f0f\u5c06 FlyBehavior \u548c QuackBehavior \u8054\u7cfb\u8d77\u6765\uff0c\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u7684\u53bb\u786e\u5b9a\u5177\u4f53\u7684\u7c7b\u578b\u3002 \u7b56\u7565\u6a21\u5f0f \u5b9a\u4e49\uff1a \u7b56\u7565\u6a21\u5f0f\u5c31\u662f\u8bb2\u7b97\u6cd5\u7c07\u5c01\u88c5\u8d77\u6765\uff0c\u7136\u540e\u8ba9\u4ed6\u4eec\u53ef\u4ee5\u76f8\u4e92\u66ff\u6362\uff0c\u5e76\u4e14\u53ef\u4ee5\u518d\u4e0d\u540c\u7684\u573a\u666f\u4e2d\u8fdb\u884c\u4ee3\u7801\u7684\u590d\u7528\u3002 \u5728\u672c\u4f8b\u4e2d\uff0c\u9075\u5faa FlyBehavior \u548c QuackBehavior \u7c7b\u4f3c\u4e8e\u5b9a\u4e49\u7684\u7b97\u6cd5\uff0c\u7136\u540e\u5728 RubberDuck \u7684 makeWing \u548c makeBreaken \u4e2d\u52a8\u6001\u7684\u6539\u53d8\u4e86 flyBehavior \u548c quackBehavior \u7684\u884c\u4e3a\u3002 \u4e0a\u9762\u7684\u4f8b\u5b50\u53d6\u81ea\u4e0e \u300aHead First \u8bbe\u8ba1\u6a21\u5f0f\u300b \u7b2c\u4e00\u7ae0\uff0c\u4e3b\u8981\u5c06\u7684\u5c31\u662f\u7b56\u7565\u6a21\u5f0f\u3002\u4e3b\u8981\u4ecb\u7ecd\u4e86\u4e09\u5927\u539f\u5219: \u5c01\u88c5\u53d8\u5316 \u591a\u7528\u7ec4\u5408\uff0c\u5c11\u7528\u7ee7\u627f \u9488\u5bf9\u63a5\u53e3\u7f16\u7a0b\uff0c\u4e0d\u9488\u5bf9\u5b9e\u73b0\u7f16\u7a0b","title":"\u884c\u4e3a\u578b-\u7b56\u7565\u6a21\u5f0f"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/#_1","text":"\u6807\u7b7e\uff08\u7a7a\u683c\u5206\u9694\uff09\uff1a \u8bbe\u8ba1\u6a21\u5f0f Swift \u7b56\u7565\u6a21\u5f0f \u9700\u6c42\u4e00\uff1a\u8bbe\u8ba1\u9e2d\u5b50\u6a21\u578b \u5ef6\u4f38\u601d\u8003\uff1a\u9e2d\u5b50\u7c7b\u578b\u80fd\u5426\u4f7f\u7528\u63a5\u53e3\u6216\u8005\u534f\u8bae\u6765\u8868\u793a? \u9700\u6c42\u4e8c\uff1a\u8ba9\u9e2d\u5b50\u80fd\u98de\u5427 \u5ef6\u4f38\u601d\u80031\uff1a\u80fd\u5426\u5c06 Fly \u548c Quack \u53d8\u5316\u90e8\u5206\u63a5\u53e3\u7f16\u7a0b \u5ef6\u4f38\u601d\u80032\uff1a\u7ee7\u627f VS \u7ec4\u5408 \u6574\u5408\u9e2d\u5b50\u884c\u4e3a \u7b56\u7565\u6a21\u5f0f \u9762\u5411\u5bf9\u8c61\u7684\u4e09\u5927\u7279\u6027\uff1a\u5c01\u88c5\u3001\u7ee7\u627f\u548c\u591a\u6001\uff0c\u8fd9\u4e09\u5927\u7279\u6027\u5176\u5b9e\u4e3a\u4e86\u65b9\u4fbf\u4ee3\u7801\u7684 \u590d\u7528 \u4e0e \u7ba1\u7406 \u3002","title":"\u7b56\u7565\u6a21\u5f0f"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/#_2","text":"\u9700\u6c42\uff1a \u8bbe\u8ba1\u4e00\u6b3e\u7b80\u5355\u7684\u9e2d\u5b50\u6e38\u620f\uff0c\u91cc\u9762\u9e2d\u5b50\u53ef\u4ee5\u8fdb\u884c\u560e\u560e\u53eb\uff08quack\uff09\u4ee5\u53ca\u6e38\u6cf3\uff08swim\uff09\uff0c\u8fd8\u9700\u8981\u4e00\u4e2a\u80fd\u5c55\u793a\u9e2d\u5b50\u5916\u89c2\uff08display\uff09\u7684\u65b9\u6cd5\u3002 \u4e3a\u4e86\u4ee3\u7801\u7684\u590d\u7528\uff08quack \u4ee5\u53ca swim\uff09\uff0c\u8bbe\u8ba1\u4e00\u4e2a\u8d85\u7c7b Duck\uff0c\u5b50\u7c7b\u7ee7\u627f\u4e8e Duck\uff0c\u4f46\u662f\u5b50\u7c7b\u5404\u81ea\u5b9e\u73b0\u4e0d\u540c\u7684\u90e8\u5206\uff08display\uff09,\u6807\u51c6\u7684 OO \u7f16\u7a0b\u3002 class Duck { func quack() { debugPrint(\"\u560e\u560e\") } func swim() { debugPrint(\"\u6e38\u6cf3\") } func display() { fatalError(\" subclass implement \") } } class MallarDuck: Duck { override func display() { debugPrint( \"Mallar Duck display\" ) } } class RedHeadDuck: Duck { override func display() { debugPrint( \"Red Head Duck display\" ) } }","title":"\u9700\u6c42\u4e00\uff1a\u8bbe\u8ba1\u9e2d\u5b50\u6a21\u578b"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/#_3","text":"protocol DuckRepresentable { func quack() func swim() func display() } extension DuckRepresentable { func quack() { debugPrint(\"\u560e\u560e\") } func swim() { debugPrint(\"\u6e38\u6cf3\") } } class MallarDuck: DuckRepresentable { func display() { debugPrint( \"Mallar Duck display\" ) } } class RedHeadDuck: DuckRepresentable { func display() { debugPrint( \"Red Head Duck display\" ) } } \u5f97\u76ca\u4e8e Swift \u534f\u8bae\u6269\u5c55\u9ed8\u8ba4\u5b9e\u73b0\uff0c\u53ef\u4ee5\u590d\u7528 quack \u4ee5\u53ca swim \u4ee3\u7801\u3002\u4f46\u5728\u5176\u4ed6\u8bed\u8a00\u4e2d\uff08\u4f8b\u5982 Java\uff09\uff0c\u5c31\u9700\u8981\u4e3a\u6bcf\u4e2a\u9075\u5faa DuckRepresentable \u63a5\u53e3\u7684\u7c7b\u578b\u5b9e\u73b0 quack \u3001 swim \u4ee5\u53ca display \u65b9\u6cd5\uff0c\u4ee3\u7801\u5f97\u4e0d\u5230\u590d\u7528\u3002","title":"\u5ef6\u4f38\u601d\u8003\uff1a\u9e2d\u5b50\u7c7b\u578b\u80fd\u5426\u4f7f\u7528\u63a5\u53e3\u6216\u8005\u534f\u8bae\u6765\u8868\u793a?"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/#_4","text":"\u9700\u6c42\uff1a \u9879\u76ee\u8fed\u4ee3\uff0c\u9700\u8981\u7ed9\u9e2d\u5b50\u6dfb\u52a0\u98de\u884c\u7684\u80fd\u529b\u3002\u540c\u65f6\u9700\u8981\u589e\u52a0\u4e00\u79cd\u6a61\u76ae\u9e2d\uff08RubberDuck\uff09\uff0c\u8fd9\u79cd\u9e2d\u5b50\u53d1\u51fa\u5431\u5431\u53eb\u58f0\uff0c\u4f46\u662f\u4e0d\u80fd\u98de\u3002 \u9700\u6c42\u9700\u8981\u9e2d\u5b50\u4f1a\u98de\uff0c\u56e0\u6b64\u5728\u7236\u7c7b Duck \u4e2d fly() \u65b9\u6cd5\u5373\u53ef\u3002\u6a61\u76ae\u9e2d\u91cd\u5199 quack() \u4ee5\u53ca fly() class Duck { func quack() { debugPrint(\"\u560e\u560e\") } func swim() { debugPrint(\"\u6e38\u6cf3\") } func display() { fatalError(\" subclass implement \") } func fly() { debugPrint( \"\u98de\u884c\" ) } } class MallarDuck: Duck { override func display() { debugPrint( \"Mallar Duck display\" ) } } class RedHeadDuck: Duck { override func display() { debugPrint( \"Red Head Duck display\" ) } } class RubberDuck: Duck { override func quack() { debugPrint(\"\u5431\u5431\") } override func display() { debugPrint( \"Rubber Duck display\" ) } override func fly() { /* \u4e0d\u80fd\u98de\u884c */ } } Great\uff01\u5b8c\u6210\u4e86\u9700\u6c42\uff01\u4e0b\u9762\u6765\u5206\u6790\u4e0b\u8fd9\u91cc\u9762\u53ef\u80fd\u9762\u4e34\u7684\u95ee\u9898\uff1a \u6bcf\u589e\u52a0\u4e00\u79cd\u884c\u4e3a\u9700\u8981\u68c0\u67e5\u6240\u6709\u7684\u9e2d\u5b50\u662f\u5426\u7b26\u5408\u8be5\u884c\u4e3a; \u4e0e\u7236\u7c7b\u884c\u4e3a\u4e0d\u4e00\u81f4\u7684\u4ee3\u7801\u65e0\u6cd5\u8fdb\u884c\u590d\u7528; \u65e0\u6cd5\u5728\u8fd0\u884c\u65f6\u6539\u53d8\u5bf9\u5e94\u7684\u884c\u4e3a; \u91c7\u7528\u7ee7\u627f\u7684\u65b9\u5f0f\uff0c\u90fd\u9700\u8981\u5173\u6ce8\u5b50\u7c7b\u662f\u5426\u80fd\u591f\u7ee7\u627f\u7236\u7c7b\u6240\u6709\u7684\u884c\u4e3a\uff0c\u6bcf\u6dfb\u52a0\u4e00\u79cd\u884c\u4e3a\uff0c\u4e5f\u5fc5\u987b\u68c0\u67e5 \u6240\u6709 \u5b50\u7c7b\u662f\u5426\u7b26\u5408\u8fd9\u79cd\u884c\u4e3a\uff0c\u5982\u679c\u4e0d\u7b26\u5408\uff0c\u5927\u591a\u5c31\u662f\u91cd\u5199\u6539\u884c\u4e3a\uff08\u4f8b\u5982 fly \u5565\u4e5f\u4e0d\u505a\uff09\u3002\u4f46\u5728\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c \u6bcf\u4e00\u4e2a\u5b50\u7c7b\u5bf9\u8c61\u4ec5\u4ec5\u9700\u8981\u5173\u6ce8\u53ea\u80fd\u80fd\u652f\u6301\u7684\u884c\u4e3a\uff0c\u800c\u4e0d\u9700\u8981\u8003\u8651\u81ea\u5df1\u4e0d\u652f\u6301\u7684\u884c\u4e3a \u3002\u5f53\u7136\u53ef\u4ee5\u8ba9\u7cfb\u7edf\u9ed8\u8ba4\u5565\u90fd\u4e0d\u5e72\uff0c\u8ba9\u5b50\u7c7b\u8fdb\u884c\u5173\u6ce8\u81ea\u5df1\u7684\u884c\u4e3a\uff0c\u4f46\u8fd9\u540c\u6837\u5f15\u51fa\u4e86\u95ee\u9898 3\uff1b\u5982\u679c\u591a\u79cd\u9e2d\u5b50\u6709\u76f8\u540c\u7684\u884c\u4e3a\u4e14\u4e0e\u7236\u7c7b\u9ed8\u8ba4\u884c\u4e3a\u4e0d\u4e00\u81f4\uff0c\u6b64\u90e8\u5206\u7684\u4ee3\u7801\u5c31\u65e0\u6cd5\u590d\u7528\u4e86\u3002 \u95ee\u9898 4 \u5f88\u660e\u663e\uff0c\u76ee\u524d\u7684\u7c7b\u578b\u65e0\u6cd5\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u6539\u53d8\u3002","title":"\u9700\u6c42\u4e8c\uff1a\u8ba9\u9e2d\u5b50\u80fd\u98de\u5427"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/#1-fly-quack","text":"\u6bcf\u65b0\u589e\u4e00\u79cd\u884c\u4e3a(\u4f8b\u5982 fly), \u6211\u4eec\u9700\u8981\u68c0\u67e5\u6240\u6709\u7684\u5b50\u7c7b\u662f\u5426\u7b26\u5408\u8be5\u884c\u4e3a\uff0c\u90a3\u4e48\u80fd\u5426\u7528\u63a5\u53e3 flyable \u63a5\u53e3\uff0c\u8ba9\u62e5\u6709\u6539\u884c\u4e3a\u7684 Duck \u9075\u5faa\u63a5\u53e3\uff1f protocol Flyable { func fly() } protocol Quackable { func quack(); } class Duck { func swim() { debugPrint(\"\u6e38\u6cf3\") } func display() { fatalError(\" subclass implement \") } } class MallarDuck: Duck, Flyable, Quackable { override func display() { debugPrint( \"Mallar Duck display\" ) } func quack() { debugPrint(\"\u560e\u560e\") } func fly() { debugPrint( \"Mallar Duck fly\" ) } } class RedHeadDuck: Duck,Flyable, Quackable { override func display() { debugPrint( \"Red Head Duck display\" ) } func quack() { debugPrint(\"\u560e\u560e\") } func fly() { debugPrint( \"Red Head Duck fly\" ) } } class RubberDuck: Duck, Quackable{ override func display() { debugPrint( \"Rubber Duck display\" ) } func quack() { debugPrint(\"\u5431\u5431\") } } \u9762\u5411\u63a5\u53e3\u7f16\u7a0b\uff0c\u867d\u7136\u80fd\u89e3\u51b3\u6389\u95ee\u9898 1, \u4f46\u662f\u95ee\u9898 2 \u548c \u95ee\u9898 3 \u4f9d\u65e7\u5b58\u5728\u3002","title":"\u5ef6\u4f38\u601d\u80031\uff1a\u80fd\u5426\u5c06 Fly \u548c Quack \u53d8\u5316\u90e8\u5206\u63a5\u53e3\u7f16\u7a0b"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/#2-vs","text":"\u7ee7\u627f\u662f\u5728 \u7f16\u8bd1\u671f\u95f4 \u786e\u5b9a\u7684 \u5f3a\u8026\u5408 \u7684\u7ed3\u6784\u5173\u7cfb\uff1b \u7ec4\u5408\u662f\u5728 \u8fd0\u884c\u671f\u95f4 \u786e\u5b9a\u7684 \u677e\u8026\u5408\u5173\u7cfb \uff0c\u7ec4\u5408\u80fd\u591f\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u6539\u53d8\u8be5\u884c\u4e3a\u3002 \u540c\u65f6\u5728\u5927\u591a\u6570\u8bed\u8a00\u4e2d\u652f\u6301\u9075\u5faa\u591a\u63a5\u53e3\uff0c\u4f46\u4e0d\u652f\u6301\u9075\u5faa\u591a\u7ee7\u627f\uff08\u7b14\u8005\u76ee\u524d\u5c31\u77e5\u9053 C++\u652f\u6301\u591a\u7ee7\u627f\uff09\u3002","title":"\u5ef6\u4f38\u601d\u80032\uff1a\u7ee7\u627f VS \u7ec4\u5408"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/#_5","text":"\u4e3a\u4e86\u4ee3\u7801\u884c\u4e3a\u590d\u7528\uff0c\u6211\u4eec\u5c06\u53d8\u5316\u7684\u90e8\u5206\uff08fly \u4ee5\u53ca quack\uff09\u63d0\u53d6\u51fa\u6765\uff0c\u4e3a\u4e86\u52a8\u6001\u6539\u53d8\u5bf9\u5e94\u7684\u884c\u4e3a\uff0c\u91c7\u7528\u63a5\u53e3\u7f16\u7a0b\u52a8\u6001\u7684\u6539\u53d8\u884c\u4e3a\u3002 protocol FlyBehavior { func fly() } class FlyNoWay: FlyBehavior { func fly() { debugPrint( \"\u65e0\u6cd5\u98de\u884c\") } } class FlyWithWings: FlyBehavior { func fly() { debugPrint( \"\u53ef\u98de\u884c \") } } protocol QuackBehavior { func quack() } class MuteQuack: QuackBehavior { func quack() { debugPrint( \"\u65e0\u6cd5\u53eb\" ) } } class Squeak: QuackBehavior { func quack() { debugPrint( \"\u560e\u560e\" ) } } class Creak: QuackBehavior { func quack() { debugPrint( \"\u5431\u5431\" ) } } class Duck { var flyBehavior: FlyBehavior? var quackBehavior: QuackBehavior? func swim() { debugPrint(\"\u6e38\u6cf3\") } func display() { } func makeFly() { flyBehavior?.fly() } func makeQuack() { quackBehavior?.quack() } } class MallarDuck: Duck { override init() { super.init() self.flyBehavior = FlyWithWings() self.quackBehavior = Squeak() } override func display() { debugPrint( \"Mallar Duck display\" ) } } class RedHeadDuck: Duck { override init() { super.init() self.flyBehavior = FlyWithWings() self.quackBehavior = Squeak() } override func display() { debugPrint( \"Red Head Duck display\" ) } } class RubberDuck: Duck { override init() { super.init() self.flyBehavior = FlyNoWay() self.quackBehavior = Creak() } // \u52a8\u6001\u6539\u53d8\u884c\u4e3a func makeWing() { self.flyBehavior = FlyWithWings() } // \u52a8\u6001\u6539\u53d8\u884c\u4e3a func makeBroken() { self.quackBehavior = MuteQuack() } override func display() { debugPrint( \"Rubber Duck display\" ) } } \u8fd9\u91cc\u5c06 FlyBehavior \u548c QuackBehavior \u8bbe\u8ba1\u4e3a\u63a5\u53e3\uff0c\u5e76\u672a\u8bbe\u8ba1\u4e3a\u4e00\u4e2a\u7c7b\u3002\u8fd9\u662f\u56e0\u4e3a\u63a5\u53e3\u66f4\u52a0\u7075\u6d3b\uff0c\u8bbe\u8ba1\u4e3a\u5177\u4f53\u7c7b\u540e\uff0c\u4ee5\u540e\u60f3\u6539\u53d8\u8be5\u7c7b\u578b\u9700\u8981\u5f3a\u7ed1\u5b9a\u4e3a\u8be5\u7c7b\u7684\u5b50\u7c7b\uff0c\u7f3a\u5c11\u7075\u6d3b\u6027\u3002 \u5c3d\u91cf\u9488\u5bf9\u63a5\u53e3\u7f16\u7a0b\uff0c\u800c\u4e0d\u662f\u9488\u5bf9\u5b9e\u73b0\u7f16\u7a0b \u91c7\u7528\u7ec4\u5408\u7684\u65b9\u5f0f\u5c06 FlyBehavior \u548c QuackBehavior \u8054\u7cfb\u8d77\u6765\uff0c\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u7684\u53bb\u786e\u5b9a\u5177\u4f53\u7684\u7c7b\u578b\u3002","title":"\u6574\u5408\u9e2d\u5b50\u884c\u4e3a"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/#_6","text":"\u5b9a\u4e49\uff1a \u7b56\u7565\u6a21\u5f0f\u5c31\u662f\u8bb2\u7b97\u6cd5\u7c07\u5c01\u88c5\u8d77\u6765\uff0c\u7136\u540e\u8ba9\u4ed6\u4eec\u53ef\u4ee5\u76f8\u4e92\u66ff\u6362\uff0c\u5e76\u4e14\u53ef\u4ee5\u518d\u4e0d\u540c\u7684\u573a\u666f\u4e2d\u8fdb\u884c\u4ee3\u7801\u7684\u590d\u7528\u3002 \u5728\u672c\u4f8b\u4e2d\uff0c\u9075\u5faa FlyBehavior \u548c QuackBehavior \u7c7b\u4f3c\u4e8e\u5b9a\u4e49\u7684\u7b97\u6cd5\uff0c\u7136\u540e\u5728 RubberDuck \u7684 makeWing \u548c makeBreaken \u4e2d\u52a8\u6001\u7684\u6539\u53d8\u4e86 flyBehavior \u548c quackBehavior \u7684\u884c\u4e3a\u3002 \u4e0a\u9762\u7684\u4f8b\u5b50\u53d6\u81ea\u4e0e \u300aHead First \u8bbe\u8ba1\u6a21\u5f0f\u300b \u7b2c\u4e00\u7ae0\uff0c\u4e3b\u8981\u5c06\u7684\u5c31\u662f\u7b56\u7565\u6a21\u5f0f\u3002\u4e3b\u8981\u4ecb\u7ecd\u4e86\u4e09\u5927\u539f\u5219: \u5c01\u88c5\u53d8\u5316 \u591a\u7528\u7ec4\u5408\uff0c\u5c11\u7528\u7ee7\u627f \u9488\u5bf9\u63a5\u53e3\u7f16\u7a0b\uff0c\u4e0d\u9488\u5bf9\u5b9e\u73b0\u7f16\u7a0b","title":"\u7b56\u7565\u6a21\u5f0f"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82%E3%80%81%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95%E3%80%81%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82/","text":"\u7b80\u5355\u5de5\u5382\u3001\u5de5\u5382\u65b9\u6cd5\u3001\u62bd\u8c61\u5de5\u5382 \u6807\u7b7e\uff08\u7a7a\u683c\u5206\u9694\uff09\uff1a \u8bbe\u8ba1\u6a21\u5f0f Swift \u7b80\u5355\u5de5\u5382\u3001\u5de5\u5382\u65b9\u6cd5\u3001\u62bd\u8c61\u5de5\u5382 \u9700\u6c42\u4e00\uff1a\u7b80\u5355\u5de5\u5382- Pizza \u5e97\u5f00\u5f20\u4e86 \u9700\u6c42\u4e8c: \u5de5\u5382\u65b9\u6cd5-\u52a0\u76df\u62ab\u8428\u5e97 \u8ba8\u8bba\uff08\u5982\u679c\u6ca1\u6709\u770b\u4e66\u53ef\u4ee5\u76f4\u63a5\u5ffd\u7565\u6389\u8fd9\u90e8\u5206\u5185\u5bb9\uff09 \u9700\u6c42\u4e09 \u62bd\u8c61\u5de5\u5382-\u91cd\u65b0\u56de\u5230 Pizza \u672c\u8eab 3.1 Pizza \u5b9e\u4f8b 3.2 \u5bb6\u5177\u5b9e\u4f8b \u8ba8\u8bba - \u788e\u788e\u5ff5 \u7b80\u5355\u5de5\u5382 \u4e0d\u662f\u4e00\u4e2a\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u800c\u662f\u4e00\u76f4\u7f16\u7801\u4e60\u60ef \u5de5\u5382\u65b9\u6cd5 \u662f\u5b9a\u4e49\u4e00\u4e2a\u521b\u5efa\u5bf9\u8c61\u7684\u63a5\u53e3\uff0c\u5b50\u7c7b\u5b9e\u73b0\u8be5\u63a5\u53e3\uff0c\u5b50\u7c7b\u51b3\u5b9a\u5177\u4f53\u521b\u5efa\u54ea\u4e2a\u5bf9\u8c61\u3002 \u62bd\u8c61\u5de5\u5382 \u63d0\u4f9b\u4e00\u4e2a\u63a5\u53e3\uff0c\u7528\u4e8e\u521b\u5efa \u4e00\u7cfb\u5217\u76f8\u5173\u6216\u8005\u76f8\u4e92\u4f9d\u8d56 \u7684\u5bf9\u8c61\uff0c\u800c\u4e0d\u9700\u8981\u6307\u5b9a\u4ed6\u4eec\u7684\u5177\u4f53\u7c7b\u3002 \u7b80\u5355\u5de5\u5382->\u5de5\u5382\u65b9\u6cd5->\u62bd\u8c61\u5de5\u5382\u7c7b\u4f3c\u4e00\u79cd\u5c42\u6b21\u9012\u8fdb\uff0c\u5c42\u5c42\u62bd\u8c61\u7684\u8fc7\u7a0b\u3002\u4e0b\u9762\u4ee5\u5b9e\u9645\u4f8b\u5b50\u6765\u8bf4\u660e; \u9700\u6c42\u5185\u5bb9\u4f9d\u636e \u300aHeadFirst \u8bbe\u8ba1\u6a21\u5f0f\u300b \u7b2c\u4e09\u7ae0 \u9700\u6c42\u4e00\uff1a\u7b80\u5355\u5de5\u5382- Pizza \u5e97\u5f00\u5f20\u4e86 Pizza \u5e97\u5f00\u5f20\u4e86\uff0c\u5e97\u91cc\u552e\u5356\u5f88\u591a\u79cd\u62ab\u8428\uff0c\u62ab\u8428\u7684\u5236\u4f5c\u6d41\u7a0b\u90fd\u4e00\u6837\u7684:\u51c6\u5907(prepare)\u3001\u70d8\u70e4\uff08bake\uff09\u3001\u5207\u7247\uff08cut\uff09\u3001\u6253\u5305\uff08box\uff09\u3002 protocol Pizza { func prepare() func bake() func cut() func box() } class PizzaStore { func orderPizza(type: String) -> Pizza? { var pizza: Pizza? = nil if type == \"cheese\" { pizza = CheesePizza() } else if type == \"Greek\" { pizza = GreekPizza() } pizza?.prepare() pizza?.bake() pizza?.cut() pizza?.box() return pizza } } class CheesePizza: Pizza { } class GreekPizza: Pizza { } \u8c03\u7528: PizzaStore().orderPizza(type: \"cheese\") \u4f7f\u7528\u534f\u8bae Pizza \u6765\u5b9a\u4e49\u62ab\u8428\u7c7b\u578b\uff0c\u5404\u79cd\u5177\u4f53\u7684\u62ab\u8428\uff08CheesePizza\u3001GreekPizza\uff09\u9075\u5faa Pizza \u534f\u8bae\uff0c\u7528\u6237\u901a\u8fc7 PizzaStore \u7684 orderPizza \u9884\u5b9a Pizza\uff0c\u901a\u8fc7\u53c2\u6570 type \u6765\u533a\u5206\u4e0d\u4e00\u6837\u7684 Pizza \u7c7b\u578b\u3002 \u5176\u4e2d\u901a\u8fc7 type \u6765\u5224\u65ad\u5177\u4f53\u7684\u7c7b\u578b\u90e8\u5206\uff1a if type == \"cheese\" { pizza = CheesePizza() } else if type == \"Greek\" { pizza = GreekPizza() } \u5f53 Pizza \u7c7b\u578b\u6dfb\u52a0\u6216\u8005\u5220\u9664\u7684\u65f6\u5019\uff0c\u9700\u8981\u589e\u52a0\u6216\u8005\u5220\u9664\u8fd9\u90e8\u5206\u4ee3\u7801\uff0c\u8fd9\u8fdd\u53cd\u4e86 \u5bf9\u4fee\u6539\u5173\u95ed\u539f\u5219 \u3002 \u4f7f\u7528\u7b80\u5355\u5de5\u5382\u4fee\u6539: protocol PizzaFactory { func createPizza(type: String) -> Pizza? } class SimplePizzaFactory: PizzaFactory { func createPizza(type: String) -> Pizza? { var pizza: Pizza? = nil if type == \"cheese\" { pizza = CheesePizza() } else if type == \"Greek\" { pizza = GreekPizza() } return pizza } } class PizzaStore { let pizzaFactory: PizzaFactory init(pizzaFactory: PizzaFactory) { self.pizzaFactory = pizzaFactory } func orderPizza(type: String) -> Pizza? { let pizza: Pizza? = self.pizzaFactory.createPizza(type: type) pizza?.prepare() pizza?.bake() pizza?.cut() pizza?.box() return pizza } } \u8c03\u7528 PizzaStore(pizzaFactory: SimplePizzaFactory()).orderPizza(type: \"cheese\") \u7b80\u5355\u5de5\u5382\u628a\u6839\u636e Type \u521b\u5efa Pizza \u7684\u53d8\u5316\u90e8\u5206\u653e\u5230 PizzaFactory \u4e2d\u3002PizzaFactory \u4e13\u804c\u521b\u5efa Pizza\u3002 \u7b80\u5355\u5de5\u5382\u770b\u4f3c\u662f\u5c06\u4e00\u4e2a\u5185\u5bb9\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u5bf9\u8c61\u4e2d\uff0c\u4f46\u662f\u5982\u679c\u521b\u5efa\u4ee3\u7801\u7684\u590d\u7528\uff0c\u4f18\u52bf\u5c31\u660e\u663e\u3002(PS: \u5b9e\u9645 \u5f00\u53d1\u4e2d\uff0c\u4e00\u822c\u4e5f\u4e0d\u4f1a\u8fd9\u4e48\u505a\uff0c\u56e0\u4e3a\u8fd9\u53ef\u80fd\u4f1a\u5f15\u5165\u4e00\u4e2a\u65b0\u7684\u7c7b\u6587\u4ef6) \u9700\u6c42\u4e8c: \u5de5\u5382\u65b9\u6cd5-\u52a0\u76df\u62ab\u8428\u5e97 \u62ab\u8428\u5e97\u6269\u5c55\u5f88\u5feb\uff0c\u73b0\u5728\u5728\u4e0d\u540c\u7684\u5730\u65b9\u90fd\u6709\u4e0d\u540c\u7684\u52a0\u76df\u5e97\uff0c\u4f46\u662f\u8fd9\u4e5f\u5e26\u6765\u4e00\u4e2a\u95ee\u9898\uff0c\u6bcf\u4e2a\u5730\u533a\u7684\u62ab\u8428\u7c7b\u578b\u53e3\u5473\u4e0d\u4e00\u81f4\u3002 \u6700\u7b80\u5355\u7684\u505a\u6cd5\u662f\u521b\u5efa\u4e0d\u540c\u5730\u533a\u7684 Pizza \u5de5\u5382\uff0c\u521b\u5efa\u5404\u81ea\u98ce\u5473 Pizza /// New York \u62ab\u8428\u5de5\u5382\u65b9\u6cd5\uff0c\u521b\u5efa New York \u98ce\u5473\u7684 Pizza class NYPizzaFactory: PizzaFactory { func createPizza(type: String) -> Pizza? { var pizza: Pizza? = nil if type == \"cheese\" { pizza = NYCheesePizza() } else if type == \"Greek\" { pizza = NYGreekPizza() } return pizza } } /// Chicago \u62ab\u8428\u5de5\u5382\u65b9\u6cd5\uff0c\u521b\u5efa Chicago \u98ce\u5473\u7684 Pizza class ChicagoPizzaFactory: PizzaFactory { func createPizza(type: String) -> Pizza? { var pizza: Pizza? = nil if type == \"cheese\" { pizza = ChicagoCheesePizza() } else if type == \"Greek\" { pizza = ChicagoGreekPizza() } return pizza } } class NYCheesePizza: Pizza { } class NYGreekPizza: Pizza { } class ChicagoCheesePizza: Pizza { } class ChicagoGreekPizza: Pizza { } \u8c03\u7528 PizzaStore(pizzaFactory: NYPizzaFactory()).orderPizza(type: \"cheese\") PizzaStore(pizzaFactory: ChicagoPizzaFactory()).orderPizza(type: \"cheese\") \u4e0a\u9762\u7684\u505a\u6cd5\u662f\u5bf9\u6bcf\u4e2a\u5730\u533a\u751f\u6210\u5404\u81ea\u7684\u5de5\u5382\uff0c\u7136\u540e\u7531\u5404\u81ea\u7684\u5de5\u5382\u751f\u6210\u5404\u81ea\u98ce\u5473\u7684 Pizza\u3002 \u5728\u8fd9\u91cc\u56de\u987e\u4e0b\u5de5\u5382\u65b9\u6cd5\u7684\u5b9a\u4e49\uff1a \u4e00\u4e2a\u521b\u5efa\u5bf9\u8c61\u7684\u63a5\u53e3\uff0c\u5b50\u7c7b\u5b9e\u73b0\u8be5\u63a5\u53e3\uff0c\u5b50\u7c7b\u51b3\u5b9a\u5177\u4f53\u521b\u5efa\u54ea\u4e2a\u5bf9\u8c61 \u5728\u8fd9\u91cc\u6211\u4eec\u7684\u786e\u5b9a\u4e49\u4e86\u5de5\u5382\u7684\u63a5\u53e3\uff08PizzaFactory\uff09\uff0c\u7136\u540e\u8ba9\u5b50\u7c7b\uff08NYPizzaFactory\u3001ChicagoPizzaFactory\uff09\u9075\u5faa\u8fd9\u4e2a\u63a5\u53e3\uff0c\u5404\u81ea\u5de5\u5382\u51b3\u5b9a\u5982\u4f55\u521b\u5efa Pizza \u5bf9\u8c61\u3002 \u8ba8\u8bba\uff08\u5982\u679c\u6ca1\u6709\u770b\u4e66\u53ef\u4ee5\u76f4\u63a5\u5ffd\u7565\u6389\u8fd9\u90e8\u5206\u5185\u5bb9\uff09 \u300aHead First \u8bbe\u8ba1\u6a21\u5f0f\u300b\u4e0d\u662f\u5c06\u5de5\u5382\u800c\u662f\u5c06 PizzaStore \u8fdb\u884c\u4e86\u62bd\u8c61\uff0c\u7136\u540e\u5c06\u4e0a\u9762\u5de5\u5382\u7684\u65b9\u6cd5\u5f3a\u884c\u585e\u5230\u5404\u81ea\u7684 PizzaStore \u4e2d\uff1b\u7136\u540e\u53c8\u5c06 OrderPizza \u4e0e CretePizza \u5f3a\u884c\u7ed1\u5b9a\u5230 PizzaStore \u4e2d\uff0c\u867d\u7136\u6700\u540e PizzaStore \u8bbe\u8ba1\u4e3a\u62bd\u8c61\u7c7b\u578b\uff0c\u4f46\u662f\u4f9d\u65e7\u907f\u514d\u4e0d\u4e86\u5728 \u7b80\u5355\u5de5\u5382 \u5e26\u6765\u7684\u95ee\u9898\u3002 \u4f5c\u8005\u5728\u4e66\u4e2d\u63d0\u5230 \u5728\u7b80\u5355\u5de5\u5382\u4e2d\uff0c\u5de5\u5382\u662f\u53e6\u4e00\u4e2a\u7531 PizzaStore \u4f7f\u7528\u7684\u5bf9\u8c61\u3002 -- P135 \u7b2c\u4e8c\u4e2a\u95ee\u9898 \u5b50\u7c7b\u7684\u786e\u770b\u8d77\u6765\u5f88\u50cf\u7b80\u5355\u5de5\u5382\u3002\u7b80\u5355\u5de5\u5382\u628a\u5168\u90e8\u7684\u4e8b\u60c5\uff0c\u5728\u4e00\u4e2a\u5730\u65b9\u90fd\u5904\u7406\u5b8c\u4e86\uff0c\u7136\u800c\u5de5\u5382\u65b9\u6cd5\u5374\u662f\u521b\u5efa\u4e00\u4e2a\u6846\u67b6\uff0c\u8ba9\u5b50\u7c7b\u51b3\u5b9a\u5982\u4f55\u5b9e\u73b0\u3002 --- P135 \u6700\u540e\u4e00\u4e2a\u95ee\u9898 \u5bf9\u4e8e\u4e0a\u9762\u7684\u89e3\u91ca\uff0c\u4e2a\u4eba\u611f\u89c9\u6709\u70b9\u7275\u5f3a\uff0c \u56e0\u6b64\u8fd9\u91cc\u5e76\u4e0d\u91c7\u7528\u4e66\u4e0a\u5185\u5bb9\u91cd\u65b0\u521b\u5efa PizzaStore \u6a21\u5f0f \u3002 \u6b22\u8fce\u8ba8\u8bba\u3002 \u9700\u6c42\u4e09 \u62bd\u8c61\u5de5\u5382-\u91cd\u65b0\u56de\u5230 Pizza \u672c\u8eab \u8fd9\u91cc\u5c06\u4f1a\u8bb2\u4e24\u4e2a\u5b9e\u4f8b\uff1a1. Pizza \u5b9e\u4f8b\uff1b 2. \u5bb6\u5177\u5b9e\u4f8b 3.1 Pizza \u5b9e\u4f8b \u8fd9\u4e2a\u5b9e\u4f8b\u90e8\u5206\u53c2\u8003\u4e66\u672c\u4e0a\u5185\u5bb9 \u901a\u8fc7\u4e0a\u9762\u7684\u5de5\u5382\uff0c\u53ef\u4ee5\u521b\u5efa\u51fa\u4e0d\u540c\u98ce\u5473\u7684 Pizza\uff0c\u4f46\u662f\u5bf9\u4e8e\u540c\u4e00\u79cd Pizza\uff0c\u6bcf\u4e2a\u5730\u533a\u4f7f\u7528\u7684\u914d\u6599\u6709\u53ef\u80fd\u5c31\u4e0d\u4e00\u6837\uff0c\u4e3a\u4e86\u98ce\u5473\u7edf\u4e00\u7eaf\u6b63(NY\u7684Pizza \u9700\u8981\u7528 NY \u7684\u9762\u56e2\u4ee5\u53ca NY \u7684\u9171\u6c41\uff0c\u800c\u4e0d\u80fd\u4f7f\u7528 NY \u7684\u9762\u56e2\u548c Chicago \u7684\u9171\u6c41)\uff0c\u5fc5\u987b\u52a0\u4ee5\u9650\u5236\u3002 \u901a\u8fc7\u4ea7\u751f\u4e00\u4e2a\u6210\u5206\u914d\u65b9\u5de5\u5382\uff0c\u4ea7\u751f\u5bf9\u5e94\u7684\u9762\u56e2\u4ee5\u53ca\u9171\u6c41\u98ce\u5473: class NYDough: Dough { } class NYSauce: Sauce { } class ChicagoDough: Dough { } class ChicagoSauce: Sauce { } /// \u539f\u6599\u5de5\u5382 protocol PizzaIngredientFactory { func makeDough() -> Dough func makeSauce() -> Sauce } class NYPizzaIngredientFactory: PizzaIngredientFactory { func makeDough() -> Dough { return NYDough() } func makeSauce() -> Sauce { return NYSauce() } } class ChicagoPizzaIngredientFactory: PizzaIngredientFactory { func makeDough() -> Dough { return ChicagoDough() } func makeSauce() -> Sauce { return ChicagoSauce() } } \u5728 PizzaFactory \u4ee5\u53ca Pizza\u5b9e\u4f8b\u4e2d /// New York \u62ab\u8428\u5de5\u5382\u65b9\u6cd5\uff0c\u521b\u5efa New York \u98ce\u5473\u7684 Pizza class NYPizzaFactory: PizzaFactory { let pizzaIngredientFactory = NYPizzaIngredientFactory() func createPizza(type: String) -> Pizza? { var pizza: Pizza? = nil if type == \"cheese\" { pizza = NYCheesePizza(ingredientFactory: self.pizzaIngredientFactory) } else if type == \"Greek\" { pizza = NYGreekPizza(ingredientFactory: self.pizzaIngredientFactory) } return pizza } } class NYCheesePizza: Pizza { let ingredientFactory: PizzaIngredientFactory init(ingredientFactory: PizzaIngredientFactory) { self.ingredientFactory = ingredientFactory } func prepare() { debugPrint(\" NYCheese Prepare \") debugPrint(\"using douch: \\(self.ingredientFactory.makeDough())\" ) debugPrint(\"using Sauch: \\(self.ingredientFactory.makeSauce())\" ) } func bake() { debugPrint(\"NYCheese Bake\") } func cut() { debugPrint(\"NYCheese Cut\") } func box() { debugPrint(\"NYCheese Box\") } } class NYGreekPizza: Pizza { let ingredientFactory: PizzaIngredientFactory init(ingredientFactory: PizzaIngredientFactory) { self.ingredientFactory = ingredientFactory } func prepare() { debugPrint(\" NYGreek Prepare \") debugPrint(\"using douch: \\(self.ingredientFactory.makeDough())\" ) debugPrint(\"using Sauch: \\(self.ingredientFactory.makeSauce())\" ) } func bake() { debugPrint(\"NYGreek Bake\") } func cut() { debugPrint(\"NYGreek Cut\") } func box() { debugPrint(\"NYGreek Box\") } } \u5bf9\u5916\u754c\u8c03\u7528\u6765\u8bf4\uff0c\u5e76\u6ca1\u6709\u4ec0\u4e48\u6539\u53d8\uff0c\u53ea\u4e0d\u8fc7\u5185\u90e8\u66f4\u591a\u7684\u9650\u5236\u800c\u5df2 PizzaStore(pizzaFactory: NYPizzaFactory()).orderPizza(type: \"cheese\") PizzaStore(pizzaFactory: ChicagoPizzaFactory()).orderPizza(type: \"cheese\") 3.2 \u5bb6\u5177\u5b9e\u4f8b r\u5982\u679c\u4f60\u8fdb\u884c\u88c5\u4fee\uff0c\u4f60\u80af\u5b9a\u662f\u9700\u8981\u9009\u62e9\u5408\u9002\u7684\u98ce\u683c\uff1a\u4e2d\u5f0f\u3001\u6b27\u7f8e\u7b49\uff0c\u4f60\u80af\u5b9a\u4e0d\u4f1a\u9009\u62e9\u4e2d\u5f0f\u7684\u684c\u5b50\u642d\u914d\u6b27\u5f0f\u7684\u6905\u5b50\u5427\uff0c\u56e0\u6b64\u9700\u8981\u5bf9\u7684\u684c\u5b50\u6905\u5b50\u8fdb\u884c\u9650\u5236\u3002 protocol Table {} protocol Chair {} class ChineseDiningTable: Table {} class ChineseChair: Chair {} class EuropeanDiningTable: Table {} class EuropeanChair: Chair {} protocol FurnitureFactory { func makeTable() -> Table func makeChair() -> Chair } class ChineseFurnitureFactory: FurnitureFactory { func makeTable() -> Table { return ChineseDiningTable() } func makeChair() -> Chair { return ChineseChair() } } class EuropeanFurnitureFactory: FurnitureFactory { func makeTable() -> Table { return EuropeanDiningTable() } func makeChair() -> Chair { return EuropeanChair() } } \u62bd\u8c61\u5de5\u5382\u4e3b\u8981\u662f\u63d0\u4f9b\u4e00\u4e2a\u63a5\u53e3\uff0c\u7528\u4e8e\u521b\u5efa \u4e00\u7cfb\u5217\u76f8\u5173\u6216\u8005\u76f8\u4e92\u4f9d\u8d56 \u7684\u5bf9\u8c61\uff0c\u8fd9\u4e0b\u5e94\u8be5\u7406\u89e3\u4e86\u5427\u3002 \u8ba8\u8bba - \u788e\u788e\u5ff5 \u4e66\u4e2d\u4e00\u76f4\u5728\u5f3a\u8c03 \u9762\u5411\u63a5\u53e3\u7f16\u7a0b\uff0c\u800c\u4e0d\u662f\u9762\u5411\u5b9e\u73b0\u7f16\u7a0b \uff0c \u4f9d\u8d56\u62bd\u8c61\uff0c\u4e0d\u8981\u4f9d\u8d56\u5177\u4f53\uff08\u4f9d\u8d56\u5012\u7f6e\u539f\u5219\uff09 \u3002\u4f46\u8fd9\u6709\u5229\u4e5f\u6709\u5f0a\uff0c\u62bd\u8c61\u51fa\u53bb\u540e\u8fdb\u884c\u4e86\u89e3\u8026\uff0c\u4f46\u662f\u4e5f\u65e0\u6cd5\u5bf9\u5177\u4f53\u5bf9\u8c61\u8fdb\u884c\u989d\u5916\u7279\u6b8a\u5904\u7406\u4e86\uff0c\u8fd9\u4e00\u70b9\u8ddf \u88c5\u9970\u5668 \u4e00\u8282\u6700\u540e\u63d0\u5230\u7684\u534a\u900f\u660e\u88c5\u9970\u5668\u4e00\u6837\u3002","title":"\u521b\u5efa\u578b-\u7b80\u5355\u5de5\u5382\u3001\u5de5\u5382\u65b9\u6cd5\u3001\u62bd\u8c61\u5de5\u5382"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82%E3%80%81%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95%E3%80%81%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82/#_1","text":"\u6807\u7b7e\uff08\u7a7a\u683c\u5206\u9694\uff09\uff1a \u8bbe\u8ba1\u6a21\u5f0f Swift \u7b80\u5355\u5de5\u5382\u3001\u5de5\u5382\u65b9\u6cd5\u3001\u62bd\u8c61\u5de5\u5382 \u9700\u6c42\u4e00\uff1a\u7b80\u5355\u5de5\u5382- Pizza \u5e97\u5f00\u5f20\u4e86 \u9700\u6c42\u4e8c: \u5de5\u5382\u65b9\u6cd5-\u52a0\u76df\u62ab\u8428\u5e97 \u8ba8\u8bba\uff08\u5982\u679c\u6ca1\u6709\u770b\u4e66\u53ef\u4ee5\u76f4\u63a5\u5ffd\u7565\u6389\u8fd9\u90e8\u5206\u5185\u5bb9\uff09 \u9700\u6c42\u4e09 \u62bd\u8c61\u5de5\u5382-\u91cd\u65b0\u56de\u5230 Pizza \u672c\u8eab 3.1 Pizza \u5b9e\u4f8b 3.2 \u5bb6\u5177\u5b9e\u4f8b \u8ba8\u8bba - \u788e\u788e\u5ff5 \u7b80\u5355\u5de5\u5382 \u4e0d\u662f\u4e00\u4e2a\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u800c\u662f\u4e00\u76f4\u7f16\u7801\u4e60\u60ef \u5de5\u5382\u65b9\u6cd5 \u662f\u5b9a\u4e49\u4e00\u4e2a\u521b\u5efa\u5bf9\u8c61\u7684\u63a5\u53e3\uff0c\u5b50\u7c7b\u5b9e\u73b0\u8be5\u63a5\u53e3\uff0c\u5b50\u7c7b\u51b3\u5b9a\u5177\u4f53\u521b\u5efa\u54ea\u4e2a\u5bf9\u8c61\u3002 \u62bd\u8c61\u5de5\u5382 \u63d0\u4f9b\u4e00\u4e2a\u63a5\u53e3\uff0c\u7528\u4e8e\u521b\u5efa \u4e00\u7cfb\u5217\u76f8\u5173\u6216\u8005\u76f8\u4e92\u4f9d\u8d56 \u7684\u5bf9\u8c61\uff0c\u800c\u4e0d\u9700\u8981\u6307\u5b9a\u4ed6\u4eec\u7684\u5177\u4f53\u7c7b\u3002 \u7b80\u5355\u5de5\u5382->\u5de5\u5382\u65b9\u6cd5->\u62bd\u8c61\u5de5\u5382\u7c7b\u4f3c\u4e00\u79cd\u5c42\u6b21\u9012\u8fdb\uff0c\u5c42\u5c42\u62bd\u8c61\u7684\u8fc7\u7a0b\u3002\u4e0b\u9762\u4ee5\u5b9e\u9645\u4f8b\u5b50\u6765\u8bf4\u660e; \u9700\u6c42\u5185\u5bb9\u4f9d\u636e \u300aHeadFirst \u8bbe\u8ba1\u6a21\u5f0f\u300b \u7b2c\u4e09\u7ae0","title":"\u7b80\u5355\u5de5\u5382\u3001\u5de5\u5382\u65b9\u6cd5\u3001\u62bd\u8c61\u5de5\u5382"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82%E3%80%81%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95%E3%80%81%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82/#-pizza","text":"Pizza \u5e97\u5f00\u5f20\u4e86\uff0c\u5e97\u91cc\u552e\u5356\u5f88\u591a\u79cd\u62ab\u8428\uff0c\u62ab\u8428\u7684\u5236\u4f5c\u6d41\u7a0b\u90fd\u4e00\u6837\u7684:\u51c6\u5907(prepare)\u3001\u70d8\u70e4\uff08bake\uff09\u3001\u5207\u7247\uff08cut\uff09\u3001\u6253\u5305\uff08box\uff09\u3002 protocol Pizza { func prepare() func bake() func cut() func box() } class PizzaStore { func orderPizza(type: String) -> Pizza? { var pizza: Pizza? = nil if type == \"cheese\" { pizza = CheesePizza() } else if type == \"Greek\" { pizza = GreekPizza() } pizza?.prepare() pizza?.bake() pizza?.cut() pizza?.box() return pizza } } class CheesePizza: Pizza { } class GreekPizza: Pizza { } \u8c03\u7528: PizzaStore().orderPizza(type: \"cheese\") \u4f7f\u7528\u534f\u8bae Pizza \u6765\u5b9a\u4e49\u62ab\u8428\u7c7b\u578b\uff0c\u5404\u79cd\u5177\u4f53\u7684\u62ab\u8428\uff08CheesePizza\u3001GreekPizza\uff09\u9075\u5faa Pizza \u534f\u8bae\uff0c\u7528\u6237\u901a\u8fc7 PizzaStore \u7684 orderPizza \u9884\u5b9a Pizza\uff0c\u901a\u8fc7\u53c2\u6570 type \u6765\u533a\u5206\u4e0d\u4e00\u6837\u7684 Pizza \u7c7b\u578b\u3002 \u5176\u4e2d\u901a\u8fc7 type \u6765\u5224\u65ad\u5177\u4f53\u7684\u7c7b\u578b\u90e8\u5206\uff1a if type == \"cheese\" { pizza = CheesePizza() } else if type == \"Greek\" { pizza = GreekPizza() } \u5f53 Pizza \u7c7b\u578b\u6dfb\u52a0\u6216\u8005\u5220\u9664\u7684\u65f6\u5019\uff0c\u9700\u8981\u589e\u52a0\u6216\u8005\u5220\u9664\u8fd9\u90e8\u5206\u4ee3\u7801\uff0c\u8fd9\u8fdd\u53cd\u4e86 \u5bf9\u4fee\u6539\u5173\u95ed\u539f\u5219 \u3002 \u4f7f\u7528\u7b80\u5355\u5de5\u5382\u4fee\u6539: protocol PizzaFactory { func createPizza(type: String) -> Pizza? } class SimplePizzaFactory: PizzaFactory { func createPizza(type: String) -> Pizza? { var pizza: Pizza? = nil if type == \"cheese\" { pizza = CheesePizza() } else if type == \"Greek\" { pizza = GreekPizza() } return pizza } } class PizzaStore { let pizzaFactory: PizzaFactory init(pizzaFactory: PizzaFactory) { self.pizzaFactory = pizzaFactory } func orderPizza(type: String) -> Pizza? { let pizza: Pizza? = self.pizzaFactory.createPizza(type: type) pizza?.prepare() pizza?.bake() pizza?.cut() pizza?.box() return pizza } } \u8c03\u7528 PizzaStore(pizzaFactory: SimplePizzaFactory()).orderPizza(type: \"cheese\") \u7b80\u5355\u5de5\u5382\u628a\u6839\u636e Type \u521b\u5efa Pizza \u7684\u53d8\u5316\u90e8\u5206\u653e\u5230 PizzaFactory \u4e2d\u3002PizzaFactory \u4e13\u804c\u521b\u5efa Pizza\u3002 \u7b80\u5355\u5de5\u5382\u770b\u4f3c\u662f\u5c06\u4e00\u4e2a\u5185\u5bb9\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u5bf9\u8c61\u4e2d\uff0c\u4f46\u662f\u5982\u679c\u521b\u5efa\u4ee3\u7801\u7684\u590d\u7528\uff0c\u4f18\u52bf\u5c31\u660e\u663e\u3002(PS: \u5b9e\u9645 \u5f00\u53d1\u4e2d\uff0c\u4e00\u822c\u4e5f\u4e0d\u4f1a\u8fd9\u4e48\u505a\uff0c\u56e0\u4e3a\u8fd9\u53ef\u80fd\u4f1a\u5f15\u5165\u4e00\u4e2a\u65b0\u7684\u7c7b\u6587\u4ef6)","title":"\u9700\u6c42\u4e00\uff1a\u7b80\u5355\u5de5\u5382- Pizza \u5e97\u5f00\u5f20\u4e86"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82%E3%80%81%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95%E3%80%81%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82/#-","text":"\u62ab\u8428\u5e97\u6269\u5c55\u5f88\u5feb\uff0c\u73b0\u5728\u5728\u4e0d\u540c\u7684\u5730\u65b9\u90fd\u6709\u4e0d\u540c\u7684\u52a0\u76df\u5e97\uff0c\u4f46\u662f\u8fd9\u4e5f\u5e26\u6765\u4e00\u4e2a\u95ee\u9898\uff0c\u6bcf\u4e2a\u5730\u533a\u7684\u62ab\u8428\u7c7b\u578b\u53e3\u5473\u4e0d\u4e00\u81f4\u3002 \u6700\u7b80\u5355\u7684\u505a\u6cd5\u662f\u521b\u5efa\u4e0d\u540c\u5730\u533a\u7684 Pizza \u5de5\u5382\uff0c\u521b\u5efa\u5404\u81ea\u98ce\u5473 Pizza /// New York \u62ab\u8428\u5de5\u5382\u65b9\u6cd5\uff0c\u521b\u5efa New York \u98ce\u5473\u7684 Pizza class NYPizzaFactory: PizzaFactory { func createPizza(type: String) -> Pizza? { var pizza: Pizza? = nil if type == \"cheese\" { pizza = NYCheesePizza() } else if type == \"Greek\" { pizza = NYGreekPizza() } return pizza } } /// Chicago \u62ab\u8428\u5de5\u5382\u65b9\u6cd5\uff0c\u521b\u5efa Chicago \u98ce\u5473\u7684 Pizza class ChicagoPizzaFactory: PizzaFactory { func createPizza(type: String) -> Pizza? { var pizza: Pizza? = nil if type == \"cheese\" { pizza = ChicagoCheesePizza() } else if type == \"Greek\" { pizza = ChicagoGreekPizza() } return pizza } } class NYCheesePizza: Pizza { } class NYGreekPizza: Pizza { } class ChicagoCheesePizza: Pizza { } class ChicagoGreekPizza: Pizza { } \u8c03\u7528 PizzaStore(pizzaFactory: NYPizzaFactory()).orderPizza(type: \"cheese\") PizzaStore(pizzaFactory: ChicagoPizzaFactory()).orderPizza(type: \"cheese\") \u4e0a\u9762\u7684\u505a\u6cd5\u662f\u5bf9\u6bcf\u4e2a\u5730\u533a\u751f\u6210\u5404\u81ea\u7684\u5de5\u5382\uff0c\u7136\u540e\u7531\u5404\u81ea\u7684\u5de5\u5382\u751f\u6210\u5404\u81ea\u98ce\u5473\u7684 Pizza\u3002 \u5728\u8fd9\u91cc\u56de\u987e\u4e0b\u5de5\u5382\u65b9\u6cd5\u7684\u5b9a\u4e49\uff1a \u4e00\u4e2a\u521b\u5efa\u5bf9\u8c61\u7684\u63a5\u53e3\uff0c\u5b50\u7c7b\u5b9e\u73b0\u8be5\u63a5\u53e3\uff0c\u5b50\u7c7b\u51b3\u5b9a\u5177\u4f53\u521b\u5efa\u54ea\u4e2a\u5bf9\u8c61 \u5728\u8fd9\u91cc\u6211\u4eec\u7684\u786e\u5b9a\u4e49\u4e86\u5de5\u5382\u7684\u63a5\u53e3\uff08PizzaFactory\uff09\uff0c\u7136\u540e\u8ba9\u5b50\u7c7b\uff08NYPizzaFactory\u3001ChicagoPizzaFactory\uff09\u9075\u5faa\u8fd9\u4e2a\u63a5\u53e3\uff0c\u5404\u81ea\u5de5\u5382\u51b3\u5b9a\u5982\u4f55\u521b\u5efa Pizza \u5bf9\u8c61\u3002","title":"\u9700\u6c42\u4e8c: \u5de5\u5382\u65b9\u6cd5-\u52a0\u76df\u62ab\u8428\u5e97"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82%E3%80%81%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95%E3%80%81%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82/#_2","text":"\u300aHead First \u8bbe\u8ba1\u6a21\u5f0f\u300b\u4e0d\u662f\u5c06\u5de5\u5382\u800c\u662f\u5c06 PizzaStore \u8fdb\u884c\u4e86\u62bd\u8c61\uff0c\u7136\u540e\u5c06\u4e0a\u9762\u5de5\u5382\u7684\u65b9\u6cd5\u5f3a\u884c\u585e\u5230\u5404\u81ea\u7684 PizzaStore \u4e2d\uff1b\u7136\u540e\u53c8\u5c06 OrderPizza \u4e0e CretePizza \u5f3a\u884c\u7ed1\u5b9a\u5230 PizzaStore \u4e2d\uff0c\u867d\u7136\u6700\u540e PizzaStore \u8bbe\u8ba1\u4e3a\u62bd\u8c61\u7c7b\u578b\uff0c\u4f46\u662f\u4f9d\u65e7\u907f\u514d\u4e0d\u4e86\u5728 \u7b80\u5355\u5de5\u5382 \u5e26\u6765\u7684\u95ee\u9898\u3002 \u4f5c\u8005\u5728\u4e66\u4e2d\u63d0\u5230 \u5728\u7b80\u5355\u5de5\u5382\u4e2d\uff0c\u5de5\u5382\u662f\u53e6\u4e00\u4e2a\u7531 PizzaStore \u4f7f\u7528\u7684\u5bf9\u8c61\u3002 -- P135 \u7b2c\u4e8c\u4e2a\u95ee\u9898 \u5b50\u7c7b\u7684\u786e\u770b\u8d77\u6765\u5f88\u50cf\u7b80\u5355\u5de5\u5382\u3002\u7b80\u5355\u5de5\u5382\u628a\u5168\u90e8\u7684\u4e8b\u60c5\uff0c\u5728\u4e00\u4e2a\u5730\u65b9\u90fd\u5904\u7406\u5b8c\u4e86\uff0c\u7136\u800c\u5de5\u5382\u65b9\u6cd5\u5374\u662f\u521b\u5efa\u4e00\u4e2a\u6846\u67b6\uff0c\u8ba9\u5b50\u7c7b\u51b3\u5b9a\u5982\u4f55\u5b9e\u73b0\u3002 --- P135 \u6700\u540e\u4e00\u4e2a\u95ee\u9898 \u5bf9\u4e8e\u4e0a\u9762\u7684\u89e3\u91ca\uff0c\u4e2a\u4eba\u611f\u89c9\u6709\u70b9\u7275\u5f3a\uff0c \u56e0\u6b64\u8fd9\u91cc\u5e76\u4e0d\u91c7\u7528\u4e66\u4e0a\u5185\u5bb9\u91cd\u65b0\u521b\u5efa PizzaStore \u6a21\u5f0f \u3002 \u6b22\u8fce\u8ba8\u8bba\u3002","title":"\u8ba8\u8bba\uff08\u5982\u679c\u6ca1\u6709\u770b\u4e66\u53ef\u4ee5\u76f4\u63a5\u5ffd\u7565\u6389\u8fd9\u90e8\u5206\u5185\u5bb9\uff09"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82%E3%80%81%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95%E3%80%81%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82/#-pizza_1","text":"\u8fd9\u91cc\u5c06\u4f1a\u8bb2\u4e24\u4e2a\u5b9e\u4f8b\uff1a1. Pizza \u5b9e\u4f8b\uff1b 2. \u5bb6\u5177\u5b9e\u4f8b","title":"\u9700\u6c42\u4e09 \u62bd\u8c61\u5de5\u5382-\u91cd\u65b0\u56de\u5230 Pizza \u672c\u8eab"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82%E3%80%81%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95%E3%80%81%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82/#31-pizza","text":"\u8fd9\u4e2a\u5b9e\u4f8b\u90e8\u5206\u53c2\u8003\u4e66\u672c\u4e0a\u5185\u5bb9 \u901a\u8fc7\u4e0a\u9762\u7684\u5de5\u5382\uff0c\u53ef\u4ee5\u521b\u5efa\u51fa\u4e0d\u540c\u98ce\u5473\u7684 Pizza\uff0c\u4f46\u662f\u5bf9\u4e8e\u540c\u4e00\u79cd Pizza\uff0c\u6bcf\u4e2a\u5730\u533a\u4f7f\u7528\u7684\u914d\u6599\u6709\u53ef\u80fd\u5c31\u4e0d\u4e00\u6837\uff0c\u4e3a\u4e86\u98ce\u5473\u7edf\u4e00\u7eaf\u6b63(NY\u7684Pizza \u9700\u8981\u7528 NY \u7684\u9762\u56e2\u4ee5\u53ca NY \u7684\u9171\u6c41\uff0c\u800c\u4e0d\u80fd\u4f7f\u7528 NY \u7684\u9762\u56e2\u548c Chicago \u7684\u9171\u6c41)\uff0c\u5fc5\u987b\u52a0\u4ee5\u9650\u5236\u3002 \u901a\u8fc7\u4ea7\u751f\u4e00\u4e2a\u6210\u5206\u914d\u65b9\u5de5\u5382\uff0c\u4ea7\u751f\u5bf9\u5e94\u7684\u9762\u56e2\u4ee5\u53ca\u9171\u6c41\u98ce\u5473: class NYDough: Dough { } class NYSauce: Sauce { } class ChicagoDough: Dough { } class ChicagoSauce: Sauce { } /// \u539f\u6599\u5de5\u5382 protocol PizzaIngredientFactory { func makeDough() -> Dough func makeSauce() -> Sauce } class NYPizzaIngredientFactory: PizzaIngredientFactory { func makeDough() -> Dough { return NYDough() } func makeSauce() -> Sauce { return NYSauce() } } class ChicagoPizzaIngredientFactory: PizzaIngredientFactory { func makeDough() -> Dough { return ChicagoDough() } func makeSauce() -> Sauce { return ChicagoSauce() } } \u5728 PizzaFactory \u4ee5\u53ca Pizza\u5b9e\u4f8b\u4e2d /// New York \u62ab\u8428\u5de5\u5382\u65b9\u6cd5\uff0c\u521b\u5efa New York \u98ce\u5473\u7684 Pizza class NYPizzaFactory: PizzaFactory { let pizzaIngredientFactory = NYPizzaIngredientFactory() func createPizza(type: String) -> Pizza? { var pizza: Pizza? = nil if type == \"cheese\" { pizza = NYCheesePizza(ingredientFactory: self.pizzaIngredientFactory) } else if type == \"Greek\" { pizza = NYGreekPizza(ingredientFactory: self.pizzaIngredientFactory) } return pizza } } class NYCheesePizza: Pizza { let ingredientFactory: PizzaIngredientFactory init(ingredientFactory: PizzaIngredientFactory) { self.ingredientFactory = ingredientFactory } func prepare() { debugPrint(\" NYCheese Prepare \") debugPrint(\"using douch: \\(self.ingredientFactory.makeDough())\" ) debugPrint(\"using Sauch: \\(self.ingredientFactory.makeSauce())\" ) } func bake() { debugPrint(\"NYCheese Bake\") } func cut() { debugPrint(\"NYCheese Cut\") } func box() { debugPrint(\"NYCheese Box\") } } class NYGreekPizza: Pizza { let ingredientFactory: PizzaIngredientFactory init(ingredientFactory: PizzaIngredientFactory) { self.ingredientFactory = ingredientFactory } func prepare() { debugPrint(\" NYGreek Prepare \") debugPrint(\"using douch: \\(self.ingredientFactory.makeDough())\" ) debugPrint(\"using Sauch: \\(self.ingredientFactory.makeSauce())\" ) } func bake() { debugPrint(\"NYGreek Bake\") } func cut() { debugPrint(\"NYGreek Cut\") } func box() { debugPrint(\"NYGreek Box\") } } \u5bf9\u5916\u754c\u8c03\u7528\u6765\u8bf4\uff0c\u5e76\u6ca1\u6709\u4ec0\u4e48\u6539\u53d8\uff0c\u53ea\u4e0d\u8fc7\u5185\u90e8\u66f4\u591a\u7684\u9650\u5236\u800c\u5df2 PizzaStore(pizzaFactory: NYPizzaFactory()).orderPizza(type: \"cheese\") PizzaStore(pizzaFactory: ChicagoPizzaFactory()).orderPizza(type: \"cheese\")","title":"3.1 Pizza \u5b9e\u4f8b"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82%E3%80%81%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95%E3%80%81%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82/#32","text":"r\u5982\u679c\u4f60\u8fdb\u884c\u88c5\u4fee\uff0c\u4f60\u80af\u5b9a\u662f\u9700\u8981\u9009\u62e9\u5408\u9002\u7684\u98ce\u683c\uff1a\u4e2d\u5f0f\u3001\u6b27\u7f8e\u7b49\uff0c\u4f60\u80af\u5b9a\u4e0d\u4f1a\u9009\u62e9\u4e2d\u5f0f\u7684\u684c\u5b50\u642d\u914d\u6b27\u5f0f\u7684\u6905\u5b50\u5427\uff0c\u56e0\u6b64\u9700\u8981\u5bf9\u7684\u684c\u5b50\u6905\u5b50\u8fdb\u884c\u9650\u5236\u3002 protocol Table {} protocol Chair {} class ChineseDiningTable: Table {} class ChineseChair: Chair {} class EuropeanDiningTable: Table {} class EuropeanChair: Chair {} protocol FurnitureFactory { func makeTable() -> Table func makeChair() -> Chair } class ChineseFurnitureFactory: FurnitureFactory { func makeTable() -> Table { return ChineseDiningTable() } func makeChair() -> Chair { return ChineseChair() } } class EuropeanFurnitureFactory: FurnitureFactory { func makeTable() -> Table { return EuropeanDiningTable() } func makeChair() -> Chair { return EuropeanChair() } } \u62bd\u8c61\u5de5\u5382\u4e3b\u8981\u662f\u63d0\u4f9b\u4e00\u4e2a\u63a5\u53e3\uff0c\u7528\u4e8e\u521b\u5efa \u4e00\u7cfb\u5217\u76f8\u5173\u6216\u8005\u76f8\u4e92\u4f9d\u8d56 \u7684\u5bf9\u8c61\uff0c\u8fd9\u4e0b\u5e94\u8be5\u7406\u89e3\u4e86\u5427\u3002","title":"3.2 \u5bb6\u5177\u5b9e\u4f8b"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82%E3%80%81%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95%E3%80%81%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82/#-_1","text":"\u4e66\u4e2d\u4e00\u76f4\u5728\u5f3a\u8c03 \u9762\u5411\u63a5\u53e3\u7f16\u7a0b\uff0c\u800c\u4e0d\u662f\u9762\u5411\u5b9e\u73b0\u7f16\u7a0b \uff0c \u4f9d\u8d56\u62bd\u8c61\uff0c\u4e0d\u8981\u4f9d\u8d56\u5177\u4f53\uff08\u4f9d\u8d56\u5012\u7f6e\u539f\u5219\uff09 \u3002\u4f46\u8fd9\u6709\u5229\u4e5f\u6709\u5f0a\uff0c\u62bd\u8c61\u51fa\u53bb\u540e\u8fdb\u884c\u4e86\u89e3\u8026\uff0c\u4f46\u662f\u4e5f\u65e0\u6cd5\u5bf9\u5177\u4f53\u5bf9\u8c61\u8fdb\u884c\u989d\u5916\u7279\u6b8a\u5904\u7406\u4e86\uff0c\u8fd9\u4e00\u70b9\u8ddf \u88c5\u9970\u5668 \u4e00\u8282\u6700\u540e\u63d0\u5230\u7684\u534a\u900f\u660e\u88c5\u9970\u5668\u4e00\u6837\u3002","title":"\u8ba8\u8bba - \u788e\u788e\u5ff5"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A3%85%E9%A5%B0%E5%99%A8%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/","text":"\u88c5\u9970\u5668\u8bbe\u8ba1\u6a21\u5f0f \u6807\u7b7e\uff08\u7a7a\u683c\u5206\u9694\uff09\uff1a \u8bbe\u8ba1\u6a21\u5f0f Swift \u88c5\u9970\u5668\u8bbe\u8ba1\u6a21\u5f0f \u9700\u6c42\uff1a \u7ed9\u661f\u5df4\u5179\u8bbe\u8ba1\u8ba2\u5355\u7cfb\u7edf \u88c5\u9970\u5668\u8bbe\u8ba1\u6a21\u5f0f\u91cd\u6784\u7cfb\u7edf \u88c5\u9970\u5668\u7c7b\u56fe \u534a\u900f\u660e\u88c5\u9970\u5668 \u4f18\u7f3a\u70b9\uff1a \u53c2\u8003\u94fe\u63a5\uff1a \u9700\u6c42\u5185\u5bb9\u4f9d\u636e \u300aHeadFirst \u8bbe\u8ba1\u6a21\u5f0f\u300b \u7b2c\u4e09\u7ae0 \u88c5\u9970\u5668\u662f \u52a8\u6001 \u5730\u5f80\u4e00\u4e2a\u7c7b\u522b\u4e2d\u6dfb\u52a0\u65b0\u7684\u884c\u4e3a\u7684\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u662f\u4e00\u79cd\u6bd4\u7ee7\u627f \u66f4\u6709\u5f39\u6027 \u7684\u66ff\u4ee3\u65b9\u6848\u3002 \u7ef4\u57fa\u767e\u79d1: \u901a\u8fc7\u4f7f\u7528\u4fee\u9970\u6a21\u5f0f\uff0c\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u6269\u5145\u4e00\u4e2a\u7c7b\u522b\u7684\u529f\u80fd\u3002\u539f\u7406\u662f\uff1a\u589e\u52a0\u4e00\u4e2a\u4fee\u9970\u7c7b\u5305\u88f9\u539f\u6765\u7684\u7c7b\u522b\uff0c\u5305\u88f9\u7684\u65b9\u5f0f\u662f\u5728\u4fee\u9970\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\u5c06\u539f\u6765\u7684\u7c7b\u4ee5\u53c2\u6570\u7684\u5f62\u5f0f\u4f20\u5165\u3002\u88c5\u9970\u7c7b\u5b9e\u73b0\u65b0\u7684\u529f\u80fd\uff0c\u4f46\u662f\uff0c\u5728\u4e0d\u9700\u8981\u7528\u5230\u65b0\u529f\u80fd\u7684\u5730\u65b9\uff0c\u5b83\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u539f\u6765\u7684\u7c7b\u522b\u4e2d\u7684\u65b9\u6cd5\u3002\u4fee\u9970\u7c7b\u5fc5\u987b\u548c\u539f\u6765\u7684\u7c7b\u522b\u6709\u76f8\u540c\u7684\u63a5\u53e3\u3002 \u4fee\u9970\u6a21\u5f0f\u662f\u7c7b\u522b\u7ee7\u627f\u7684\u53e6\u5916\u4e00\u79cd\u9009\u62e9\u3002\u7c7b\u7ee7\u627f\u5728\u7f16\u8bd1\u65f6\u5019\u589e\u52a0\u884c\u4e3a\uff0c\u800c\u88c5\u9970\u6a21\u5f0f\u662f\u5728\u8fd0\u884c\u65f6\u589e\u52a0\u884c\u4e3a\u3002 \u9700\u6c42\uff1a \u7ed9\u661f\u5df4\u5179\u8bbe\u8ba1\u8ba2\u5355\u7cfb\u7edf \u661f\u5df4\u5179\u662f\u5feb\u901f\u6269\u5f20\u7684\u5496\u5561\u8fde\u9501\u5e97\uff0c\u4e3a\u4e86\u7ba1\u7406\u76ee\u7684\uff0c\u4ed6\u4eec\u9700\u8981\u8bbe\u8ba1\u81ea\u5df1\u7684\u8ba2\u5355\u7cfb\u7edf\u3002 /// \u996e\u6599\u7cfb\u7edf\uff08\u8d85\u7c7b\uff09 class Beverage { /// \u63cf\u8ff0\u4fe1\u606f var description: String { return \"\" } /// \u8fd4\u56de\u6bcf\u79cd\u996e\u6599\u7684\u4ef7\u683c\u4fe1\u606f func cost() -> Double { return 0.0 } } /// \u5b50\u7c7b\u7ee7\u627f\u91cd\u5199\u5bf9\u5e94\u65b9\u6cd5 class HouseBlend: Beverage { override var description: String { return \"House Blend\" } override func cost() -> Double { return 10.0 } } class DarkRoast: Beverage { override var description: String { return \"Dark Roast\" } override func cost() -> Double { return 20.0 } } \u4e0a\u9762\u8fd9\u79cd\u7ee7\u627f\u7684\u65b9\u5f0f\u5bf9\u4e8e\u7b80\u5355\u7cfb\u7edf\u6765\u8bf4\u53ef\u884c\uff0c\u4f46\u662f\u5bf9\u4e8e\u590d\u6742\u7684\u996e\u6599\u7cfb\u7edf\u6765\u8bf4\uff0c\u6bcf\u79cd\u5496\u5561\u5fc5\u987b\u8981\u8003\u8651\u5230\u5404\u79cd\u8c03\u6599\uff1a\u4f8b\u5982\u84b8\u5976\uff08Steamed Milk\uff09\u3001\u8c46\u6d46\uff08Soy\uff09\u3001\u6469\u5361\uff08Mocha\uff09\u7b49\uff0c\u56e0\u6b64\u9700\u8981\u8bbe\u8ba1\u4e0d\u4e00\u6837\u7684\u5b50\u7c7b\uff0c\u5982 HouseBlendWithSteamedMilk \u3001 HouseBlendWithSteamedMilkMocha \u7b49\u5b50\u7c7b\uff0c\u7136\u540e\u5b50\u7c7b\u91cd\u5199\u5bf9\u5e94\u7684\u8ba1\u7b97\u65b9\u5f0f\u3002\u8fd9\u79cd\u65b9\u5f0f\u5e26\u6765\u4e24\u4e2a\u4e25\u91cd\u7684\u95ee\u9898\uff1a 1. \u7c7b\u7206\u70b8\uff1a\u6bcf\u65b0\u589e\u4e00\u79cd\u8c03\u6599\u9700\u8981\u589e\u52a0\u51e0\u5341\u4e0a\u767e\u79cd\u5b50\u7c7b\uff1b 2. \u5f53\u67d0\u79cd\u8c03\u6599\u4ef7\u683c\u4e0a\u6da8\uff0c\u9700\u8981\u9700\u6539\u5bf9\u5e94\u7684\u5b50\u7c7b\u7684\u4ef7\u683c\u3002 \u8fd9\u4e25\u91cd\u8fdd\u53cd\u4e86 \u9488\u5bf9\u63a5\u53e3\u7f16\u7a0b \u4ee5\u53ca \u591a\u7528\u7ec4\u5408\uff0c\u5c11\u7528\u7ee7\u627f\u7684 \u7684\u8bbe\u8ba1\u539f\u5219\u3002\u5f53\u7136\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u6211\u4e5f\u76f8\u4fe1\u4e0d\u4f1a\u6709\u4eba\u8fd9\u6837\u8fdb\u884c\u8bbe\u8ba1\u3002 \u90a3\u5982\u4f55\u6765\u8bbe\u8ba1\u5bf9\u5e94\u7684\u7cfb\u7edf\u5462\uff1f \u65b9\u6848\u4e00: \u5c06\u6bcf\u4e00\u79cd\u7684\u8c03\u6599\u653e\u5230\u5404\u81ea\u7684\u996e\u6599\u4e2d\uff0c\u4f8b\u5982 HouseBlend \u6709\u84b8\u5976\uff08Steamed Milk\uff09\u548c\u6469\u5361\uff08Mocha\uff09: class DarkRoast: Beverage { /// \u662f\u5426\u6709\u8c03\u6599 var hasSteamedMilk: Bool = false var hasMocha: Bool = false override var description: String { return \"DarkRoast\" } /// \u91cd\u5199\u4e86\u4ef7\u683c\uff0c\u8003\u8651\u4e86\u8c03\u6599\u4ef7\u683c override func cost() -> Double { var cost = 10.0 if hasSteamedMilk { cost += 5.0 } if hasMocha { cost += 1.0 } return cost } } \u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u56e0\u4e3a\u8c03\u6599\u800c\u6269\u5c55\u7684\u5b50\u7c7b\uff0c\u4f46\u8fd9\u4e5f\u6709\u4e2a\u707e\u96be\uff0c\u5f53\u67d0\u79cd\u8c03\u6599\u4ef7\u683c\u53d8\u5316\uff0c\u8fd9\u4e2a\u91cc\u9762\u4e5f\u9700\u8981\u8ddf\u7740\u53d8\u5316\uff0c\u65e0\u7a77\u65e0\u5c3d\u3002 \u65b9\u6848\u4e8c\uff1a \u5c06\u5404\u79cd\u8c03\u6599\u653e\u5230\u57fa\u7c7b Beverage \u4e2d class Beverage { /// \u8c03\u6599\u4efd\u6570 var steamedMilk: Double = 0 var mocha: Double = 0 var milk: Double = 0 func cost() -> Double { var cost = 0.0 cost += ( steamedMilk * 5.0 ) cost += ( mocha * 1.0 ) cost += ( milk * 2.0 ) return 0.0 } } /// \u5b50\u7c7b\u7ee7\u627f\u91cd\u5199\u5bf9\u5e94\u65b9\u6cd5 class HouseBlend: Beverage { override func cost() -> Double { var cost = super.cost() cost += 10.0 return cost } } \u901a\u8fc7\u7236\u7c7b Beverage \u5c06\u6240\u6709\u7684\u8c03\u6599\u4efd\u6570\u653e\u5165\u5176\u4e2d\uff0c\u7136\u540e\u8ba1\u7b97\u4ef7\u683c\u3002\u5b50\u7c7b\u91cd\u5199 cost() \u65b9\u6cd5\u3002 \u4f46\u8fd9\u4e5f\u4f1a\u5b58\u5728\u51e0\u4e2a\u95ee\u9898\uff1a 1. \u5982\u679c\u67d0\u79cd\u8c03\u6599\u4ef7\u683c\u6539\u53d8\u540e\uff0c\u6211\u4eec\u9700\u8981\u66f4\u6539 Beverage \u7684\u8ba1\u7b97\u903b\u8f91\uff1b--- \u8fdd\u53cd\u5f00\u95ed\u539f\u5219 2. \u5982\u679c\u51fa\u73b0\u65b0\u7684\u8c03\u6599\u6216\u8005\u5220\u9664\u67d0\u79cd\u8c03\u6599\uff0c\u9700\u8981\u66f4\u6539 Beverage \u4ee5\u53ca\u5bf9\u5e94\u7684\u8ba1\u7b97\u903b\u8f91\u3002-- \u8fdd\u53cd\u5f00\u95ed\u539f\u5219 3. \u5bf9\u4e8e\u65b0\u7684\u996e\u6599\u67d0\u4e9b\u8c03\u6599\u5e76\u4e0d\u9002\u5408\uff0c \u7ee7\u627f\u4f1a\u8ba9\u5b50\u7c7b\u62e5\u6709\u4e00\u4e9b\u4e0d\u9002\u5408\u81ea\u5df1\u7684\u884c\u4e3a\u5c5e\u6027\u3002 \u5982\u8336\u91cc\u9762\u52a0\u5976\u6ce1\u3002 \u88c5\u9970\u5668\u8bbe\u8ba1\u6a21\u5f0f\u91cd\u6784\u7cfb\u7edf \u901a\u8fc7\u4e0a\u56fe\u53ef\u4ee5\u770b\u5230\u88c5\u9970\u5668\u529f\u80fd \u4ee5 DarkRoast \u4e3a\u5bf9\u8c61\u5f00\u59cb\uff1b \u7528\u6237\u5148\u8981\u6469\u5361\uff08Mocha\uff09\uff0c\u7136\u540e\u4f7f\u7528 Mocha \u5c06 DarkRoast \u88c5\u9970\u8d77\u6765 \u7528\u6237\u60f3\u8981\u5976\u6ce1\uff08Whip\uff09\uff0c\u4f7f\u7528 Whip \u5c06 Mocha \u88c5\u9970\u8d77\u6765 \u5f53\u8ba1\u7b97\u4ef7\u683c\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u8ba1\u7b97 Whip \u7684\u4ef7\u683c\uff0c\u7136\u540e\u9012\u5f52\u8ba1\u7b97\u5185\u90e8\u7684 Mocha\u3001DarkRoast \u7684\u4ef7\u683c\u3002 protocol Beverage { func cost() -> Double } class DarkRoast: Beverage { func cost() -> Double { return 20.0 } } protocol CondimentDecorator: Beverage {} class Mocha: CondimentDecorator { var beverage: Beverage init(beverage: Beverage) { self.beverage = beverage } func cost() -> Double { return 1.0 + self.beverage.cost() } } class Whip: CondimentDecorator { var beverage: Beverage init(beverage: Beverage) { self.beverage = beverage } func cost() -> Double { return 2.0 + self.beverage.cost() } } \u8c03\u7528\u5730\u65b9\uff1a /// \u4f7f\u7528\u8d85\u7c7b Beverage var beverage: Beverage = DarkRoast() beverage = Mocha(beverage: beverage) beverage = Whip(beverage: beverage) print(beverage.cost()) \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u76f4\u63a5\u5c06 Beverage \u548c CondimentDecorator \u8bbe\u8ba1\u4e3a\u63a5\u53e3\uff08\u9762\u5411\u63a5\u53e3\u7f16\u7a0b\uff09\u3002\u5bf9\u7528\u6237\u6765\u8bf4\uff0c\u4f7f\u7528\u88c5\u9970\u8005\uff08Mocha \u548c Whip\uff09\u66ff\u4ee3\u88ab\u88c5\u9970\u8005\uff08DarkRoast\uff09\u662f\u65e0\u611f\u7684\uff0c \u56e0\u4e3a\u88c5\u9970\u8005\u548c\u88ab\u88c5\u9970\u5bf9\u8c61\u6709\u76f8\u540c\u7684\u7c7b\u578b \u3002\u8fd9\u6837\u8fbe\u5230\u4e86 \u5728\u4e0d\u4fee\u6539\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\uff0c\u5bf9\u539f\u6709\u5bf9\u8c61\uff08Beverage\uff09\u8fdb\u884c\u529f\u80fd\u7684\u6269\u5c55\u3002 \u88c5\u9970\u5668\u7c7b\u56fe \u6ce8\u610f\uff1a\u88c5\u9970\u8005\u4e0e\u88ab\u88c5\u9970\u8005\u6709\u76f8\u540c\u7684\u7c7b\u578b\u5373\u53ef \u56fe\u6765\u81ea\u7f51\u7edc \u534a\u900f\u660e\u88c5\u9970\u5668 \u6807\u51c6\u88c5\u9970\u5668\u662f\u5728\u4e0d\u6539\u53d8\u539f\u6709\u63a5\u53e3\u60c5\u51b5\u4e0b\u5bf9\u5176\u8fdb\u884c\u529f\u80fd\u6269\u5c55\uff0c\u8fd9\u6837\u53ef\u4ee5\u968f\u65f6\u4f7f\u7528\u88c5\u9970\u8005\u66ff\u6362\u88ab\u88c5\u9970\u8005\u3002\u4f46\u5728\u5b9e\u9645\u7684\u4f7f\u7528\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u88c5\u9970\u5668\u8fdb\u884c\u6269\u5c55\u65b0\u7684\u529f\u80fd\u3002\u8fd9\u6837\u5c31\u79f0\u4e3a\u534a\u900f\u660e\u6a21\u5f0f\u3002\u4f8b\u5982\uff1a\u5bf9\u8d2d\u4e70\u6469\u5361\u5496\u5561\u7684\u7528\u6237\u53ef\u4ee5\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u793c\u7269\u529f\u80fd\uff1a class Mocha: CondimentDecorator { var beverage: Beverage init(beverage: Beverage) { self.beverage = beverage } func cost() -> Double { return 1.0 + self.beverage.cost() } func gift() -> String { return \"\u676f\u5177\" } } \u4f18\u7f3a\u70b9\uff1a \u4f18\u70b9\uff1a \u53ef\u4ee5\u52a8\u6001\u7684\u7ed9\u5bf9\u8c61\u589e\u52a0\u529f\u80fd \u7f3a\u70b9\uff1a \u88c5\u9970\u5668\u8fc7\u5bb9\u6613\u4ea7\u751f\u66f4\u591a\u7684\u5bf9\u8c61 \u53c2\u8003\u94fe\u63a5\uff1a java\u8bbe\u8ba1\u6a21\u5f0f\uff0d\u88c5\u9970\u5668\u6a21\u5f0f(Decorator): https://www.jianshu.com/p/d80b6b4b76fc \u7ef4\u57fa\u767e\u79d1-\u4fee\u9970\u6a21\u5f0f\uff1a https://zh.wikipedia.org/zh-cn/%E4%BF%AE%E9%A5%B0%E6%A8%A1%E5%BC%8F \u91cd\u5b66 Java \u8bbe\u8ba1\u6a21\u5f0f\uff1a\u5b9e\u6218\u88c5\u9970\u5668\u6a21\u5f0f https://www.cnblogs.com/xiaofuge/p/13082966.html","title":"\u7ed3\u6784\u578b-\u88c5\u9970\u5668\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A3%85%E9%A5%B0%E5%99%A8%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_1","text":"\u6807\u7b7e\uff08\u7a7a\u683c\u5206\u9694\uff09\uff1a \u8bbe\u8ba1\u6a21\u5f0f Swift \u88c5\u9970\u5668\u8bbe\u8ba1\u6a21\u5f0f \u9700\u6c42\uff1a \u7ed9\u661f\u5df4\u5179\u8bbe\u8ba1\u8ba2\u5355\u7cfb\u7edf \u88c5\u9970\u5668\u8bbe\u8ba1\u6a21\u5f0f\u91cd\u6784\u7cfb\u7edf \u88c5\u9970\u5668\u7c7b\u56fe \u534a\u900f\u660e\u88c5\u9970\u5668 \u4f18\u7f3a\u70b9\uff1a \u53c2\u8003\u94fe\u63a5\uff1a \u9700\u6c42\u5185\u5bb9\u4f9d\u636e \u300aHeadFirst \u8bbe\u8ba1\u6a21\u5f0f\u300b \u7b2c\u4e09\u7ae0 \u88c5\u9970\u5668\u662f \u52a8\u6001 \u5730\u5f80\u4e00\u4e2a\u7c7b\u522b\u4e2d\u6dfb\u52a0\u65b0\u7684\u884c\u4e3a\u7684\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u662f\u4e00\u79cd\u6bd4\u7ee7\u627f \u66f4\u6709\u5f39\u6027 \u7684\u66ff\u4ee3\u65b9\u6848\u3002 \u7ef4\u57fa\u767e\u79d1: \u901a\u8fc7\u4f7f\u7528\u4fee\u9970\u6a21\u5f0f\uff0c\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u6269\u5145\u4e00\u4e2a\u7c7b\u522b\u7684\u529f\u80fd\u3002\u539f\u7406\u662f\uff1a\u589e\u52a0\u4e00\u4e2a\u4fee\u9970\u7c7b\u5305\u88f9\u539f\u6765\u7684\u7c7b\u522b\uff0c\u5305\u88f9\u7684\u65b9\u5f0f\u662f\u5728\u4fee\u9970\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\u5c06\u539f\u6765\u7684\u7c7b\u4ee5\u53c2\u6570\u7684\u5f62\u5f0f\u4f20\u5165\u3002\u88c5\u9970\u7c7b\u5b9e\u73b0\u65b0\u7684\u529f\u80fd\uff0c\u4f46\u662f\uff0c\u5728\u4e0d\u9700\u8981\u7528\u5230\u65b0\u529f\u80fd\u7684\u5730\u65b9\uff0c\u5b83\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u539f\u6765\u7684\u7c7b\u522b\u4e2d\u7684\u65b9\u6cd5\u3002\u4fee\u9970\u7c7b\u5fc5\u987b\u548c\u539f\u6765\u7684\u7c7b\u522b\u6709\u76f8\u540c\u7684\u63a5\u53e3\u3002 \u4fee\u9970\u6a21\u5f0f\u662f\u7c7b\u522b\u7ee7\u627f\u7684\u53e6\u5916\u4e00\u79cd\u9009\u62e9\u3002\u7c7b\u7ee7\u627f\u5728\u7f16\u8bd1\u65f6\u5019\u589e\u52a0\u884c\u4e3a\uff0c\u800c\u88c5\u9970\u6a21\u5f0f\u662f\u5728\u8fd0\u884c\u65f6\u589e\u52a0\u884c\u4e3a\u3002","title":"\u88c5\u9970\u5668\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A3%85%E9%A5%B0%E5%99%A8%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_2","text":"\u661f\u5df4\u5179\u662f\u5feb\u901f\u6269\u5f20\u7684\u5496\u5561\u8fde\u9501\u5e97\uff0c\u4e3a\u4e86\u7ba1\u7406\u76ee\u7684\uff0c\u4ed6\u4eec\u9700\u8981\u8bbe\u8ba1\u81ea\u5df1\u7684\u8ba2\u5355\u7cfb\u7edf\u3002 /// \u996e\u6599\u7cfb\u7edf\uff08\u8d85\u7c7b\uff09 class Beverage { /// \u63cf\u8ff0\u4fe1\u606f var description: String { return \"\" } /// \u8fd4\u56de\u6bcf\u79cd\u996e\u6599\u7684\u4ef7\u683c\u4fe1\u606f func cost() -> Double { return 0.0 } } /// \u5b50\u7c7b\u7ee7\u627f\u91cd\u5199\u5bf9\u5e94\u65b9\u6cd5 class HouseBlend: Beverage { override var description: String { return \"House Blend\" } override func cost() -> Double { return 10.0 } } class DarkRoast: Beverage { override var description: String { return \"Dark Roast\" } override func cost() -> Double { return 20.0 } } \u4e0a\u9762\u8fd9\u79cd\u7ee7\u627f\u7684\u65b9\u5f0f\u5bf9\u4e8e\u7b80\u5355\u7cfb\u7edf\u6765\u8bf4\u53ef\u884c\uff0c\u4f46\u662f\u5bf9\u4e8e\u590d\u6742\u7684\u996e\u6599\u7cfb\u7edf\u6765\u8bf4\uff0c\u6bcf\u79cd\u5496\u5561\u5fc5\u987b\u8981\u8003\u8651\u5230\u5404\u79cd\u8c03\u6599\uff1a\u4f8b\u5982\u84b8\u5976\uff08Steamed Milk\uff09\u3001\u8c46\u6d46\uff08Soy\uff09\u3001\u6469\u5361\uff08Mocha\uff09\u7b49\uff0c\u56e0\u6b64\u9700\u8981\u8bbe\u8ba1\u4e0d\u4e00\u6837\u7684\u5b50\u7c7b\uff0c\u5982 HouseBlendWithSteamedMilk \u3001 HouseBlendWithSteamedMilkMocha \u7b49\u5b50\u7c7b\uff0c\u7136\u540e\u5b50\u7c7b\u91cd\u5199\u5bf9\u5e94\u7684\u8ba1\u7b97\u65b9\u5f0f\u3002\u8fd9\u79cd\u65b9\u5f0f\u5e26\u6765\u4e24\u4e2a\u4e25\u91cd\u7684\u95ee\u9898\uff1a 1. \u7c7b\u7206\u70b8\uff1a\u6bcf\u65b0\u589e\u4e00\u79cd\u8c03\u6599\u9700\u8981\u589e\u52a0\u51e0\u5341\u4e0a\u767e\u79cd\u5b50\u7c7b\uff1b 2. \u5f53\u67d0\u79cd\u8c03\u6599\u4ef7\u683c\u4e0a\u6da8\uff0c\u9700\u8981\u9700\u6539\u5bf9\u5e94\u7684\u5b50\u7c7b\u7684\u4ef7\u683c\u3002 \u8fd9\u4e25\u91cd\u8fdd\u53cd\u4e86 \u9488\u5bf9\u63a5\u53e3\u7f16\u7a0b \u4ee5\u53ca \u591a\u7528\u7ec4\u5408\uff0c\u5c11\u7528\u7ee7\u627f\u7684 \u7684\u8bbe\u8ba1\u539f\u5219\u3002\u5f53\u7136\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u6211\u4e5f\u76f8\u4fe1\u4e0d\u4f1a\u6709\u4eba\u8fd9\u6837\u8fdb\u884c\u8bbe\u8ba1\u3002 \u90a3\u5982\u4f55\u6765\u8bbe\u8ba1\u5bf9\u5e94\u7684\u7cfb\u7edf\u5462\uff1f \u65b9\u6848\u4e00: \u5c06\u6bcf\u4e00\u79cd\u7684\u8c03\u6599\u653e\u5230\u5404\u81ea\u7684\u996e\u6599\u4e2d\uff0c\u4f8b\u5982 HouseBlend \u6709\u84b8\u5976\uff08Steamed Milk\uff09\u548c\u6469\u5361\uff08Mocha\uff09: class DarkRoast: Beverage { /// \u662f\u5426\u6709\u8c03\u6599 var hasSteamedMilk: Bool = false var hasMocha: Bool = false override var description: String { return \"DarkRoast\" } /// \u91cd\u5199\u4e86\u4ef7\u683c\uff0c\u8003\u8651\u4e86\u8c03\u6599\u4ef7\u683c override func cost() -> Double { var cost = 10.0 if hasSteamedMilk { cost += 5.0 } if hasMocha { cost += 1.0 } return cost } } \u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u56e0\u4e3a\u8c03\u6599\u800c\u6269\u5c55\u7684\u5b50\u7c7b\uff0c\u4f46\u8fd9\u4e5f\u6709\u4e2a\u707e\u96be\uff0c\u5f53\u67d0\u79cd\u8c03\u6599\u4ef7\u683c\u53d8\u5316\uff0c\u8fd9\u4e2a\u91cc\u9762\u4e5f\u9700\u8981\u8ddf\u7740\u53d8\u5316\uff0c\u65e0\u7a77\u65e0\u5c3d\u3002 \u65b9\u6848\u4e8c\uff1a \u5c06\u5404\u79cd\u8c03\u6599\u653e\u5230\u57fa\u7c7b Beverage \u4e2d class Beverage { /// \u8c03\u6599\u4efd\u6570 var steamedMilk: Double = 0 var mocha: Double = 0 var milk: Double = 0 func cost() -> Double { var cost = 0.0 cost += ( steamedMilk * 5.0 ) cost += ( mocha * 1.0 ) cost += ( milk * 2.0 ) return 0.0 } } /// \u5b50\u7c7b\u7ee7\u627f\u91cd\u5199\u5bf9\u5e94\u65b9\u6cd5 class HouseBlend: Beverage { override func cost() -> Double { var cost = super.cost() cost += 10.0 return cost } } \u901a\u8fc7\u7236\u7c7b Beverage \u5c06\u6240\u6709\u7684\u8c03\u6599\u4efd\u6570\u653e\u5165\u5176\u4e2d\uff0c\u7136\u540e\u8ba1\u7b97\u4ef7\u683c\u3002\u5b50\u7c7b\u91cd\u5199 cost() \u65b9\u6cd5\u3002 \u4f46\u8fd9\u4e5f\u4f1a\u5b58\u5728\u51e0\u4e2a\u95ee\u9898\uff1a 1. \u5982\u679c\u67d0\u79cd\u8c03\u6599\u4ef7\u683c\u6539\u53d8\u540e\uff0c\u6211\u4eec\u9700\u8981\u66f4\u6539 Beverage \u7684\u8ba1\u7b97\u903b\u8f91\uff1b--- \u8fdd\u53cd\u5f00\u95ed\u539f\u5219 2. \u5982\u679c\u51fa\u73b0\u65b0\u7684\u8c03\u6599\u6216\u8005\u5220\u9664\u67d0\u79cd\u8c03\u6599\uff0c\u9700\u8981\u66f4\u6539 Beverage \u4ee5\u53ca\u5bf9\u5e94\u7684\u8ba1\u7b97\u903b\u8f91\u3002-- \u8fdd\u53cd\u5f00\u95ed\u539f\u5219 3. \u5bf9\u4e8e\u65b0\u7684\u996e\u6599\u67d0\u4e9b\u8c03\u6599\u5e76\u4e0d\u9002\u5408\uff0c \u7ee7\u627f\u4f1a\u8ba9\u5b50\u7c7b\u62e5\u6709\u4e00\u4e9b\u4e0d\u9002\u5408\u81ea\u5df1\u7684\u884c\u4e3a\u5c5e\u6027\u3002 \u5982\u8336\u91cc\u9762\u52a0\u5976\u6ce1\u3002","title":"\u9700\u6c42\uff1a \u7ed9\u661f\u5df4\u5179\u8bbe\u8ba1\u8ba2\u5355\u7cfb\u7edf"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A3%85%E9%A5%B0%E5%99%A8%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_3","text":"\u901a\u8fc7\u4e0a\u56fe\u53ef\u4ee5\u770b\u5230\u88c5\u9970\u5668\u529f\u80fd \u4ee5 DarkRoast \u4e3a\u5bf9\u8c61\u5f00\u59cb\uff1b \u7528\u6237\u5148\u8981\u6469\u5361\uff08Mocha\uff09\uff0c\u7136\u540e\u4f7f\u7528 Mocha \u5c06 DarkRoast \u88c5\u9970\u8d77\u6765 \u7528\u6237\u60f3\u8981\u5976\u6ce1\uff08Whip\uff09\uff0c\u4f7f\u7528 Whip \u5c06 Mocha \u88c5\u9970\u8d77\u6765 \u5f53\u8ba1\u7b97\u4ef7\u683c\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u8ba1\u7b97 Whip \u7684\u4ef7\u683c\uff0c\u7136\u540e\u9012\u5f52\u8ba1\u7b97\u5185\u90e8\u7684 Mocha\u3001DarkRoast \u7684\u4ef7\u683c\u3002 protocol Beverage { func cost() -> Double } class DarkRoast: Beverage { func cost() -> Double { return 20.0 } } protocol CondimentDecorator: Beverage {} class Mocha: CondimentDecorator { var beverage: Beverage init(beverage: Beverage) { self.beverage = beverage } func cost() -> Double { return 1.0 + self.beverage.cost() } } class Whip: CondimentDecorator { var beverage: Beverage init(beverage: Beverage) { self.beverage = beverage } func cost() -> Double { return 2.0 + self.beverage.cost() } } \u8c03\u7528\u5730\u65b9\uff1a /// \u4f7f\u7528\u8d85\u7c7b Beverage var beverage: Beverage = DarkRoast() beverage = Mocha(beverage: beverage) beverage = Whip(beverage: beverage) print(beverage.cost()) \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u76f4\u63a5\u5c06 Beverage \u548c CondimentDecorator \u8bbe\u8ba1\u4e3a\u63a5\u53e3\uff08\u9762\u5411\u63a5\u53e3\u7f16\u7a0b\uff09\u3002\u5bf9\u7528\u6237\u6765\u8bf4\uff0c\u4f7f\u7528\u88c5\u9970\u8005\uff08Mocha \u548c Whip\uff09\u66ff\u4ee3\u88ab\u88c5\u9970\u8005\uff08DarkRoast\uff09\u662f\u65e0\u611f\u7684\uff0c \u56e0\u4e3a\u88c5\u9970\u8005\u548c\u88ab\u88c5\u9970\u5bf9\u8c61\u6709\u76f8\u540c\u7684\u7c7b\u578b \u3002\u8fd9\u6837\u8fbe\u5230\u4e86 \u5728\u4e0d\u4fee\u6539\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\uff0c\u5bf9\u539f\u6709\u5bf9\u8c61\uff08Beverage\uff09\u8fdb\u884c\u529f\u80fd\u7684\u6269\u5c55\u3002","title":"\u88c5\u9970\u5668\u8bbe\u8ba1\u6a21\u5f0f\u91cd\u6784\u7cfb\u7edf"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A3%85%E9%A5%B0%E5%99%A8%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_4","text":"\u6ce8\u610f\uff1a\u88c5\u9970\u8005\u4e0e\u88ab\u88c5\u9970\u8005\u6709\u76f8\u540c\u7684\u7c7b\u578b\u5373\u53ef \u56fe\u6765\u81ea\u7f51\u7edc","title":"\u88c5\u9970\u5668\u7c7b\u56fe"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A3%85%E9%A5%B0%E5%99%A8%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_5","text":"\u6807\u51c6\u88c5\u9970\u5668\u662f\u5728\u4e0d\u6539\u53d8\u539f\u6709\u63a5\u53e3\u60c5\u51b5\u4e0b\u5bf9\u5176\u8fdb\u884c\u529f\u80fd\u6269\u5c55\uff0c\u8fd9\u6837\u53ef\u4ee5\u968f\u65f6\u4f7f\u7528\u88c5\u9970\u8005\u66ff\u6362\u88ab\u88c5\u9970\u8005\u3002\u4f46\u5728\u5b9e\u9645\u7684\u4f7f\u7528\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u88c5\u9970\u5668\u8fdb\u884c\u6269\u5c55\u65b0\u7684\u529f\u80fd\u3002\u8fd9\u6837\u5c31\u79f0\u4e3a\u534a\u900f\u660e\u6a21\u5f0f\u3002\u4f8b\u5982\uff1a\u5bf9\u8d2d\u4e70\u6469\u5361\u5496\u5561\u7684\u7528\u6237\u53ef\u4ee5\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u793c\u7269\u529f\u80fd\uff1a class Mocha: CondimentDecorator { var beverage: Beverage init(beverage: Beverage) { self.beverage = beverage } func cost() -> Double { return 1.0 + self.beverage.cost() } func gift() -> String { return \"\u676f\u5177\" } }","title":"\u534a\u900f\u660e\u88c5\u9970\u5668"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A3%85%E9%A5%B0%E5%99%A8%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_6","text":"\u4f18\u70b9\uff1a \u53ef\u4ee5\u52a8\u6001\u7684\u7ed9\u5bf9\u8c61\u589e\u52a0\u529f\u80fd \u7f3a\u70b9\uff1a \u88c5\u9970\u5668\u8fc7\u5bb9\u6613\u4ea7\u751f\u66f4\u591a\u7684\u5bf9\u8c61","title":"\u4f18\u7f3a\u70b9\uff1a"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A3%85%E9%A5%B0%E5%99%A8%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_7","text":"java\u8bbe\u8ba1\u6a21\u5f0f\uff0d\u88c5\u9970\u5668\u6a21\u5f0f(Decorator): https://www.jianshu.com/p/d80b6b4b76fc \u7ef4\u57fa\u767e\u79d1-\u4fee\u9970\u6a21\u5f0f\uff1a https://zh.wikipedia.org/zh-cn/%E4%BF%AE%E9%A5%B0%E6%A8%A1%E5%BC%8F \u91cd\u5b66 Java \u8bbe\u8ba1\u6a21\u5f0f\uff1a\u5b9e\u6218\u88c5\u9970\u5668\u6a21\u5f0f https://www.cnblogs.com/xiaofuge/p/13082966.html","title":"\u53c2\u8003\u94fe\u63a5\uff1a"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/","text":"\u89c2\u5bdf\u8005\u6a21\u5f0f \u6807\u7b7e\uff08\u7a7a\u683c\u5206\u9694\uff09\uff1a \u8bbe\u8ba1\u6a21\u5f0f Swift \u672c\u6587\u5b9e\u4f8b\u53d6\u81ea\u4e8e \u300aHead First \u8bbe\u8ba1\u6a21\u5f0f\u300b \u7b2c\u4e8c\u7ae0 \u89c2\u5bdf\u8005\u6a21\u5f0f\u662f \u4e00\u5bf9\u591a \u7684\u8bbe\u8ba1\u6a21\u5f0f\u3002\u89c2\u5bdf\u8005\uff08Observer\uff09\u76d1\u542c\u4e3b\u9898\uff08Subject\uff09\u53d8\u5316\u3002\u5f53\u4e3b\u9898\uff08Subject\uff09\u72b6\u6001\u53d1\u751f\u53d8\u5316\u540e\uff0c\u4f1a\u901a\u77e5\u6240\u6709\u7684\u89c2\u5bdf\u8005\u3002 \u4e3b\u9898\u4e0e\u89c2\u5bdf\u8005\u4e4b\u95f4\u677e\u8026\u5408 \u9700\u6c42: \u663e\u793a\u5e03\u544a\u680f\u9700\u8981\u7bad\u5934\u6c14\u8c61\u53d8\u5316\uff0c\u5b9e\u65f6\u663e\u793a\u6c14\u538b\u3001\u6e29\u5ea6\u548c\u6e7f\u5ea6\u53d8\u5316\u3002 \u6211\u4eec\u53ef\u4ee5\u4ece WeatherData \u7ed3\u6784\u4e2d\u83b7\u53d6\u5bf9\u5e94\u7684\u6570\u636e protocol Observer: AnyObject { func update() } protocol Subject { func registerObserver(o: Observer) func removeObserver(o: Observer) func notifyObserver() } class WeatherData: Subject { private var observers: [Observer] = [] func registerObserver(o: Observer) { self.observers.append(o) } func removeObserver(o: Observer) { if let index = self.observers.firstIndex(where: { $0 === o }) { self.observers.remove(at: index) } } func notifyObserver() { self.observers.forEach { $0.update() } } public private(set) var temperature: Double = 0.0 public private(set) var humidity: Double = 0.0 public private(set) var pressure: Double = 0.0 func measureMentsChanged() { notifyObserver() } func setMeasureChanged(temperature: Double, humidity: Double, pressure: Double) { self.temperature = temperature self.humidity = humidity self.pressure = pressure measureMentsChanged() } } class ConcreteObserverA: Observer { weak var weatherData: WeatherData? func update() { print(self.weatherData?.humidity ?? 0, self.weatherData?.temperature ?? 0) } } \u6d4b\u8bd5\u4ee3\u7801\uff1a let weather = WeatherData() weather.registerObserver(o: ConcreteObserverA()) weather.setMeasureChanged(temperature: 10.0, humidity: 20.0, pressure: 30.0) \u4e3a\u4e86\u907f\u514d\u7c7b\u7ee7\u627f\uff0c\u5728\u8fd9\u91cc\u5c06\u89c2\u5bdf\u8005\uff08Observer\uff09\u4e0e\u4e3b\u9898\uff08Subject\uff09\u90fd\u8bbe\u8ba1\u4e3a\u534f\u8bae\uff0c\u4f46\u8fd9\u4e5f\u7ed9 update() \u66f4\u65b0\u65b9\u6cd5\u5e26\u6765\u56f0\u96be\u3002 \u89c2\u5bdf\u8005\u6536\u5230\u66f4\u65b0\u6d88\u606f\u540e\uff0c\u5927\u591a\u60c5\u51b5\u4f1a\u62c9\u53bb\u6700\u65b0\u7684\u6570\u636e\uff0c\u8fd9\u91cc\u5c31\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a \u89c2\u5bdf\u8005\u81ea\u5df1\u53bb \u62c9 \u53bb\u6700\u65b0\u6570\u636e\uff1b \u4e3b\u9898\u4e3b\u52a8 \u63a8 \u6700\u65b0\u7684\u6570\u636e\u3002 \u9488\u5bf9 \u62c9 \uff0c\u56e0\u4e3a\u6d89\u53ca\u4e3a\u534f\u8bae\u5185\u5bb9\uff0c\u90a3\u4e48 ConcreteObserverA \u9700\u8981\u77e5\u9053\u5177\u4f53\u4e3b\u9898\u5bf9\u8c61\u5185\u5bb9,\u4e0a\u9762\u4ee3\u7801\u4e2d\u5c31\u662f\u8fd9\u6837\u5904\u7406\u7684\u3002 \u9488\u5bf9 \u63a8 , \u90a3\u4e48\u9700\u8981\u5728 update() \u65b9\u6cd5\u4e2d\u628a\u72b6\u6001\u6216\u8005\u4e3b\u9898\u53d1\u9001\u51fa\u6765\uff0c\u7136\u540e\u8fdb\u884c\u5904\u7406 \u62c9\u6216\u8005\u63a8\uff0c\u8fd9\u4e24\u79cd\u65b9\u5f0f\u5404\u6709\u4f18\u52a3\uff0c\u9700\u8981\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u6765\u51b3\u5b9a\u3002 // \u4e3b\u9898\u5f53\u505a\u53c2\u6570\u4f20\u51fa\u6765 func update(s: Subject) { if let weather = s as? WeatherData { print(weather.humidity, weather.temperature) } } // \u72b6\u6001\u4f20\u9012\u51fa\u6765 func update(temperature: Double, humidity: Double, pressure: Double) { } \u5ef6\u4f38\u5185\u5bb9\uff1a\u8bbe\u8ba1\u4e3b\u9898\u66f4\u65b0\u7b56\u7565 \u5b9e\u9645\u60c5\u51b5\u4e2d\uff0c\u4e3b\u9898\u66f4\u65b0\u9700\u8981\u4e00\u4e9b\u7b56\u7565\uff0c\u4f8b\u5982\u591a\u5c11\u65f6\u95f4\u5185\u6709\u66f4\u65b0\u624d\u53d1\u9001\u6216\u8005\u53d8\u5316\u8d85\u8fc7\u4e00\u5b9a\u8303\u56f4\u624d\u4f1a\u53d1\u9001\uff0c\u8fd9\u5c31\u6d89\u53ca\u5230\u5bf9\u5e94\u7684\u7b56\u7565\u95ee\u9898\u3002 \u4e66\u4e2d\u63d0\u5230\u5728\u4e3b\u9898\u65b9\u6cd5\u4e2d\uff0c\u914d\u7f6e\u4e00\u4e2a var changed: BOOL \u53ef\u4ee5\u8ba9\u8ba2\u9605\u8005\u63a7\u5236\u8ba9\u4e3b\u9898\u66f4\u65b0\u3002 public var changed: Bool = true func notifyObserver() { self.observers.forEach { $0.update(s: self) } } func measureMentsChanged() { if changed { notifyObserver() changed = false } } \u4e2a\u4eba\u8ba4\u4e3a\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u597d\u7684\u7b56\u7565 \uff0c\u89c2\u5bdf\u8005\u6a21\u5f0f\u662f\u4e00\u5bf9\u591a\u7684\uff0c\u6bcf\u4e2a\u89c2\u5bdf\u8005\u7684\u7b56\u7565\u53ef\u80fd\u4e0d\u76f8\u540c\uff0c\u8fd9\u79cd\u7b56\u7565\u9002\u5b9c\u653e\u5728\u89c2\u5bdf\u8005\u4e2d\u3002","title":"\u884c\u4e3a\u578b-\u89c2\u5bdf\u8005\u6a21\u5f0f"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/#_1","text":"\u6807\u7b7e\uff08\u7a7a\u683c\u5206\u9694\uff09\uff1a \u8bbe\u8ba1\u6a21\u5f0f Swift \u672c\u6587\u5b9e\u4f8b\u53d6\u81ea\u4e8e \u300aHead First \u8bbe\u8ba1\u6a21\u5f0f\u300b \u7b2c\u4e8c\u7ae0 \u89c2\u5bdf\u8005\u6a21\u5f0f\u662f \u4e00\u5bf9\u591a \u7684\u8bbe\u8ba1\u6a21\u5f0f\u3002\u89c2\u5bdf\u8005\uff08Observer\uff09\u76d1\u542c\u4e3b\u9898\uff08Subject\uff09\u53d8\u5316\u3002\u5f53\u4e3b\u9898\uff08Subject\uff09\u72b6\u6001\u53d1\u751f\u53d8\u5316\u540e\uff0c\u4f1a\u901a\u77e5\u6240\u6709\u7684\u89c2\u5bdf\u8005\u3002 \u4e3b\u9898\u4e0e\u89c2\u5bdf\u8005\u4e4b\u95f4\u677e\u8026\u5408 \u9700\u6c42: \u663e\u793a\u5e03\u544a\u680f\u9700\u8981\u7bad\u5934\u6c14\u8c61\u53d8\u5316\uff0c\u5b9e\u65f6\u663e\u793a\u6c14\u538b\u3001\u6e29\u5ea6\u548c\u6e7f\u5ea6\u53d8\u5316\u3002 \u6211\u4eec\u53ef\u4ee5\u4ece WeatherData \u7ed3\u6784\u4e2d\u83b7\u53d6\u5bf9\u5e94\u7684\u6570\u636e protocol Observer: AnyObject { func update() } protocol Subject { func registerObserver(o: Observer) func removeObserver(o: Observer) func notifyObserver() } class WeatherData: Subject { private var observers: [Observer] = [] func registerObserver(o: Observer) { self.observers.append(o) } func removeObserver(o: Observer) { if let index = self.observers.firstIndex(where: { $0 === o }) { self.observers.remove(at: index) } } func notifyObserver() { self.observers.forEach { $0.update() } } public private(set) var temperature: Double = 0.0 public private(set) var humidity: Double = 0.0 public private(set) var pressure: Double = 0.0 func measureMentsChanged() { notifyObserver() } func setMeasureChanged(temperature: Double, humidity: Double, pressure: Double) { self.temperature = temperature self.humidity = humidity self.pressure = pressure measureMentsChanged() } } class ConcreteObserverA: Observer { weak var weatherData: WeatherData? func update() { print(self.weatherData?.humidity ?? 0, self.weatherData?.temperature ?? 0) } } \u6d4b\u8bd5\u4ee3\u7801\uff1a let weather = WeatherData() weather.registerObserver(o: ConcreteObserverA()) weather.setMeasureChanged(temperature: 10.0, humidity: 20.0, pressure: 30.0) \u4e3a\u4e86\u907f\u514d\u7c7b\u7ee7\u627f\uff0c\u5728\u8fd9\u91cc\u5c06\u89c2\u5bdf\u8005\uff08Observer\uff09\u4e0e\u4e3b\u9898\uff08Subject\uff09\u90fd\u8bbe\u8ba1\u4e3a\u534f\u8bae\uff0c\u4f46\u8fd9\u4e5f\u7ed9 update() \u66f4\u65b0\u65b9\u6cd5\u5e26\u6765\u56f0\u96be\u3002 \u89c2\u5bdf\u8005\u6536\u5230\u66f4\u65b0\u6d88\u606f\u540e\uff0c\u5927\u591a\u60c5\u51b5\u4f1a\u62c9\u53bb\u6700\u65b0\u7684\u6570\u636e\uff0c\u8fd9\u91cc\u5c31\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a \u89c2\u5bdf\u8005\u81ea\u5df1\u53bb \u62c9 \u53bb\u6700\u65b0\u6570\u636e\uff1b \u4e3b\u9898\u4e3b\u52a8 \u63a8 \u6700\u65b0\u7684\u6570\u636e\u3002 \u9488\u5bf9 \u62c9 \uff0c\u56e0\u4e3a\u6d89\u53ca\u4e3a\u534f\u8bae\u5185\u5bb9\uff0c\u90a3\u4e48 ConcreteObserverA \u9700\u8981\u77e5\u9053\u5177\u4f53\u4e3b\u9898\u5bf9\u8c61\u5185\u5bb9,\u4e0a\u9762\u4ee3\u7801\u4e2d\u5c31\u662f\u8fd9\u6837\u5904\u7406\u7684\u3002 \u9488\u5bf9 \u63a8 , \u90a3\u4e48\u9700\u8981\u5728 update() \u65b9\u6cd5\u4e2d\u628a\u72b6\u6001\u6216\u8005\u4e3b\u9898\u53d1\u9001\u51fa\u6765\uff0c\u7136\u540e\u8fdb\u884c\u5904\u7406 \u62c9\u6216\u8005\u63a8\uff0c\u8fd9\u4e24\u79cd\u65b9\u5f0f\u5404\u6709\u4f18\u52a3\uff0c\u9700\u8981\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u6765\u51b3\u5b9a\u3002 // \u4e3b\u9898\u5f53\u505a\u53c2\u6570\u4f20\u51fa\u6765 func update(s: Subject) { if let weather = s as? WeatherData { print(weather.humidity, weather.temperature) } } // \u72b6\u6001\u4f20\u9012\u51fa\u6765 func update(temperature: Double, humidity: Double, pressure: Double) { }","title":"\u89c2\u5bdf\u8005\u6a21\u5f0f"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/#_2","text":"\u5b9e\u9645\u60c5\u51b5\u4e2d\uff0c\u4e3b\u9898\u66f4\u65b0\u9700\u8981\u4e00\u4e9b\u7b56\u7565\uff0c\u4f8b\u5982\u591a\u5c11\u65f6\u95f4\u5185\u6709\u66f4\u65b0\u624d\u53d1\u9001\u6216\u8005\u53d8\u5316\u8d85\u8fc7\u4e00\u5b9a\u8303\u56f4\u624d\u4f1a\u53d1\u9001\uff0c\u8fd9\u5c31\u6d89\u53ca\u5230\u5bf9\u5e94\u7684\u7b56\u7565\u95ee\u9898\u3002 \u4e66\u4e2d\u63d0\u5230\u5728\u4e3b\u9898\u65b9\u6cd5\u4e2d\uff0c\u914d\u7f6e\u4e00\u4e2a var changed: BOOL \u53ef\u4ee5\u8ba9\u8ba2\u9605\u8005\u63a7\u5236\u8ba9\u4e3b\u9898\u66f4\u65b0\u3002 public var changed: Bool = true func notifyObserver() { self.observers.forEach { $0.update(s: self) } } func measureMentsChanged() { if changed { notifyObserver() changed = false } } \u4e2a\u4eba\u8ba4\u4e3a\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u597d\u7684\u7b56\u7565 \uff0c\u89c2\u5bdf\u8005\u6a21\u5f0f\u662f\u4e00\u5bf9\u591a\u7684\uff0c\u6bcf\u4e2a\u89c2\u5bdf\u8005\u7684\u7b56\u7565\u53ef\u80fd\u4e0d\u76f8\u540c\uff0c\u8fd9\u79cd\u7b56\u7565\u9002\u5b9c\u653e\u5728\u89c2\u5bdf\u8005\u4e2d\u3002","title":"\u5ef6\u4f38\u5185\u5bb9\uff1a\u8bbe\u8ba1\u4e3b\u9898\u66f4\u65b0\u7b56\u7565"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/","text":"\u9002\u914d\u5668\u6a21\u5f0f \u6807\u7b7e\uff08\u7a7a\u683c\u5206\u9694\uff09\uff1a \u8bbe\u8ba1\u6a21\u5f0f Swift C++ \u9002\u914d\u5668\u6a21\u5f0f \u5bf9\u8c61\u9002\u914d\u5668-\u9e2d\u5b50\u6a21\u578b \u7c7b\u9002\u914d\u5668 \u8ba8\u8bba\uff1a\u88c5\u9970\u5668\u4e0e\u9002\u914d\u5668 \u9002\u914d\u5668\u6a21\u5f0f \u662f\u5c06\u4e00\u4e2a\u63a5\u53e3\u8f6c\u6362\u4e3a\u53e6\u5916\u4e00\u4e2a\u63a5\u53e3\u3002\u4ece\u800c\u8ba9\u4e0d\u517c\u5bb9\u7684\u63a5\u53e3\u53d8\u5f97\u517c\u5bb9\u3002 \u5728\u4e0a\u56fe\u4e2d\uff0c\u73b0\u6709\u7cfb\u7edf\u65e0\u6cd5\u4e0e\u5382\u5546\u7c7b\u76f8\u7ed3\u5408\uff0c\u56e0\u6b64\u9700\u8981\u4f7f\u7528\u9002\u914d\u5668\u5c06\u73b0\u6709\u7cfb\u7edf\u8f6c\u6362\u4e3a\u5382\u5546\u7c7b\u3002\u4ece\u4e0a\u56fe\u53ef\u4ee5\u770b\u51fa\uff0c\u9002\u914d\u5668\u5e94\u8be5\u9075\u5faa\u6700\u7ec8\u7684\u5382\u5546\u7c7b\u63a5\u53e3\u3002 \u4e00\u822c\u800c\u8a00\uff0c\u9002\u914d\u5668\u6709\u4e24\u79cd\u7c7b\u578b\uff1a \u5bf9\u8c61\u9002\u914d\u5668 \u7c7b\u9002\u914d\u5668 \u5bf9\u8c61\u9002\u914d\u5668-\u9e2d\u5b50\u6a21\u578b \u5728 Python \u6216\u8005 Go \u8bed\u8a00\u4e2d\uff0c\u9e2d\u5b50\u7c7b\u578b\u4f7f\u7528\u6781\u5176\u5e7f\u6cdb\uff0c \u9e2d\u5b50\u6d4b\u8bd5 \u5982\u4e0b\u8868\u8ff0: \u201c\u5f53\u770b\u5230\u4e00\u53ea\u9e1f\u8d70\u8d77\u6765\u50cf\u9e2d\u5b50\u3001\u6e38\u6cf3\u8d77\u6765\u50cf\u9e2d\u5b50\u3001\u53eb\u8d77\u6765\u4e5f\u50cf\u9e2d\u5b50\uff0c\u90a3\u4e48\u8fd9\u53ea\u9e1f\u5c31\u53ef\u4ee5\u88ab\u79f0\u4e3a\u9e2d\u5b50\u3002\u201d \u5728 Swift \u7b49\u9759\u6001\u8bed\u8a00\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u9002\u914d\u5668\u6765\u5c06 \u9e1f \u9002\u914d\u4e3a \u9e2d\u5b50 \u3002 protocol Duck { func swim() func quack() func walk() } class Bird { func walk() { debugPrint( \"bird walk\" ) } func tweet() { debugPrint( \"bird tweet\" ) } func bathe() { debugPrint( \"bird bathe\" ) } } class BirdAdapter: Duck { let bird: Bird init(bird: Bird) { self.bird = bird } func swim() { self.bird.bathe() } func quack() { self.bird.tweet() } func walk() { self.bird.walk() } } \u7a0b\u5e8f\u4ee3\u7801\u6bd4\u8f83\u7b80\u5355\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u9e2d\u5b50\u7684\u534f\u8bae\u7c7b\u578b\uff0c\u5176\u4e2d\u5305\u542b\u4e86 swim \u3001 quack \u4ee5\u53ca walk \u65b9\u6cd5\u3002\u76f4\u63a5\u8ba9 Bird \u9075\u5b88 Duck \u662f\u4e0d\u592a\u5408\u9002\u7684\u3002\u56e0\u6b64\u4f7f\u7528\u4e86\u4e2d\u95f4\u9002\u914d\u5668 BirdAdapter \u3002 \u8c03\u7528\u5730\u65b9 let bird = Bird() let duck = BirdAdapter(bird: bird) duck.quack() duck.walk() duck.swim() \u9002\u914d\u5668\u6bd4\u8f83\u7b80\u5355\uff0c\u5ba2\u6237\u4f7f\u7528\u9002\u914d\u5668\u7684\u8fc7\u7a0b\u5982\u4e0b\uff1a \u5ba2\u6237\u901a\u8fc7\u76ee\u6807\u63a5\u53e3\uff08Duck\uff09\u8c03\u7528\u9002\u914d\u5668\uff08BirdAdapter\uff09\u65b9\u6cd5\u5bf9\u9002\u914d\u5668\u53d1\u51fa\u8bf7\u6c42\uff1b \u9002\u914d\u5668\u4f7f\u7528\u88ab\u9002\u914d\u8005\uff08Bird\uff09\u63a5\u53e3\u628a\u8bf7\u6c42\u8f6c\u6362\u4e3a\u88ab\u9002\u914d\u7740\u7684\u8c03\u7528\u63a5\u53e3\uff1b self.bird.bathe() \u3001 self.bird.tweet() \u3001 self.bird.walk() \u5ba2\u6237\u6536\u5230\u8c03\u7528\u7684\u7ed3\u679c\uff0c\u4f46\u5e76\u672a\u5bdf\u89c9\u8fd9\u4e00\u5207\u662f\u9002\u914d\u5668\u5728\u8d77\u4f5c\u7528\uff1b \u7c7b\u9002\u914d\u5668 \u7c7b\u9002\u914d\u5668\u9700\u8981\u4f7f\u7528\u591a\u7ee7\u627f\u6765\u5b8c\u6210\u3002\u7c7b\u9002\u914d\u5668\u9700\u8981\u8ba9 Adapter \u76f4\u63a5\u7ee7\u627f\u4e8e\u4e24\u4e2a\u7c7b\u578b\uff0c\u5f53\u8bf7\u6c42 request \u7684\u65f6\u5019\uff0cAdapter \u91cd\u5199 Target \u7684 request \u65b9\u6cd5\uff0c\u7136\u540e\u5185\u90e8\u8f6c\u5316\u4e3a Adaptee \u7684 specificRequest \u65b9\u6cd5\u3002 \u50cf Java\u3001Swift\u3001OC\u7b49\u8bed\u8a00\u6ca1\u6709\u591a\u7ee7\u627f\u7684\u6982\u5ff5\uff0c\u56e0\u6b64\u5f88\u5c11\u7528\u5230\uff0cC++ \u5b58\u5728\u591a\u7ee7\u627f\uff0c\u4f46\u662f\u591a\u7ee7\u627f\u5bb9\u6613\u5e26\u6765\u83f1\u5f62\u7ee7\u627f\u7b49\u590d\u6742\u95ee\u9898\u3002\u4e0d\u5efa\u8bae\u4f7f\u7528\u3002 \u5728\u53e6\u4e00\u65b9\u9762\uff0c\u5bf9\u8c61\u9002\u914d\u5668\u4f7f\u7528\u7684\u662f\u7ec4\u5408\u7684\u65b9\u5f0f\uff0c\u800c\u7c7b\u9002\u914d\u5668\u4f7f\u7528\u7684\u662f\u7ee7\u627f\u3002 \u5982\u679c\u4f60\u719f\u7ec3\u4e8e\u9488\u5bf9\u63a5\u53e3\u7f16\u7a0b\uff0c\u90a3\u4e48\u4f60\u5c31\u53ef\u4ee5\u8f7b\u6613\u7684\u5c06\u7c7b\u9002\u914d\u5668\u8f6c\u6362\u4e3a\u5bf9\u8c61\u9002\u914d\u5668\u3002\u53ea\u9700\u8981\u5c06\u5176\u4e2d\u7684\u4e00\u4e2a\u7c7b\u578b\u8f6c\u6362\u4e3a\u63a5\u53e3\u5373\u53ef\u3002\u5728\u4e00\u4e9b\u535a\u5ba2\u4e2d\uff0c\u793a\u4f8b\u7a0b\u5e8f\u4e5f\u662f\u4f7f\u7528\u8be5\u65b9\u6cd5\u5b9e\u73b0\u3002 \u8ba8\u8bba\uff1a\u88c5\u9970\u5668\u4e0e\u9002\u914d\u5668 \u88c5\u9970\u5668\u548c\u9002\u914d\u5668\u5f88\u50cf\uff0c\u90fd\u662f\u5bf9\u73b0\u6709\u7684\u4e00\u4e2a\u5bf9\u8c61\u8fdb\u884c\u54cd\u5e94\u7684\u64cd\u4f5c\u3002\u4f46\u8fd9\u4e24\u8005\u8fd8\u662f\u6709\u672c\u8d28\u533a\u522b\u3002 \u9002\u914d\u5668\u7684\u672c\u8d28\u662f\u8ba9\u4e24\u4e2a \u4e0d\u517c\u5bb9 \u7684\u63a5\u53e3\u8fdb\u884c\u8f6c\u6362\uff0c\u4ece\u800c\u8ba9\u4e24\u8005\u517c\u5bb9\u3002 \u88c5\u9970\u5668\u662f\u5bf9\u73b0\u6709\u5bf9\u8c61\u884c\u4e3a\u8fdb\u884c\u7684\u6269\u5c55\uff0c\u534a\u900f\u660e\u88c5\u9970\u5668\u4f1a\u5bf9\u73b0\u6709\u5bf9\u8c61\u8fdb\u884c\u884c\u4e3a\u7684\u589e\u52a0\uff0c\u4f46\u662f\u88c5\u9970\u5668\u4e0e\u73b0\u6709\u5bf9\u8c61\u5e94\u8be5\u662f\u9075\u5faa\u76f8\u540c\u7684\u63a5\u53e3\u3002","title":"\u7ed3\u6784\u578b-\u9002\u914d\u5668\u6a21\u5f0f"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/#_1","text":"\u6807\u7b7e\uff08\u7a7a\u683c\u5206\u9694\uff09\uff1a \u8bbe\u8ba1\u6a21\u5f0f Swift C++ \u9002\u914d\u5668\u6a21\u5f0f \u5bf9\u8c61\u9002\u914d\u5668-\u9e2d\u5b50\u6a21\u578b \u7c7b\u9002\u914d\u5668 \u8ba8\u8bba\uff1a\u88c5\u9970\u5668\u4e0e\u9002\u914d\u5668 \u9002\u914d\u5668\u6a21\u5f0f \u662f\u5c06\u4e00\u4e2a\u63a5\u53e3\u8f6c\u6362\u4e3a\u53e6\u5916\u4e00\u4e2a\u63a5\u53e3\u3002\u4ece\u800c\u8ba9\u4e0d\u517c\u5bb9\u7684\u63a5\u53e3\u53d8\u5f97\u517c\u5bb9\u3002 \u5728\u4e0a\u56fe\u4e2d\uff0c\u73b0\u6709\u7cfb\u7edf\u65e0\u6cd5\u4e0e\u5382\u5546\u7c7b\u76f8\u7ed3\u5408\uff0c\u56e0\u6b64\u9700\u8981\u4f7f\u7528\u9002\u914d\u5668\u5c06\u73b0\u6709\u7cfb\u7edf\u8f6c\u6362\u4e3a\u5382\u5546\u7c7b\u3002\u4ece\u4e0a\u56fe\u53ef\u4ee5\u770b\u51fa\uff0c\u9002\u914d\u5668\u5e94\u8be5\u9075\u5faa\u6700\u7ec8\u7684\u5382\u5546\u7c7b\u63a5\u53e3\u3002 \u4e00\u822c\u800c\u8a00\uff0c\u9002\u914d\u5668\u6709\u4e24\u79cd\u7c7b\u578b\uff1a \u5bf9\u8c61\u9002\u914d\u5668 \u7c7b\u9002\u914d\u5668","title":"\u9002\u914d\u5668\u6a21\u5f0f"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/#-","text":"\u5728 Python \u6216\u8005 Go \u8bed\u8a00\u4e2d\uff0c\u9e2d\u5b50\u7c7b\u578b\u4f7f\u7528\u6781\u5176\u5e7f\u6cdb\uff0c \u9e2d\u5b50\u6d4b\u8bd5 \u5982\u4e0b\u8868\u8ff0: \u201c\u5f53\u770b\u5230\u4e00\u53ea\u9e1f\u8d70\u8d77\u6765\u50cf\u9e2d\u5b50\u3001\u6e38\u6cf3\u8d77\u6765\u50cf\u9e2d\u5b50\u3001\u53eb\u8d77\u6765\u4e5f\u50cf\u9e2d\u5b50\uff0c\u90a3\u4e48\u8fd9\u53ea\u9e1f\u5c31\u53ef\u4ee5\u88ab\u79f0\u4e3a\u9e2d\u5b50\u3002\u201d \u5728 Swift \u7b49\u9759\u6001\u8bed\u8a00\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u9002\u914d\u5668\u6765\u5c06 \u9e1f \u9002\u914d\u4e3a \u9e2d\u5b50 \u3002 protocol Duck { func swim() func quack() func walk() } class Bird { func walk() { debugPrint( \"bird walk\" ) } func tweet() { debugPrint( \"bird tweet\" ) } func bathe() { debugPrint( \"bird bathe\" ) } } class BirdAdapter: Duck { let bird: Bird init(bird: Bird) { self.bird = bird } func swim() { self.bird.bathe() } func quack() { self.bird.tweet() } func walk() { self.bird.walk() } } \u7a0b\u5e8f\u4ee3\u7801\u6bd4\u8f83\u7b80\u5355\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u9e2d\u5b50\u7684\u534f\u8bae\u7c7b\u578b\uff0c\u5176\u4e2d\u5305\u542b\u4e86 swim \u3001 quack \u4ee5\u53ca walk \u65b9\u6cd5\u3002\u76f4\u63a5\u8ba9 Bird \u9075\u5b88 Duck \u662f\u4e0d\u592a\u5408\u9002\u7684\u3002\u56e0\u6b64\u4f7f\u7528\u4e86\u4e2d\u95f4\u9002\u914d\u5668 BirdAdapter \u3002 \u8c03\u7528\u5730\u65b9 let bird = Bird() let duck = BirdAdapter(bird: bird) duck.quack() duck.walk() duck.swim() \u9002\u914d\u5668\u6bd4\u8f83\u7b80\u5355\uff0c\u5ba2\u6237\u4f7f\u7528\u9002\u914d\u5668\u7684\u8fc7\u7a0b\u5982\u4e0b\uff1a \u5ba2\u6237\u901a\u8fc7\u76ee\u6807\u63a5\u53e3\uff08Duck\uff09\u8c03\u7528\u9002\u914d\u5668\uff08BirdAdapter\uff09\u65b9\u6cd5\u5bf9\u9002\u914d\u5668\u53d1\u51fa\u8bf7\u6c42\uff1b \u9002\u914d\u5668\u4f7f\u7528\u88ab\u9002\u914d\u8005\uff08Bird\uff09\u63a5\u53e3\u628a\u8bf7\u6c42\u8f6c\u6362\u4e3a\u88ab\u9002\u914d\u7740\u7684\u8c03\u7528\u63a5\u53e3\uff1b self.bird.bathe() \u3001 self.bird.tweet() \u3001 self.bird.walk() \u5ba2\u6237\u6536\u5230\u8c03\u7528\u7684\u7ed3\u679c\uff0c\u4f46\u5e76\u672a\u5bdf\u89c9\u8fd9\u4e00\u5207\u662f\u9002\u914d\u5668\u5728\u8d77\u4f5c\u7528\uff1b","title":"\u5bf9\u8c61\u9002\u914d\u5668-\u9e2d\u5b50\u6a21\u578b"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/#_2","text":"\u7c7b\u9002\u914d\u5668\u9700\u8981\u4f7f\u7528\u591a\u7ee7\u627f\u6765\u5b8c\u6210\u3002\u7c7b\u9002\u914d\u5668\u9700\u8981\u8ba9 Adapter \u76f4\u63a5\u7ee7\u627f\u4e8e\u4e24\u4e2a\u7c7b\u578b\uff0c\u5f53\u8bf7\u6c42 request \u7684\u65f6\u5019\uff0cAdapter \u91cd\u5199 Target \u7684 request \u65b9\u6cd5\uff0c\u7136\u540e\u5185\u90e8\u8f6c\u5316\u4e3a Adaptee \u7684 specificRequest \u65b9\u6cd5\u3002 \u50cf Java\u3001Swift\u3001OC\u7b49\u8bed\u8a00\u6ca1\u6709\u591a\u7ee7\u627f\u7684\u6982\u5ff5\uff0c\u56e0\u6b64\u5f88\u5c11\u7528\u5230\uff0cC++ \u5b58\u5728\u591a\u7ee7\u627f\uff0c\u4f46\u662f\u591a\u7ee7\u627f\u5bb9\u6613\u5e26\u6765\u83f1\u5f62\u7ee7\u627f\u7b49\u590d\u6742\u95ee\u9898\u3002\u4e0d\u5efa\u8bae\u4f7f\u7528\u3002 \u5728\u53e6\u4e00\u65b9\u9762\uff0c\u5bf9\u8c61\u9002\u914d\u5668\u4f7f\u7528\u7684\u662f\u7ec4\u5408\u7684\u65b9\u5f0f\uff0c\u800c\u7c7b\u9002\u914d\u5668\u4f7f\u7528\u7684\u662f\u7ee7\u627f\u3002 \u5982\u679c\u4f60\u719f\u7ec3\u4e8e\u9488\u5bf9\u63a5\u53e3\u7f16\u7a0b\uff0c\u90a3\u4e48\u4f60\u5c31\u53ef\u4ee5\u8f7b\u6613\u7684\u5c06\u7c7b\u9002\u914d\u5668\u8f6c\u6362\u4e3a\u5bf9\u8c61\u9002\u914d\u5668\u3002\u53ea\u9700\u8981\u5c06\u5176\u4e2d\u7684\u4e00\u4e2a\u7c7b\u578b\u8f6c\u6362\u4e3a\u63a5\u53e3\u5373\u53ef\u3002\u5728\u4e00\u4e9b\u535a\u5ba2\u4e2d\uff0c\u793a\u4f8b\u7a0b\u5e8f\u4e5f\u662f\u4f7f\u7528\u8be5\u65b9\u6cd5\u5b9e\u73b0\u3002","title":"\u7c7b\u9002\u914d\u5668"},{"location":"%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/#_3","text":"\u88c5\u9970\u5668\u548c\u9002\u914d\u5668\u5f88\u50cf\uff0c\u90fd\u662f\u5bf9\u73b0\u6709\u7684\u4e00\u4e2a\u5bf9\u8c61\u8fdb\u884c\u54cd\u5e94\u7684\u64cd\u4f5c\u3002\u4f46\u8fd9\u4e24\u8005\u8fd8\u662f\u6709\u672c\u8d28\u533a\u522b\u3002 \u9002\u914d\u5668\u7684\u672c\u8d28\u662f\u8ba9\u4e24\u4e2a \u4e0d\u517c\u5bb9 \u7684\u63a5\u53e3\u8fdb\u884c\u8f6c\u6362\uff0c\u4ece\u800c\u8ba9\u4e24\u8005\u517c\u5bb9\u3002 \u88c5\u9970\u5668\u662f\u5bf9\u73b0\u6709\u5bf9\u8c61\u884c\u4e3a\u8fdb\u884c\u7684\u6269\u5c55\uff0c\u534a\u900f\u660e\u88c5\u9970\u5668\u4f1a\u5bf9\u73b0\u6709\u5bf9\u8c61\u8fdb\u884c\u884c\u4e3a\u7684\u589e\u52a0\uff0c\u4f46\u662f\u88c5\u9970\u5668\u4e0e\u73b0\u6709\u5bf9\u8c61\u5e94\u8be5\u662f\u9075\u5faa\u76f8\u540c\u7684\u63a5\u53e3\u3002","title":"\u8ba8\u8bba\uff1a\u88c5\u9970\u5668\u4e0e\u9002\u914d\u5668"}]}